{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage","program":"/Users/kentarovadney/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","ink_storage","--edition=2018","/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"criterion\"","--cfg","feature=\"ink_metadata\"","--cfg","feature=\"scale-info\"","--cfg","feature=\"std\"","-C","metadata=250cb6f890d73351","-C","extra-filename=-250cb6f890d73351","--out-dir","/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps","-L","dependency=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps","--extern","array_init=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libarray_init-bf55f8eefcb3880b.rmeta","--extern","cfg_if=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libcfg_if-ce649a143c2aec09.rmeta","--extern","criterion=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libcriterion-c507eb3e36d78e4f.rmeta","--extern","derive_more=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libderive_more-1c2acc1ac6032ba6.dylib","--extern","ink_env=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_env-aed65d31539aeb83.rmeta","--extern","ink_metadata=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_metadata-62481fa5176d88ca.rmeta","--extern","ink_prelude=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_prelude-57976a7ef2652506.rmeta","--extern","ink_primitives=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_primitives-a503fa0e47089fed.rmeta","--extern","ink_storage_derive=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_storage_derive-56a0cd22f7cd048a.dylib","--extern","scale=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libparity_scale_codec-78bdf81a2c5d4d9b.rmeta","--extern","scale_info=/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libscale_info-d290411ae880754a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kentarovadney/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/kentarovadney/Desktop/code/contract-play/target/rls/debug/deps/libink_storage-250cb6f890d73351.rmeta"},"prelude":{"crate_id":{"name":"ink_storage","disambiguator":[7366814943693357055,9711502456866394253]},"crate_root":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src","external_crates":[{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6953153704133384382,11230793172500241849]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","num":2,"id":{"name":"core","disambiguator":[5677981802051829033,13623687576168491111]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12560447239807209171,6398585695143860785]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12638775034072548080,6787576177321175622]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3743762522383775230,10045108273665421780]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16091063112996212369,11610638991537936703]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11693940743152699348,13392972289054827706]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17914957437356211762,10107084326163003549]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15573676571072571414,14269093709728855861]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12469906492453996505,933652555562277705]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7052149414613871245,14818678141461695257]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10500616641901135021,6169421002700461480]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[243686320259171084,9282031573790882050]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16840586979963248457,17899577842709795526]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9390337894408583044,6451986232102498129]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":16,"id":{"name":"ink_env","disambiguator":[16668908368061413935,11779317715587269249]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":17,"id":{"name":"ink_primitives","disambiguator":[2540570732683314986,13471661136443115404]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","num":18,"id":{"name":"scale_info","disambiguator":[6326579194020180848,10759427744380932638]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","num":19,"id":{"name":"cfg_if","disambiguator":[16432708394376806857,4487707050805680853]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":20,"id":{"name":"serde","disambiguator":[2980229166685012023,8001564341309090931]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":21,"id":{"name":"serde_derive","disambiguator":[7151120341855683207,11661927288904470465]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":22,"id":{"name":"parity_scale_codec","disambiguator":[14823370254648289575,16027885139603973172]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":23,"id":{"name":"parity_scale_codec_derive","disambiguator":[1988122162002026503,8484271369501467560]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":24,"id":{"name":"arrayvec","disambiguator":[10427986899679931356,7861720563047046261]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":25,"id":{"name":"byte_slice_cast","disambiguator":[6776746928544000793,9328931963835531020]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":26,"id":{"name":"derive_more","disambiguator":[4641594136452950396,12096601435042693016]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":27,"id":{"name":"scale_info_derive","disambiguator":[14086912790332162100,12168144091110475348]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":28,"id":{"name":"num_traits","disambiguator":[10633126096512430180,5498981301880171349]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":29,"id":{"name":"sp_arithmetic","disambiguator":[10941839783737881069,6444251724055579103]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":30,"id":{"name":"sp_std","disambiguator":[2651960497080006058,10926157196179109272]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":31,"id":{"name":"integer_sqrt","disambiguator":[3254895599552719291,7299121360710360492]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":32,"id":{"name":"sp_debug_derive","disambiguator":[11988591913493738953,12880080652083027104]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":33,"id":{"name":"static_assertions","disambiguator":[16193092693657933286,12120882871544885988]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":34,"id":{"name":"arrayref","disambiguator":[3343815518442833056,5293114670582144776]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","num":35,"id":{"name":"ink_prelude","disambiguator":[10741368519384947974,16289482999171139177]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":36,"id":{"name":"rand","disambiguator":[17014538497852639940,17042036905233445527]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":37,"id":{"name":"rand_core","disambiguator":[16875764584745054421,7289559104824932609]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":38,"id":{"name":"getrandom","disambiguator":[3837388968365082918,18049885193410367969]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":39,"id":{"name":"libc","disambiguator":[6242505741141537807,3469708055833382811]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":40,"id":{"name":"rand_chacha","disambiguator":[12279968849707398765,5293940052886451158]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":41,"id":{"name":"ppv_lite86","disambiguator":[14435608322651981576,2012739567980926941]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":42,"id":{"name":"blake2","disambiguator":[9719031034390145808,9963635449400900199]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":43,"id":{"name":"digest","disambiguator":[3095493531450380945,1939113570761200293]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":44,"id":{"name":"generic_array","disambiguator":[13244787281479867054,11278904211461394394]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":45,"id":{"name":"typenum","disambiguator":[97527345352513967,10386057831544888202]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":46,"id":{"name":"crypto_mac","disambiguator":[785321400280339325,9982303252391673765]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":47,"id":{"name":"subtle","disambiguator":[14857725722732686464,3378869744088113290]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":48,"id":{"name":"opaque_debug","disambiguator":[7598820921642025532,11353063973879724846]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":49,"id":{"name":"sha3","disambiguator":[4668118468922266317,16883703734602872769]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":50,"id":{"name":"block_buffer","disambiguator":[17526956591110847882,12012230892305444804]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":51,"id":{"name":"block_padding","disambiguator":[2112403616294995594,11779906525163931005]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":52,"id":{"name":"keccak","disambiguator":[12876193185443934696,3277303243598426796]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","num":53,"id":{"name":"sha2","disambiguator":[17613890210896177632,7572592900382924343]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","num":54,"id":{"name":"ink_metadata","disambiguator":[17046830517294834371,9885125561647934525]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","num":55,"id":{"name":"impl_serde","disambiguator":[13019365636400865339,15796801444472729814]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/arrays.rs","num":56,"id":{"name":"array_init","disambiguator":[3949242891847660773,11803857587295787865]}},{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","num":57,"id":{"name":"ink_storage_derive","disambiguator":[689695859876509202,12506494919908801023]}}],"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":612,"byte_end":1902,"line_start":15,"line_end":70,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4089},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5736,"byte_end":5753,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"alias_span":null,"name":"DynamicAllocation","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4090},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5736,"byte_end":5753,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"alias_span":null,"name":"DynamicAllocation","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4147},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5766,"byte_end":5769,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"alias_span":null,"name":"Box","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4154},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5781,"byte_end":5794,"line_start":83,"line_end":83,"column_start":11,"column_end":24},"alias_span":null,"name":"ContractPhase","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4271},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40181,"byte_end":40185,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":293}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40204,"byte_end":40211,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"alias_span":null,"name":"Reverse","value":"","parent":{"krate":0,"index":293}},{"kind":"Use","ref_id":{"krate":0,"index":4423},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86409,"byte_end":86418,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"alias_span":null,"name":"BitRefMut","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86433,"byte_end":86441,"line_start":31,"line_end":31,"column_start":14,"column_end":22},"alias_span":null,"name":"ChunkRef","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4501},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86463,"byte_end":86471,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"alias_span":null,"name":"BitsIter","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4515},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86481,"byte_end":86492,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"alias_span":null,"name":"BitsIterMut","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4548},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131936,"byte_end":131940,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4572},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131946,"byte_end":131953,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4620},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131959,"byte_end":131963,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4585},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131969,"byte_end":131975,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4608},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131981,"byte_end":131990,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"ValuesMut","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4672},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168970,"byte_end":168974,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1671}},{"kind":"Use","ref_id":{"krate":0,"index":4697},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168980,"byte_end":168987,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1671}},{"kind":"Use","ref_id":{"krate":0,"index":4720},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":188833,"byte_end":188837,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1902}},{"kind":"Use","ref_id":{"krate":0,"index":4738},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":188843,"byte_end":188850,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1902}},{"kind":"Use","ref_id":{"krate":0,"index":4848},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227185,"byte_end":227189,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":2211}},{"kind":"Use","ref_id":{"krate":0,"index":4865},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227195,"byte_end":227202,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":2211}},{"kind":"Use","ref_id":{"krate":0,"index":4320},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38356,"byte_end":38366,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4409},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38382,"byte_end":38390,"line_start":32,"line_end":32,"column_start":15,"column_end":23},"alias_span":null,"name":"BitStash","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4543},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38404,"byte_end":38410,"line_start":33,"line_end":33,"column_start":13,"column_end":19},"alias_span":null,"name":"Bitvec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4635},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38425,"byte_end":38432,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4766},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38445,"byte_end":38450,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"alias_span":null,"name":"Stash","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38461,"byte_end":38464,"line_start":36,"line_end":36,"column_start":10,"column_end":13},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4710},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38509,"byte_end":38517,"line_start":40,"line_end":40,"column_start":25,"column_end":33},"alias_span":null,"name":"SmallVec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":2913},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248529,"byte_end":248538,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"alias_span":null,"name":"LazyArray","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248690,"byte_end":248698,"line_start":46,"line_end":46,"column_start":16,"column_end":24},"alias_span":null,"name":"LazyCell","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":2543},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248715,"byte_end":248726,"line_start":47,"line_end":47,"column_start":16,"column_end":27},"alias_span":null,"name":"LazyHashMap","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":3181},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248743,"byte_end":248755,"line_start":48,"line_end":48,"column_start":16,"column_end":28},"alias_span":null,"name":"LazyIndexMap","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":3989},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432057,"byte_end":432075,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"alias_span":null,"name":"LayoutCryptoHasher","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3987},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432081,"byte_end":432094,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"StorageLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432302,"byte_end":432322,"line_start":49,"line_end":49,"column_start":9,"column_end":29},"alias_span":null,"name":"forward_clear_packed","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3809},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432332,"byte_end":432351,"line_start":50,"line_end":50,"column_start":9,"column_end":28},"alias_span":null,"name":"forward_pull_packed","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432361,"byte_end":432380,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"alias_span":null,"name":"forward_push_packed","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432411,"byte_end":432420,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"alias_span":null,"name":"ExtKeyPtr","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":17,"index":128},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432430,"byte_end":432436,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"alias_span":null,"name":"KeyPtr","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432457,"byte_end":432469,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"alias_span":null,"name":"PackedLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432493,"byte_end":432505,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"alias_span":null,"name":"SpreadLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":3874},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432515,"byte_end":432542,"line_start":60,"line_end":60,"column_start":9,"column_end":36},"alias_span":null,"name":"FOOTPRINT_CLEANUP_THRESHOLD","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":57,"index":82},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432590,"byte_end":432602,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"alias_span":null,"name":"PackedLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":57,"index":81},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432608,"byte_end":432620,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"alias_span":null,"name":"SpreadLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":57,"index":83},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432626,"byte_end":432639,"line_start":66,"line_end":66,"column_start":5,"column_end":18},"alias_span":null,"name":"StorageLayout","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":0,"index":4147},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"alias_span":null,"name":"Box","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":66,"line_end":66,"column_start":18,"column_end":21},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4975},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1858,"byte_end":1862,"line_start":67,"line_end":67,"column_start":11,"column_end":15},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4981},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1876,"byte_end":1882,"line_start":68,"line_end":68,"column_start":13,"column_end":19},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5013},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1894,"byte_end":1898,"line_start":69,"line_end":69,"column_start":11,"column_end":15},"alias_span":null,"name":"Pack","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":612,"byte_end":1902,"line_start":15,"line_end":70,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":292},{"krate":0,"index":2456},{"krate":0,"index":3364},{"krate":0,"index":3456},{"krate":0,"index":3584},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4077},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4086}],"decl_id":null,"docs":" The `ink_storage` utilities used to manipulate and organize contract storage.","sig":null,"attributes":[{"value":"/ The `ink_storage` utilities used to manipulate and organize contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":612,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":694,"byte_end":697,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Mainly provides entities to work on a contract's storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":698,"byte_end":758,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ as well as high-level collections on top of those.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":759,"byte_end":813,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/ Also provides environmental utilities, such as storage allocators,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":814,"byte_end":884,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ FFI to interface with FRAME contracts and a primitive blockchain","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":885,"byte_end":953,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ emulator for simple off-chain testing.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":954,"byte_end":996,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"deny(missing_docs, bad_style, bare_trait_objects, const_err,\n       improper_ctypes, non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused_allocation,\n       unused_comparisons, unused_parens, while_true, trivial_casts,\n       trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1041,"byte_end":1494,"line_start":24,"line_end":44,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alloc","qualname":"::alloc","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":79},{"krate":0,"index":239},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" The default dynamic storage allocator.","sig":null,"attributes":[{"value":"/ The default dynamic storage allocator.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2516,"byte_end":2558,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2559,"byte_end":2562,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to allocate storage cells in a dynamic fashion.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2563,"byte_end":2621,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ This is important if users want to combine types of varying storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2622,"byte_end":2693,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ footprints. For example, dynamic allocations are required whenever","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2694,"byte_end":2764,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ a user wants to use a storage collection (e.g. `storage::Vec`) in","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2765,"byte_end":2834,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ another storage collection: `storage::Vec<storage::Vec<T>>`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2835,"byte_end":2898,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2899,"byte_end":2902,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Simplification","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2903,"byte_end":2923,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2924,"byte_end":2927,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The contracts pallet is using 256-bit keys for identifying storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":2928,"byte_end":3005,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ This implies a storage space of `2^256` cells which is big enough to say that","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3006,"byte_end":3087,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ there are probably never going to happen collisions anywhere at any time","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3088,"byte_end":3164,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ if keys are chosen randomly. Using the built-in crypto hashers on unique","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3165,"byte_end":3241,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ input we can be sure that there are never going to be collisions in this","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3242,"byte_end":3318,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ space of `2^256` cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3319,"byte_end":3346,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3347,"byte_end":3350,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This way we can reduce the problem of finding another region in our storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3351,"byte_end":3430,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ that fits certain requirements (e.g. a minimum size) to the problem of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3431,"byte_end":3505,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ finding another uniform slot. Since we are on 32-bit WebAssembly we have","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3506,"byte_end":3582,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ memory limitations that make it impractical to have more than `2^32` dynamic","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3583,"byte_end":3663,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ allocated entities, so we can create another limitation for having a total of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3664,"byte_end":3745,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ `2^32` dynamic allocations at any point in time.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3746,"byte_end":3798,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ This enables us to have 32-bit keys instead of 256-bit keys.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3799,"byte_end":3863,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3864,"byte_end":3867,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ We can convert such 32-bit keys (represented by e.g. a `u32`) into 256-bit","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3868,"byte_end":3946,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ keys by using one of the built-in crypto hashes that has a 256-bit output,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":3947,"byte_end":4025,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ e.g. KECCAK, SHA-2 or BLAKE-2. For technical reasons we should prepend the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4026,"byte_end":4104,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ bytes of the 32-bit key by some unique byte sequence, e.g.:","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4105,"byte_end":4168,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/ ```no_compile","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4169,"byte_end":4186,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ let key256 = blake2x256(b\"DYNAMICALLY ALLOCATED\", bytes(key32));","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4187,"byte_end":4255,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4256,"byte_end":4263,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4264,"byte_end":4267,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Internals","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4268,"byte_end":4283,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4284,"byte_end":4287,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ As described in [# Simplification] there are `2^32` possible uniform dynamic","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4288,"byte_end":4368,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ allocations available. For each such slot the dynamic allocator stores via","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4369,"byte_end":4447,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ a single bit in a bitvector if that slot is free or occupied.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4448,"byte_end":4513,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ This bitvector is called the `free` list.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4514,"byte_end":4559,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ However, searching in this `free` list for a 0 bit and thus a free slot","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4560,"byte_end":4635,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ for a dynamic allocation would mean that for every 256 consecutively","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4636,"byte_end":4708,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ occupied dynamic allocations there was a contract storage lookup required.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4709,"byte_end":4787,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ This might seem a lot but given that there could be thousands or","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4788,"byte_end":4856,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ tens of thousands of dynamic allocations at any given time this might not scale","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4857,"byte_end":4940,"line_start":58,"line_end":58,"column_start":1,"column_end":84}},{"value":"/ well.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4941,"byte_end":4950,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ For the reason of improving scalability we added another vector: the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":4951,"byte_end":5023,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ so-called `set_bits` vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5024,"byte_end":5056,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ In this vector every `u8` element densely stores the number of set bits","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5057,"byte_end":5132,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ (bits that are `1` or `true`) for each 256-bit package in the `free` list.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5133,"byte_end":5211,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ (Note that the `free` list is organized in 256-bit chunks of bits.)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5212,"byte_end":5283,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5284,"byte_end":5287,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This way, to search for an unoccupied dynamic allocation we iterate over","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5288,"byte_end":5364,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ the set-bits vector which is 32 times more dense than our `free` list.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5365,"byte_end":5439,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ The additional density implies that we can query up to 8192 potential","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5440,"byte_end":5513,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ dynamic storage allocations with a single contract storage look-up.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5514,"byte_end":5585,"line_start":69,"line_end":69,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":9127,"byte_end":9144,"line_start":38,"line_end":38,"column_start":12,"column_end":29},"name":"DynamicAllocation","qualname":"::alloc::allocation::DynamicAllocation","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique dynamic allocation.","sig":null,"attributes":[{"value":"/ A unique dynamic allocation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8491,"byte_end":8523,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8524,"byte_end":8527,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This can refer to a dynamically allocated storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8528,"byte_end":8587,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/ It has been created by a dynamic storage allocator.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8588,"byte_end":8643,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ The initiator of the allocation has to make sure to deallocate","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8644,"byte_end":8710,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ this dynamic allocation again using the same dynamic allocator","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8711,"byte_end":8777,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ if it is no longer in use.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8778,"byte_end":8808,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8809,"byte_end":8812,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8813,"byte_end":8823,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8824,"byte_end":8827,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Normally instances of this type are not used directly and instead","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8828,"byte_end":8897,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ a [`storage::Box`](`crate::Box`) is used instead.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":8898,"byte_end":8951,"line_start":33,"line_end":33,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":11030,"byte_end":11033,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"key","qualname":"<DynamicAllocation>::key","value":"pub fn key(Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage key associated with this dynamic allocation.\n","sig":null,"attributes":[{"value":"/ Returns the storage key associated with this dynamic allocation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10950,"byte_end":11018,"line_start":111,"line_end":111,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":4147},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18125,"byte_end":18128,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"Box","qualname":"::alloc::boxed::Box","value":"Box {  }","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150}],"decl_id":null,"docs":" A dynamically allocated storage entity.","sig":null,"attributes":[{"value":"/ A dynamically allocated storage entity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17268,"byte_end":17311,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17312,"byte_end":17315,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Users can use this in order to make certain `SpreadLayout` storage entities","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17316,"byte_end":17395,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ used in contexts that require a `PackedLayout` storage entity by simply","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17396,"byte_end":17471,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ packing the storage entity within a `storage::Box`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17472,"byte_end":17527,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17528,"byte_end":17531,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Dynamic allocations caused by the creation of `storage::Box` instances do","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17532,"byte_end":17609,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ have some limited overhead:","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17610,"byte_end":17641,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17642,"byte_end":17645,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - The dynamic allocation itself has to be provided by some dynamic storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17646,"byte_end":17724,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/   allocator that needs to be invoked.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17725,"byte_end":17766,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ - Each dynamic storage allocation implies roughly 1.12 bits of overhead.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17767,"byte_end":17843,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ - Upon ever first dereferencing of a `storage::Box` instance a cryptographic","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17844,"byte_end":17924,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/   hash routine is run in order to compute the underlying storage key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17925,"byte_end":17998,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":17999,"byte_end":18002,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Use this abstraction with caution due to the aforementioned performance","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18003,"byte_end":18078,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ implications.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18079,"byte_end":18096,"line_start":47,"line_end":47,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18425,"byte_end":18428,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Box<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new boxed entity.\n","sig":null,"attributes":[{"value":"/ Creates a new boxed entity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18382,"byte_end":18413,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19266,"byte_end":19269,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"get","qualname":"<Box<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the boxed value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the boxed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18970,"byte_end":19020,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19025,"byte_end":19028,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19033,"byte_end":19043,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19048,"byte_end":19051,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the pointed to contract storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19056,"byte_end":19117,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/ if this did not happen before.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19122,"byte_end":19156,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19161,"byte_end":19164,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19169,"byte_end":19181,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19186,"byte_end":19189,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19194,"byte_end":19238,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19243,"byte_end":19254,"line_start":99,"line_end":99,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19624,"byte_end":19631,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Box<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the boxed value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the boxed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19324,"byte_end":19378,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19383,"byte_end":19386,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19391,"byte_end":19401,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19406,"byte_end":19409,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the pointed to contract storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19414,"byte_end":19475,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ if this did not happen before.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19480,"byte_end":19514,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19519,"byte_end":19522,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19527,"byte_end":19539,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19544,"byte_end":19547,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19552,"byte_end":19596,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":19601,"byte_end":19612,"line_start":114,"line_end":114,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4155},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28658,"byte_end":28664,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Deploy","qualname":"::alloc::init::ContractPhase::Deploy","value":"ContractPhase::Deploy","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":" Initializes the global dynamic storage allocator from scratch.","sig":null,"attributes":[{"value":"/ Initializes the global dynamic storage allocator from scratch.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28453,"byte_end":28519,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28524,"byte_end":28527,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Upon initialization, it will be created from scratch as if the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28532,"byte_end":28598,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ contract has been deployed for the first time.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28603,"byte_end":28653,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28956,"byte_end":28960,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Call","qualname":"::alloc::init::ContractPhase::Call","value":"ContractPhase::Call","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":" Initializes the global dynamic storage allocator from storage.","sig":null,"attributes":[{"value":"/ Initializes the global dynamic storage allocator from storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28670,"byte_end":28736,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28741,"byte_end":28744,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Upon initialization, the dynamic storage allocator will be pulled","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28749,"byte_end":28818,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ from the contract storage with the assumption that a former","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28823,"byte_end":28886,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ contract deployment has already taken place in the past.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28891,"byte_end":28951,"line_start":44,"line_end":44,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28433,"byte_end":28446,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"ContractPhase","qualname":"::alloc::init::ContractPhase","value":"pub enum ContractPhase { Deploy, Call, }","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4157}],"decl_id":null,"docs":" The phase in which a contract execution can be.\n","sig":null,"attributes":[{"value":"/ The phase in which a contract execution can be.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":28327,"byte_end":28378,"line_start":32,"line_end":32,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":287},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5853,"byte_end":5858,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"alloc","qualname":"::alloc::alloc","value":"pub fn alloc() -> DynamicAllocation","parent":null,"children":[],"decl_id":null,"docs":" Returns a new dynamic storage allocation.\n","sig":null,"attributes":[{"value":"/ Returns a new dynamic storage allocation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5800,"byte_end":5845,"line_start":86,"line_end":86,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":288},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6102,"byte_end":6106,"line_start":95,"line_end":95,"column_start":8,"column_end":12},"name":"free","qualname":"::alloc::free","value":"pub fn free(DynamicAllocation)","parent":null,"children":[],"decl_id":null,"docs":" Frees the given dynamic storage allocation.","sig":null,"attributes":[{"value":"/ Frees the given dynamic storage allocation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5934,"byte_end":5981,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5982,"byte_end":5985,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This makes the given dynamic storage allocation available again","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":5986,"byte_end":6053,"line_start":93,"line_end":93,"column_start":1,"column_end":68}},{"value":"/ for new dynamic storage allocations.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6054,"byte_end":6094,"line_start":94,"line_end":94,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7171,"byte_end":7181,"line_start":117,"line_end":117,"column_start":8,"column_end":18},"name":"initialize","qualname":"::alloc::initialize","value":"pub fn initialize(ContractPhase)","parent":null,"children":[],"decl_id":null,"docs":" Tells the global dynamic storage allocator instance how it shall initialize.","sig":null,"attributes":[{"value":"/ Tells the global dynamic storage allocator instance how it shall initialize.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6205,"byte_end":6285,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6286,"byte_end":6289,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6290,"byte_end":6300,"line_start":101,"line_end":101,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6301,"byte_end":6304,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Normally users of ink! do not have to call this function directly as it is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6305,"byte_end":6383,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ automatically being use in the correct order and way by the generated code.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6384,"byte_end":6463,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6464,"byte_end":6467,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ - The `phase` parameter describes for which execution phase the dynamic","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6468,"byte_end":6543,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/   storage allocator needs to be initialized since this is different","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6544,"byte_end":6615,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/   in contract instantiations and calls.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6616,"byte_end":6659,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ - This has to be issued before the first interaction with the global allocator.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6660,"byte_end":6743,"line_start":109,"line_end":109,"column_start":1,"column_end":84}},{"value":"/ - The actual instantiation will happen only upon the first interaction with","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6744,"byte_end":6823,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/   the global allocator, e.g. using the `alloc` or `free` calls. Until then,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6824,"byte_end":6903,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/   it remains uninitialized.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6904,"byte_end":6935,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6936,"byte_end":6939,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ If this function is not called before the first global allocator interaction","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":6940,"byte_end":7020,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ then the default initialization scheme is for contract instantiation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7021,"byte_end":7094,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ However, this behavior might change and must not be relied upon.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7095,"byte_end":7163,"line_start":116,"line_end":116,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":291},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7744,"byte_end":7752,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"finalize","qualname":"::alloc::finalize","value":"pub fn finalize()","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the global dynamic storage allocator instance.","sig":null,"attributes":[{"value":"/ Finalizes the global dynamic storage allocator instance.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7238,"byte_end":7298,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7299,"byte_end":7302,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This pushes all the accumulated state from this contract execution back to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7303,"byte_end":7381,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ the contract storage to be used in the next contract execution for the same","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7382,"byte_end":7461,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ contract instance.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7462,"byte_end":7484,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7485,"byte_end":7488,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The global dynamic storage allocator must not be used after this!","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7489,"byte_end":7558,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7559,"byte_end":7562,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7563,"byte_end":7573,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7574,"byte_end":7577,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Normally users of ink! do not have to call this function directly as it is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7578,"byte_end":7656,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ automatically being use in the correct order and way by the generated code.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/mod.rs","byte_start":7657,"byte_end":7736,"line_start":132,"line_end":132,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":292},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":630},{"krate":0,"index":739},{"krate":0,"index":1145},{"krate":0,"index":1671},{"krate":0,"index":1902},{"krate":0,"index":2211},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452}],"decl_id":null,"docs":" High-level collections used to manage storage entities in the persisted\n contract storage.","sig":null,"attributes":[{"value":"/ High-level collections used to manage storage entities in the persisted","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":37945,"byte_end":38020,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38021,"byte_end":38042,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38043,"byte_end":38046,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users should generally use these collections in their contracts directly","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38047,"byte_end":38123,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ or as building blocks for their collections and algorithms.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38124,"byte_end":38187,"line_start":19,"line_end":19,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":293},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":358},{"krate":0,"index":437},{"krate":0,"index":459},{"krate":0,"index":504},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":4320},{"krate":0,"index":4337},{"krate":0,"index":4331},{"krate":0,"index":4333},{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4323},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":626}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":39766,"byte_end":39818,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":39819,"byte_end":39822,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Insertion and popping the largest element have `O(log(n))` complexity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":39823,"byte_end":39897,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ Checking the largest element is `O(1)`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":39898,"byte_end":39941,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54457,"byte_end":54468,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"ChildrenVec","qualname":"::collections::binary_heap::children_vec::ChildrenVec","value":"ChildrenVec {  }","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253}],"decl_id":null,"docs":" Provides an interface for accessing elements in the `BinaryHeap`.","sig":null,"attributes":[{"value":"/ Provides an interface for accessing elements in the `BinaryHeap`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54033,"byte_end":54102,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54103,"byte_end":54106,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Elements of the heap are stored in a vector of `Children` objects, whereby","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54107,"byte_end":54185,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ each `Children` object contains two elements. When operating on indices of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54186,"byte_end":54264,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ the `BinaryHeap`, this interface transposes heap indices to the child inside","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54265,"byte_end":54345,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ the `Children` object, in which the element is stored.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":54346,"byte_end":54404,"line_start":39,"line_end":39,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56247,"byte_end":56250,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<ChildrenVec<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage heap.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56184,"byte_end":56221,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56226,"byte_end":56235,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56476,"byte_end":56479,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"len","qualname":"<ChildrenVec<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the heap, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the heap, also referred to as its length.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56371,"byte_end":56450,"line_start":101,"line_end":101,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56455,"byte_end":56464,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56825,"byte_end":56833,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ChildrenVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the heap contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the heap contains no elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56747,"byte_end":56799,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56804,"byte_end":56813,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57012,"byte_end":57015,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<ChildrenVec<T>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56886,"byte_end":56940,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56945,"byte_end":56948,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56953,"byte_end":57000,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57293,"byte_end":57300,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ChildrenVec<T>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.\n The element in a `Children` is an `Option<T>`.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57108,"byte_end":57166,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ The element in a `Children` is an `Option<T>`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57171,"byte_end":57221,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57226,"byte_end":57229,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57234,"byte_end":57281,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57581,"byte_end":57585,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"swap","qualname":"<ChildrenVec<T>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57442,"byte_end":57486,"line_start":136,"line_end":136,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57491,"byte_end":57494,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57499,"byte_end":57511,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57516,"byte_end":57519,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":57524,"byte_end":57569,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58398,"byte_end":58409,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<ChildrenVec<T>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the element at `index` from the heap and returns it.","sig":null,"attributes":[{"value":"/ Removes the element at `index` from the heap and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58176,"byte_end":58240,"line_start":158,"line_end":158,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58245,"byte_end":58248,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The last element of the heap is put into the slot at `index`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58253,"byte_end":58318,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ Returns `None` and does not mutate the heap if it is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58323,"byte_end":58386,"line_start":161,"line_end":161,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58872,"byte_end":58876,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"iter","qualname":"<ChildrenVec<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the heap.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58583,"byte_end":58662,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58667,"byte_end":58670,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58675,"byte_end":58685,"line_start":172,"line_end":172,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58690,"byte_end":58693,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage heaps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58698,"byte_end":58751,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58756,"byte_end":58831,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58836,"byte_end":58860,"line_start":176,"line_end":176,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59004,"byte_end":59009,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"first","qualname":"<ChildrenVec<T>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":58933,"byte_end":58992,"line_start":181,"line_end":181,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59202,"byte_end":59211,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ChildrenVec<T>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59127,"byte_end":59190,"line_start":189,"line_end":189,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59630,"byte_end":59635,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"clear","qualname":"<ChildrenVec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this heap.","sig":null,"attributes":[{"value":"/ Removes all elements from this heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59341,"byte_end":59381,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59386,"byte_end":59389,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59394,"byte_end":59404,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59409,"byte_end":59412,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the heap instead of e.g. iterative `pop()`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59417,"byte_end":59489,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59494,"byte_end":59566,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59571,"byte_end":59618,"line_start":203,"line_end":203,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59841,"byte_end":59845,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"push","qualname":"<ChildrenVec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the heap.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":59782,"byte_end":59829,"line_start":212,"line_end":212,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63309,"byte_end":63313,"line_start":312,"line_end":312,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::children_vec::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276}],"decl_id":null,"docs":" An iterator over shared references to the elements of the `BinaryHeap`.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of the `BinaryHeap`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63192,"byte_end":63267,"line_start":310,"line_end":310,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63682,"byte_end":63685,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(&'a ChildrenVec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator for the given heap elements.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator for the given heap elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63615,"byte_end":63670,"line_start":328,"line_end":328,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4288},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67298,"byte_end":67305,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Reverse","qualname":"::collections::binary_heap::reverse::Reverse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for [`core::cmp::Reverse`] for using a [`BinaryHeap`](`super::BinaryHeap`) as a\n min-heap.\n","sig":null,"attributes":[{"value":"/ Wrapper for [`core::cmp::Reverse`] for using a [`BinaryHeap`](`super::BinaryHeap`) as a","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67110,"byte_end":67201,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ min-heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67202,"byte_end":67215,"line_start":32,"line_end":32,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67457,"byte_end":67460,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Reverse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Reverse`] from the given value.\n","sig":null,"attributes":[{"value":"/ Construct a new [`Reverse`] from the given value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67392,"byte_end":67445,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67593,"byte_end":67598,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"value","qualname":"<Reverse<T>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Return a shared reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Return a shared reference to the inner value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67532,"byte_end":67581,"line_start":45,"line_end":45,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40612,"byte_end":40622,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::collections::binary_heap::BinaryHeap","value":"BinaryHeap {  }","parent":null,"children":[{"krate":0,"index":4322}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40214,"byte_end":40266,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40267,"byte_end":40270,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40271,"byte_end":40281,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40282,"byte_end":40285,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The heap is a *max-heap* by default, i.e. the first element is the largest.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40286,"byte_end":40365,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ Either [`Reverse`] or a custom `Ord` implementation can be used to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40366,"byte_end":40436,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ make `BinaryHeap` a *min-heap*. This then makes `heap.pop()` return the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40437,"byte_end":40512,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ smallest value instead of the largest one.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40513,"byte_end":40559,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40849,"byte_end":40852,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryHeap<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage heap.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40800,"byte_end":40837,"line_start":59,"line_end":59,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41034,"byte_end":41037,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"len","qualname":"<BinaryHeap<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the heap, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the heap, also referred to as its length.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40943,"byte_end":41022,"line_start":66,"line_end":66,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41157,"byte_end":41165,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinaryHeap<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the heap contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the heap contains no elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41093,"byte_end":41145,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41569,"byte_end":41573,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"iter","qualname":"<BinaryHeap<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the heap.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41286,"byte_end":41365,"line_start":81,"line_end":81,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41370,"byte_end":41373,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41378,"byte_end":41388,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41393,"byte_end":41396,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over large heaps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41401,"byte_end":41448,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41453,"byte_end":41528,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41533,"byte_end":41557,"line_start":87,"line_end":87,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41764,"byte_end":41768,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinaryHeap<T>>::peek","value":"pub fn peek(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the greatest element of the heap","sig":null,"attributes":[{"value":"/ Returns a shared reference to the greatest element of the heap","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41634,"byte_end":41700,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41705,"byte_end":41708,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41713,"byte_end":41752,"line_start":94,"line_end":94,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42488,"byte_end":42496,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<BinaryHeap<T>>::peek_mut","value":"pub fn peek_mut(&mut Self) -> Option<PeekMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the greatest element of the heap","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the greatest element of the heap","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41833,"byte_end":41903,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41908,"byte_end":41911,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41916,"byte_end":41955,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41960,"byte_end":41963,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Note:","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41968,"byte_end":41979,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41984,"byte_end":41987,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If the `PeekMut` value is leaked, the heap may be in an inconsistent state.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41992,"byte_end":42071,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42076,"byte_end":42079,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42084,"byte_end":42097,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42102,"byte_end":42105,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42110,"byte_end":42117,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use ink_storage::collections::BinaryHeap;","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42122,"byte_end":42167,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/ let mut heap = BinaryHeap::new();","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42172,"byte_end":42209,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ assert!(heap.peek_mut().is_none());","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42214,"byte_end":42253,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42258,"byte_end":42261,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ heap.push(1);","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42266,"byte_end":42283,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/ heap.push(5);","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42288,"byte_end":42305,"line_start":115,"line_end":115,"column_start":5,"column_end":22}},{"value":"/ heap.push(2);","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42310,"byte_end":42327,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ {","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42332,"byte_end":42337,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/     let mut val = heap.peek_mut().unwrap();","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42342,"byte_end":42389,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/     *val = 0;","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42394,"byte_end":42411,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42416,"byte_end":42421,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(heap.peek(), Some(&2));","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42426,"byte_end":42464,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":42469,"byte_end":42476,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43572,"byte_end":43575,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinaryHeap<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops greatest element from the heap and returns it","sig":null,"attributes":[{"value":"/ Pops greatest element from the heap and returns it","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43454,"byte_end":43508,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43513,"byte_end":43516,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43521,"byte_end":43560,"line_start":157,"line_end":157,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44053,"byte_end":44058,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"clear","qualname":"<BinaryHeap<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this heap.","sig":null,"attributes":[{"value":"/ Removes all elements from this heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43764,"byte_end":43804,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43809,"byte_end":43812,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43817,"byte_end":43827,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43832,"byte_end":43835,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the heap instead of e.g. iterative `pop()`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43840,"byte_end":43912,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43917,"byte_end":43989,"line_start":170,"line_end":170,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":43994,"byte_end":44041,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44625,"byte_end":44629,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"push","qualname":"<BinaryHeap<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given element to the binary heap.\n","sig":null,"attributes":[{"value":"/ Pushes the given element to the binary heap.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44565,"byte_end":44613,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44934,"byte_end":44941,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"PeekMut","qualname":"::collections::binary_heap::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the greatest item on a\n [`BinaryHeap`].","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the greatest item on a","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44761,"byte_end":44829,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/ [`BinaryHeap`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44830,"byte_end":44849,"line_start":203,"line_end":203,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44850,"byte_end":44853,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`BinaryHeap::peek_mut`] method.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44854,"byte_end":44922,"line_start":205,"line_end":205,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":46268,"byte_end":46271,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMut>::pop","value":"pub fn pop(PeekMut) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":46198,"byte_end":46256,"line_start":259,"line_end":259,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":630},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitstash","qualname":"::collections::bitstash","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":652},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":4409},{"krate":0,"index":4421},{"krate":0,"index":4419},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":732}],"decl_id":null,"docs":" Storage bit stash data structure and utilities.","sig":null,"attributes":[{"value":"/ Storage bit stash data structure and utilities.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":72648,"byte_end":72699,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":72700,"byte_end":72703,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to compactly and efficiently put and take bits in a compressed","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":72704,"byte_end":72777,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ and very efficient way.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":72778,"byte_end":72805,"line_start":18,"line_end":18,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4409},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":73327,"byte_end":73335,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"BitStash","qualname":"::collections::bitstash::BitStash","value":"BitStash {  }","parent":null,"children":[{"krate":0,"index":4410},{"krate":0,"index":4411}],"decl_id":null,"docs":" A stash for bits operating on the contract storage.","sig":null,"attributes":[{"value":"/ A stash for bits operating on the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":73101,"byte_end":73156,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":73157,"byte_end":73160,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Allows to efficiently put and take bits and","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":73161,"byte_end":73208,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ stores the underlying bits in an extremely compressed format.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":73209,"byte_end":73274,"line_start":41,"line_end":41,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":74283,"byte_end":74286,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<BitStash>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new storage bit stash.\n","sig":null,"attributes":[{"value":"/ Creates a new storage bit stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":74235,"byte_end":74271,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75729,"byte_end":75732,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"get","qualname":"<BitStash>::get","value":"pub fn get(&Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit at the indexed slot is set (`1`).","sig":null,"attributes":[{"value":"/ Returns `true` if the bit at the indexed slot is set (`1`).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75592,"byte_end":75655,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75660,"byte_end":75663,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75668,"byte_end":75717,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75959,"byte_end":75962,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"put","qualname":"<BitStash>::put","value":"pub fn put(&mut Self) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Puts another set bit into the storage bit stash.","sig":null,"attributes":[{"value":"/ Puts another set bit into the storage bit stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75812,"byte_end":75864,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75869,"byte_end":75872,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns the index to the slot where the set bit has been inserted.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":75877,"byte_end":75947,"line_start":111,"line_end":111,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":78145,"byte_end":78149,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"take","qualname":"<BitStash>::take","value":"pub fn take(&mut Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Takes the bit from the given index and returns it.","sig":null,"attributes":[{"value":"/ Takes the bit from the given index and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":77858,"byte_end":77912,"line_start":157,"line_end":157,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":77917,"byte_end":77920,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the indexed bit was set (`1`).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":77925,"byte_end":77977,"line_start":159,"line_end":159,"column_start":5,"column_end":57}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":77982,"byte_end":78031,"line_start":160,"line_end":160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":78036,"byte_end":78039,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":78044,"byte_end":78054,"line_start":162,"line_end":162,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":78059,"byte_end":78062,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This frees up the indexed slot for putting in another set bit.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":78067,"byte_end":78133,"line_start":164,"line_end":164,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":739},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitvec","qualname":"::collections::bitvec","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":764},{"krate":0,"index":838},{"krate":0,"index":870},{"krate":0,"index":905},{"krate":0,"index":998},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":1113}],"decl_id":null,"docs":" Storage bit vector data structure and utilities.","sig":null,"attributes":[{"value":"/ Storage bit vector data structure and utilities.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86148,"byte_end":86200,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86201,"byte_end":86204,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to compactly and efficiently store and manipulate on single bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86205,"byte_end":86281,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4423},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95433,"byte_end":95442,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"BitRefMut","qualname":"::collections::bitvec::bitref::BitRefMut","value":"BitRefMut {  }","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":4426}],"decl_id":null,"docs":" A mutable bit access for operating on a single bit within a 256-bit pack.\n","sig":null,"attributes":[{"value":"/ A mutable bit access for operating on a single bit within a 256-bit pack.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95327,"byte_end":95404,"line_start":22,"line_end":22,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96085,"byte_end":96088,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"get","qualname":"<BitRefMut>::get","value":"pub fn get(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the indexed bit.","sig":null,"attributes":[{"value":"/ Returns the value of the indexed bit.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95938,"byte_end":95979,"line_start":45,"line_end":45,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95984,"byte_end":95987,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95992,"byte_end":96002,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96007,"byte_end":96010,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - If 0: returns `false`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96015,"byte_end":96042,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/ - If 1: returns `true`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96047,"byte_end":96073,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96221,"byte_end":96227,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"set_to","qualname":"<BitRefMut>::set_to","value":"pub fn set_to(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the indexed bit to the given new value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the indexed bit to the given new value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96148,"byte_end":96209,"line_start":55,"line_end":55,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96365,"byte_end":96368,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"set","qualname":"<BitRefMut>::set","value":"pub fn set(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the indexed bit to `1` (true).\n","sig":null,"attributes":[{"value":"/ Sets the indexed bit to `1` (true).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96314,"byte_end":96353,"line_start":60,"line_end":60,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96478,"byte_end":96483,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<BitRefMut>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the indexed bit to `0` (false).\n","sig":null,"attributes":[{"value":"/ Resets the indexed bit to `0` (false).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96424,"byte_end":96466,"line_start":65,"line_end":65,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96579,"byte_end":96583,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"flip","qualname":"<BitRefMut>::flip","value":"pub fn flip(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Flips the indexed bit.\n","sig":null,"attributes":[{"value":"/ Flips the indexed bit.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96541,"byte_end":96567,"line_start":70,"line_end":70,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96707,"byte_end":96710,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"xor","qualname":"<BitRefMut>::xor","value":"pub fn xor(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise XOR for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise XOR for the indexed bit and `rhs`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96640,"byte_end":96695,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96849,"byte_end":96852,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"and","qualname":"<BitRefMut>::and","value":"pub fn and(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise AND for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise AND for the indexed bit and `rhs`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96782,"byte_end":96837,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96990,"byte_end":96992,"line_start":86,"line_end":86,"column_start":12,"column_end":14},"name":"or","qualname":"<BitRefMut>::or","value":"pub fn or(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise OR for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise OR for the indexed bit and `rhs`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":96924,"byte_end":96978,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101595,"byte_end":101602,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Bits256","qualname":"::collections::bitvec::bits256::Bits256","value":"Bits256 {  }","parent":null,"children":[{"krate":0,"index":4431}],"decl_id":null,"docs":" A chunk of 256 bits.\n","sig":null,"attributes":[{"value":"/ A chunk of 256 bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101425,"byte_end":101449,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":105773,"byte_end":105776,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"get","qualname":"<Bits256>::get","value":"pub fn get(&Self, Index256) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns the bit value for the bit at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":105704,"byte_end":105761,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":107548,"byte_end":107567,"line_start":253,"line_end":253,"column_start":12,"column_end":31},"name":"position_first_zero","qualname":"<Bits256>::position_first_zero","value":"pub fn position_first_zero(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the first zero bit if any.\n","sig":null,"attributes":[{"value":"/ Returns the position of the first zero bit if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":107482,"byte_end":107536,"line_start":252,"line_end":252,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112009,"byte_end":112017,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"ChunkRef","qualname":"::collections::bitvec::bitsref::ChunkRef","value":"ChunkRef {  }","parent":null,"children":[{"krate":0,"index":4491},{"krate":0,"index":4492}],"decl_id":null,"docs":" A reference to a sub-slice within a 256-bit chunk.","sig":null,"attributes":[{"value":"/ A reference to a sub-slice within a 256-bit chunk.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111679,"byte_end":111733,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111734,"byte_end":111737,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a reference wrapper around either a shared 256-bit chunk","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111738,"byte_end":111806,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ or an exclusive 256-bit chunk. Also it prevents accesses to out of bounds","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111807,"byte_end":111884,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111885,"byte_end":111894,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"repr(C)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":111925,"byte_end":111935,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112397,"byte_end":112400,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkRef<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the 256-bit chunk.","sig":null,"attributes":[{"value":"/ Returns the length of the 256-bit chunk.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112173,"byte_end":112217,"line_start":39,"line_end":39,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112222,"byte_end":112225,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112230,"byte_end":112240,"line_start":41,"line_end":41,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112245,"byte_end":112248,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This is the number of valid bits in the chunk of 256 bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112253,"byte_end":112315,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ The valid bits are consecutive and always start from index 0.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112320,"byte_end":112385,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112723,"byte_end":112742,"line_start":57,"line_end":57,"column_start":12,"column_end":31},"name":"position_first_zero","qualname":"<ChunkRef<&'a Bits256>>::position_first_zero","value":"pub fn position_first_zero(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the first valid zero bit if any.\n","sig":null,"attributes":[{"value":"/ Returns the position of the first valid zero bit if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112651,"byte_end":112711,"line_start":56,"line_end":56,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113081,"byte_end":113084,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"get","qualname":"<ChunkRef<&'a Bits256>>::get","value":"pub fn get(&Self, u8) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the indexed bit.","sig":null,"attributes":[{"value":"/ Returns the value of the indexed bit.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112934,"byte_end":112975,"line_start":65,"line_end":65,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112980,"byte_end":112983,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112988,"byte_end":112998,"line_start":67,"line_end":67,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113003,"byte_end":113006,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - If 0: returns `false`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113011,"byte_end":113038,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/ - If 1: returns `true`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113043,"byte_end":113069,"line_start":70,"line_end":70,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113702,"byte_end":113709,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ChunkRef<&'a mut Bits256>>::get_mut","value":"pub fn get_mut(&mut Self, u8) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns mutable access to a single bit if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Returns mutable access to a single bit if the index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113617,"byte_end":113690,"line_start":90,"line_end":90,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120256,"byte_end":120264,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"BitsIter","qualname":"::collections::bitvec::iter::BitsIter","value":"BitsIter {  }","parent":null,"children":[{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506}],"decl_id":null,"docs":" Iterator over the bits of a storage bit vector.\n","sig":null,"attributes":[{"value":"/ Iterator over the bits of a storage bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120163,"byte_end":120214,"line_start":30,"line_end":30,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":122770,"byte_end":122781,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"BitsIterMut","qualname":"::collections::bitvec::iter::BitsIterMut","value":"BitsIterMut {  }","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":4520}],"decl_id":null,"docs":" Iterator over the bits of a storage bit vector.\n","sig":null,"attributes":[{"value":"/ Iterator over the bits of a storage bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":122690,"byte_end":122741,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87184,"byte_end":87190,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Bitvec","qualname":"::collections::bitvec::Bitvec","value":"Bitvec {  }","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545}],"decl_id":null,"docs":" A storage bit vector.","sig":null,"attributes":[{"value":"/ A storage bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":86992,"byte_end":87017,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87018,"byte_end":87021,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87022,"byte_end":87032,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87033,"byte_end":87036,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Organizes its bits in chunks of 256 bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87037,"byte_end":87082,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ Allows to `push`, `pop`, inspect and manipulate the underlying bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87083,"byte_end":87155,"line_start":70,"line_end":70,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87434,"byte_end":87437,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Bitvec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty bit vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87387,"byte_end":87422,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87616,"byte_end":87619,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"len","qualname":"<Bitvec>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the bit vector in bits.\n","sig":null,"attributes":[{"value":"/ Returns the length of the bit vector in bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87555,"byte_end":87604,"line_start":90,"line_end":90,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87723,"byte_end":87731,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bitvec>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit vector is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87665,"byte_end":87711,"line_start":95,"line_end":95,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87997,"byte_end":88005,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Bitvec>::capacity","value":"pub fn capacity(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the bit vector in bits.","sig":null,"attributes":[{"value":"/ Returns the capacity of the bit vector in bits.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87784,"byte_end":87835,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87840,"byte_end":87843,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87848,"byte_end":87858,"line_start":102,"line_end":102,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87863,"byte_end":87866,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns a `u64` since it is always greater than or equal to `self.len()`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87871,"byte_end":87947,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ which itself returns a `u32`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87952,"byte_end":87985,"line_start":105,"line_end":105,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":88148,"byte_end":88152,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"bits","qualname":"<Bitvec>::bits","value":"pub fn bits(&Self) -> BitsIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the bits of the storage bit vector.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the bits of the storage bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":88072,"byte_end":88136,"line_start":110,"line_end":110,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":88297,"byte_end":88305,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"bits_mut","qualname":"<Bitvec>::bits_mut","value":"pub fn bits_mut(&mut Self) -> BitsIterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable bits of the storage bit vector.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable bits of the storage bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":88213,"byte_end":88285,"line_start":115,"line_end":115,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90131,"byte_end":90134,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"get","qualname":"<Bitvec>::get","value":"pub fn get(&Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the bit at the given index if any.\n","sig":null,"attributes":[{"value":"/ Returns the value of the bit at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90060,"byte_end":90119,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90351,"byte_end":90358,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Bitvec>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the bit at the given index if any.\n","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the bit at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90269,"byte_end":90339,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90542,"byte_end":90551,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<Bitvec>::get_chunk","value":"pub fn get_chunk(&Self, Index) -> Option<ChunkRef<&Bits256>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the 256-bit chunk for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the 256-bit chunk for the bit at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90447,"byte_end":90530,"line_start":173,"line_end":173,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91019,"byte_end":91032,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"get_chunk_mut","qualname":"<Bitvec>::get_chunk_mut","value":"pub fn get_chunk_mut(&mut Self, Index) -> Option<ChunkRef<&mut Bits256>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the 256-bit chunk for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the 256-bit chunk for the bit at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":90920,"byte_end":91007,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91554,"byte_end":91559,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"first","qualname":"<Bitvec>::first","value":"pub fn first(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns the first bit of the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91416,"byte_end":91460,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91465,"byte_end":91468,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91473,"byte_end":91483,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91488,"byte_end":91491,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91496,"byte_end":91542,"line_start":201,"line_end":201,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91841,"byte_end":91850,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Bitvec>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the first bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the first bit of the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91679,"byte_end":91747,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91752,"byte_end":91755,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91760,"byte_end":91770,"line_start":211,"line_end":211,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91775,"byte_end":91778,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91783,"byte_end":91829,"line_start":213,"line_end":213,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92127,"byte_end":92131,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"last","qualname":"<Bitvec>::last","value":"pub fn last(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns the last bit of the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":91990,"byte_end":92033,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92038,"byte_end":92041,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92046,"byte_end":92056,"line_start":223,"line_end":223,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92061,"byte_end":92064,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92069,"byte_end":92115,"line_start":225,"line_end":225,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92425,"byte_end":92433,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Bitvec>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the last bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the last bit of the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92264,"byte_end":92331,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92336,"byte_end":92339,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92344,"byte_end":92354,"line_start":235,"line_end":235,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92359,"byte_end":92362,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92367,"byte_end":92413,"line_start":237,"line_end":237,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92969,"byte_end":92973,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"push","qualname":"<Bitvec>::push","value":"pub fn push(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given value onto the bit vector.","sig":null,"attributes":[{"value":"/ Pushes the given value onto the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92729,"byte_end":92776,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92781,"byte_end":92784,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92789,"byte_end":92799,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92804,"byte_end":92807,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This increases the length of the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92812,"byte_end":92860,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92865,"byte_end":92868,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92873,"byte_end":92885,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92890,"byte_end":92893,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ If the storage bit vector reached its maximum capacity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":92898,"byte_end":92957,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94285,"byte_end":94288,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"pop","qualname":"<Bitvec>::pop","value":"pub fn pop(&mut Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last bit from the bit vector.","sig":null,"attributes":[{"value":"/ Pops the last bit from the bit vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94092,"byte_end":94134,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94139,"byte_end":94142,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns the popped bit as `bool`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94147,"byte_end":94184,"line_start":291,"line_end":291,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94189,"byte_end":94192,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94197,"byte_end":94207,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94212,"byte_end":94215,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This reduces the length of the bit vector by one.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":94220,"byte_end":94273,"line_start":295,"line_end":295,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashmap","qualname":"::collections::hashmap","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1259},{"krate":0,"index":1431},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":4635},{"krate":0,"index":4641},{"krate":0,"index":4646},{"krate":0,"index":4650},{"krate":0,"index":4669},{"krate":0,"index":4661},{"krate":0,"index":4655},{"krate":0,"index":1582},{"krate":0,"index":1588},{"krate":0,"index":1594},{"krate":0,"index":1604},{"krate":0,"index":1616},{"krate":0,"index":1621},{"krate":0,"index":1639},{"krate":0,"index":1653},{"krate":0,"index":1660}],"decl_id":null,"docs":" A storage hash map that allows to associate keys with values.\n","sig":null,"attributes":[{"value":"/ A storage hash map that allows to associate keys with values.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":131720,"byte_end":131785,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155126,"byte_end":155130,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hashmap::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4554}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155007,"byte_end":155084,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4572},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157480,"byte_end":157487,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hashmap::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4577},{"krate":0,"index":4578}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157374,"byte_end":157451,"line_start":127,"line_end":127,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4585},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159959,"byte_end":159965,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::hashmap::iter::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":4590}],"decl_id":null,"docs":" An iterator over shared references to the values of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the values of a storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159842,"byte_end":159917,"line_start":225,"line_end":225,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161537,"byte_end":161546,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::collections::hashmap::iter::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":4613}],"decl_id":null,"docs":" An iterator over exclusive references to the values of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the values of a storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161430,"byte_end":161508,"line_start":295,"line_end":295,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163146,"byte_end":163150,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::hashmap::iter::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":4623}],"decl_id":null,"docs":" An iterator over references to the keys of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the keys of a storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163038,"byte_end":163104,"line_start":365,"line_end":365,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133411,"byte_end":133418,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::collections::hashmap::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640}],"decl_id":null,"docs":" A hash map operating on the contract storage.","sig":null,"attributes":[{"value":"/ A hash map operating on the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132532,"byte_end":132581,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132582,"byte_end":132585,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Stores a mapping between keys and values.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132586,"byte_end":132631,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132632,"byte_end":132635,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132636,"byte_end":132646,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132647,"byte_end":132650,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unlike Rust's standard `HashMap` that uses the [`core::hash::Hash`] trait","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132651,"byte_end":132728,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ in order to hash its keys the storage hash map uses the [`scale::Encode`]","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132729,"byte_end":132806,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ encoding in order to hash its keys using a built-in cryptographic","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132807,"byte_end":132876,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ hash function provided by the chain runtime.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132877,"byte_end":132925,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132926,"byte_end":132929,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The main difference between the lower-level `LazyHashMap` and the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":132930,"byte_end":132999,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/ `storage::HashMap` is that the latter is aware of its associated keys and","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133000,"byte_end":133077,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ values and operates on those instances directly as opposed to `Option`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133078,"byte_end":133152,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ instances of them. Also it provides a more high-level and user focused","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133153,"byte_end":133227,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ API.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133228,"byte_end":133236,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133237,"byte_end":133240,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Users should generally prefer using this storage hash map over the low-level","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133241,"byte_end":133321,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ `LazyHashMap` for direct usage in their smart contracts.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":133322,"byte_end":133382,"line_start":81,"line_end":81,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134153,"byte_end":134166,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::collections::hashmap::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134098,"byte_end":134141,"line_start":108,"line_end":108,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134508,"byte_end":134519,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::collections::hashmap::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134439,"byte_end":134496,"line_start":120,"line_end":120,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135154,"byte_end":135160,"line_start":142,"line_end":142,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::hashmap::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135071,"byte_end":135149,"line_start":141,"line_end":141,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135237,"byte_end":135245,"line_start":144,"line_end":144,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::hashmap::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135189,"byte_end":135232,"line_start":143,"line_end":143,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134979,"byte_end":134984,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"Entry","qualname":"::collections::hashmap::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> where K: Ord + Clone + PackedLayout,\n         V: PackedLayout {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1601}],"decl_id":null,"docs":" An entry within the stash.","sig":null,"attributes":[{"value":"/ An entry within the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134788,"byte_end":134818,"line_start":132,"line_end":132,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134819,"byte_end":134822,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The vacant entries within a storage stash form a doubly linked list of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134823,"byte_end":134897,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/ vacant entries that is used to quickly re-use their vacant storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":134898,"byte_end":134969,"line_start":135,"line_end":135,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135486,"byte_end":135489,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, H>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage hash map.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135433,"byte_end":135474,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135687,"byte_end":135690,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, H>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of key-value pairs stored in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns the number of key-value pairs stored in the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135610,"byte_end":135675,"line_start":162,"line_end":162,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135966,"byte_end":135974,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, H>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the hash map is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the hash map is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135910,"byte_end":135954,"line_start":173,"line_end":173,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136350,"byte_end":136354,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, H>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all key/value pairs\n of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all key/value pairs","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136032,"byte_end":136105,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ of the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136110,"byte_end":136130,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136135,"byte_end":136138,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136143,"byte_end":136153,"line_start":181,"line_end":181,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136158,"byte_end":136161,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136166,"byte_end":136225,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136230,"byte_end":136307,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136312,"byte_end":136338,"line_start":185,"line_end":185,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136737,"byte_end":136745,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, H>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all key/value pairs\n of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all key/value pairs","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136416,"byte_end":136492,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ of the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136497,"byte_end":136517,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136522,"byte_end":136525,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136530,"byte_end":136540,"line_start":193,"line_end":193,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136545,"byte_end":136548,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136553,"byte_end":136612,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136617,"byte_end":136694,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136699,"byte_end":136725,"line_start":197,"line_end":197,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137118,"byte_end":137124,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, H>>::values","value":"pub fn values(&Self) -> Values<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all values of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all values of the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136817,"byte_end":136898,"line_start":202,"line_end":202,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136903,"byte_end":136906,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136911,"byte_end":136921,"line_start":204,"line_end":204,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136926,"byte_end":136929,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136934,"byte_end":136993,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":136998,"byte_end":137075,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137080,"byte_end":137106,"line_start":208,"line_end":208,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137491,"byte_end":137501,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, H>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all values of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all values of the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137190,"byte_end":137271,"line_start":213,"line_end":213,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137276,"byte_end":137279,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137284,"byte_end":137294,"line_start":215,"line_end":215,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137299,"byte_end":137302,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137307,"byte_end":137366,"line_start":217,"line_end":217,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137371,"byte_end":137448,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137453,"byte_end":137479,"line_start":219,"line_end":219,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137876,"byte_end":137880,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, H>>::keys","value":"pub fn keys(&Self) -> Keys<, K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all keys of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all keys of the hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137577,"byte_end":137656,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137661,"byte_end":137664,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137669,"byte_end":137679,"line_start":226,"line_end":226,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137684,"byte_end":137687,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137692,"byte_end":137751,"line_start":228,"line_end":228,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137756,"byte_end":137833,"line_start":229,"line_end":229,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137838,"byte_end":137864,"line_start":230,"line_end":230,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139537,"byte_end":139543,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, H>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139084,"byte_end":139126,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139131,"byte_end":139134,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value associated with the same key if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139139,"byte_end":139206,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139211,"byte_end":139276,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139281,"byte_end":139284,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139289,"byte_end":139299,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139304,"byte_end":139307,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ - If the map did have this key present, the value is updated,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139312,"byte_end":139377,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/   and the old value is returned. The key is not updated, though;","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139382,"byte_end":139450,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/   this matters for types that can be `==` without being identical.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":139455,"byte_end":139525,"line_start":278,"line_end":278,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140455,"byte_end":140459,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"name":"take","qualname":"<HashMap<K, V, H>>::take","value":"pub fn take<Q>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Removes the key/value pair from the map associated with the given key.","sig":null,"attributes":[{"value":"/ Removes the key/value pair from the map associated with the given key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140138,"byte_end":140212,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140217,"byte_end":140220,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ - Returns the removed value if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140225,"byte_end":140264,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140269,"byte_end":140272,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140277,"byte_end":140287,"line_start":301,"line_end":301,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140292,"byte_end":140295,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140300,"byte_end":140359,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140364,"byte_end":140443,"line_start":304,"line_end":304,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141035,"byte_end":141038,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, H>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value corresponding to the key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140798,"byte_end":140867,"line_start":317,"line_end":317,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140872,"byte_end":140875,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140880,"byte_end":140939,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":140944,"byte_end":141023,"line_start":320,"line_end":320,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141467,"byte_end":141474,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, H>>::get_mut","value":"pub fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141229,"byte_end":141299,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141304,"byte_end":141307,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141312,"byte_end":141371,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141376,"byte_end":141455,"line_start":332,"line_end":332,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141769,"byte_end":141781,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, H>>::contains_key","value":"pub fn contains_key<Q>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Ord +\nPartialEq<K> + Eq + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is an entry corresponding to the key in the map.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is an entry corresponding to the key in the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":141681,"byte_end":141757,"line_start":341,"line_end":341,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142971,"byte_end":142977,"line_start":368,"line_end":368,"column_start":12,"column_end":18},"name":"defrag","qualname":"<HashMap<K, V, H>>::defrag","value":"pub fn defrag(&mut Self, Option<u32>) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Defragments storage used by the storage hash map.","sig":null,"attributes":[{"value":"/ Defragments storage used by the storage hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142323,"byte_end":142376,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142381,"byte_end":142384,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns the number of storage cells freed this way.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142389,"byte_end":142444,"line_start":357,"line_end":357,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142449,"byte_end":142452,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ A `max_iterations` parameter of `None` means that there is no limit","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142457,"byte_end":142528,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ to the number of iterations performed. This is generally not advised.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142533,"byte_end":142606,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142611,"byte_end":142614,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142619,"byte_end":142629,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142634,"byte_end":142637,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This frees storage that is held but not necessary for the hash map to hold.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142642,"byte_end":142721,"line_start":364,"line_end":364,"column_start":5,"column_end":84}},{"value":"/ This operation might be expensive, especially for big `max_iteration`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142726,"byte_end":142799,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ parameters. The `max_iterations` parameter can be used to limit the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142804,"byte_end":142875,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/ expensiveness for this operation and instead free up storage incrementally.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":142880,"byte_end":142959,"line_start":367,"line_end":367,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144182,"byte_end":144187,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, H>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144088,"byte_end":144170,"line_start":390,"line_end":390,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144903,"byte_end":144906,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144847,"byte_end":144891,"line_start":415,"line_end":415,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145239,"byte_end":145249,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty, and returns\n a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty, and returns","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145092,"byte_end":145180,"line_start":423,"line_end":423,"column_start":5,"column_end":93}},{"value":"/ a reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145185,"byte_end":145227,"line_start":424,"line_end":424,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145602,"byte_end":145611,"line_start":434,"line_end":434,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145453,"byte_end":145535,"line_start":432,"line_end":432,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145540,"byte_end":145590,"line_start":433,"line_end":433,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146005,"byte_end":146019,"line_start":443,"line_end":443,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145826,"byte_end":145919,"line_start":441,"line_end":441,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":145924,"byte_end":145993,"line_start":442,"line_end":442,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146506,"byte_end":146524,"line_start":456,"line_end":456,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default\n function, which takes the key as its argument, and returns a mutable reference to\n the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146287,"byte_end":146372,"line_start":453,"line_end":453,"column_start":5,"column_end":90}},{"value":"/ function, which takes the key as its argument, and returns a mutable reference to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146377,"byte_end":146462,"line_start":454,"line_end":454,"column_start":5,"column_end":90}},{"value":"/ the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146467,"byte_end":146494,"line_start":455,"line_end":455,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146926,"byte_end":146936,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.\n","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146806,"byte_end":146874,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":146879,"byte_end":146914,"line_start":467,"line_end":467,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147688,"byte_end":147691,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147576,"byte_end":147676,"line_start":495,"line_end":495,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147793,"byte_end":147801,"line_start":501,"line_end":501,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.\n","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147751,"byte_end":147781,"line_start":500,"line_end":500,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147974,"byte_end":147980,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147863,"byte_end":147962,"line_start":505,"line_end":505,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148438,"byte_end":148441,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148381,"byte_end":148426,"line_start":521,"line_end":521,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148570,"byte_end":148582,"line_start":527,"line_end":527,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148501,"byte_end":148558,"line_start":526,"line_end":526,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148905,"byte_end":148908,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148846,"byte_end":148893,"line_start":536,"line_end":536,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149184,"byte_end":149191,"line_start":545,"line_end":545,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148974,"byte_end":149029,"line_start":541,"line_end":541,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149034,"byte_end":149037,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the destruction of the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149042,"byte_end":149133,"line_start":543,"line_end":543,"column_start":5,"column_end":96}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149138,"byte_end":149172,"line_start":544,"line_end":544,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149352,"byte_end":149358,"line_start":550,"line_end":550,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149273,"byte_end":149340,"line_start":549,"line_end":549,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149545,"byte_end":149551,"line_start":555,"line_end":555,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149480,"byte_end":149533,"line_start":554,"line_end":554,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149750,"byte_end":149758,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149606,"byte_end":149689,"line_start":559,"line_end":559,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":149694,"byte_end":149738,"line_start":560,"line_end":560,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"smallvec","qualname":"::collections::smallvec","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1728},{"krate":0,"index":1796},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":4710},{"krate":0,"index":4715},{"krate":0,"index":1861},{"krate":0,"index":1865},{"krate":0,"index":1869},{"krate":0,"index":1876},{"krate":0,"index":1886},{"krate":0,"index":1890}],"decl_id":null,"docs":" A small storage vector that allows to store a limited amount of elements.","sig":null,"attributes":[{"value":"/ A small storage vector that allows to store a limited amount of elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168537,"byte_end":168614,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168615,"byte_end":168618,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Prefer using [`SmallVec`] over [`Vec`][`crate::Vec`] if you know up front","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168619,"byte_end":168696,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ the maximum amount of unique elements that have to be stored in the vector","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168697,"byte_end":168775,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ at the same time, given the number is fairly low: e.g. not exceeding several","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168776,"byte_end":168856,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ hundreds of elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":168857,"byte_end":168882,"line_start":20,"line_end":20,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":180829,"byte_end":180833,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::smallvec::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678}],"decl_id":null,"docs":" An iterator over shared references to the elements of a small storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a small storage vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":180706,"byte_end":180787,"line_start":21,"line_end":21,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4697},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":183063,"byte_end":183070,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::smallvec::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a small storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a small storage vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":182950,"byte_end":183034,"line_start":109,"line_end":109,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":4710},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169709,"byte_end":169717,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::collections::smallvec::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714}],"decl_id":null,"docs":" A contiguous growable array type.","sig":null,"attributes":[{"value":"/ A contiguous growable array type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169131,"byte_end":169168,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169169,"byte_end":169172,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169173,"byte_end":169183,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169184,"byte_end":169187,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - The `storage::SmallVec` has a very similar API compared to a `storage::Vec`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169188,"byte_end":169270,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/   The major difference between both data structures is that the `SmallVec`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169271,"byte_end":169349,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   can only contain up to a fixed amount of elements given by `N` whereas the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169350,"byte_end":169430,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/   `Vec` can contain up to `2^32` elements which is the maximum for 32-bit Wasm","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169431,"byte_end":169513,"line_start":51,"line_end":51,"column_start":1,"column_end":83}},{"value":"/   targets.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169514,"byte_end":169528,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ - The performance characteristics may be different from Rust's","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169529,"byte_end":169595,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/   `Vec` due to the internal differences.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169596,"byte_end":169640,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ - Allows to store up to N elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169641,"byte_end":169680,"line_start":55,"line_end":55,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171009,"byte_end":171012,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<T, N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":170966,"byte_end":170997,"line_start":106,"line_end":106,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171202,"byte_end":171210,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<T, N>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the small vector.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the small vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171131,"byte_end":171176,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171181,"byte_end":171190,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171375,"byte_end":171378,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<T, N>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its length.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171268,"byte_end":171349,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171354,"byte_end":171363,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171504,"byte_end":171512,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<T, N>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171424,"byte_end":171478,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171483,"byte_end":171492,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171920,"byte_end":171924,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"iter","qualname":"<SmallVec<T, N>>::iter","value":"pub fn iter(&Self) -> Iter<, T, >","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171635,"byte_end":171702,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171707,"byte_end":171710,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171715,"byte_end":171725,"line_start":139,"line_end":139,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171730,"byte_end":171733,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171738,"byte_end":171795,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171800,"byte_end":171877,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171882,"byte_end":171908,"line_start":143,"line_end":143,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172271,"byte_end":172279,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SmallVec<T, N>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T, >","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171983,"byte_end":172053,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172058,"byte_end":172061,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172066,"byte_end":172076,"line_start":150,"line_end":150,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172081,"byte_end":172084,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172089,"byte_end":172146,"line_start":152,"line_end":152,"column_start":5,"column_end":62}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172151,"byte_end":172228,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172233,"byte_end":172259,"line_start":154,"line_end":154,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172643,"byte_end":172648,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"first","qualname":"<SmallVec<T, N>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172572,"byte_end":172631,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172836,"byte_end":172840,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"last","qualname":"<SmallVec<T, N>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the last element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":172766,"byte_end":172824,"line_start":175,"line_end":175,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173134,"byte_end":173137,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"get","qualname":"<SmallVec<T, N>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173008,"byte_end":173062,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173067,"byte_end":173070,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173075,"byte_end":173122,"line_start":186,"line_end":186,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173402,"byte_end":173406,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<T, N>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the vector.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173341,"byte_end":173390,"line_start":197,"line_end":197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173870,"byte_end":173873,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<T, N>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and returns it.\n Returns `None` if the vector is empty.\n","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173747,"byte_end":173804,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ Returns `None` if the vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173816,"byte_end":173858,"line_start":215,"line_end":215,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174433,"byte_end":174441,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"pop_drop","qualname":"<SmallVec<T, N>>::pop_drop","value":"pub fn pop_drop(&mut Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and immediately drops it.","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and immediately drops it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174092,"byte_end":174159,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174164,"byte_end":174167,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174172,"byte_end":174247,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174252,"byte_end":174255,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174260,"byte_end":174270,"line_start":229,"line_end":229,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174275,"byte_end":174278,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This operation is a bit more efficient than [`SmallVec::pop`]","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174283,"byte_end":174348,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ since it avoids reading from contract storage in some use cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174353,"byte_end":174421,"line_start":232,"line_end":232,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174750,"byte_end":174759,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<SmallVec<T, N>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174675,"byte_end":174738,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174963,"byte_end":174971,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<SmallVec<T, N>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the last element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":174889,"byte_end":174951,"line_start":251,"line_end":251,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175281,"byte_end":175288,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SmallVec<T, N>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175151,"byte_end":175209,"line_start":260,"line_end":260,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175214,"byte_end":175217,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175222,"byte_end":175269,"line_start":262,"line_end":262,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175578,"byte_end":175582,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"swap","qualname":"<SmallVec<T, N>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175439,"byte_end":175483,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175488,"byte_end":175491,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175496,"byte_end":175508,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175513,"byte_end":175516,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175521,"byte_end":175566,"line_start":272,"line_end":272,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176107,"byte_end":176118,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<T, N>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175767,"byte_end":175830,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175835,"byte_end":175838,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175843,"byte_end":175907,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ Returns `None` and does not mutate the vector if the index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175912,"byte_end":175992,"line_start":284,"line_end":284,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":175997,"byte_end":176000,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176005,"byte_end":176015,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176020,"byte_end":176023,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This operation does not preserve ordering but is constant time.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176028,"byte_end":176095,"line_start":288,"line_end":288,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176733,"byte_end":176749,"line_start":307,"line_end":307,"column_start":12,"column_end":28},"name":"swap_remove_drop","qualname":"<SmallVec<T, N>>::swap_remove_drop","value":"pub fn swap_remove_drop(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176290,"byte_end":176338,"line_start":297,"line_end":297,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176343,"byte_end":176346,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176351,"byte_end":176415,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176420,"byte_end":176495,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176500,"byte_end":176503,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176508,"byte_end":176518,"line_start":302,"line_end":302,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176523,"byte_end":176526,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This operation should be preferred over [`Vec::swap_remove`] if there is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176531,"byte_end":176607,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/ no need to return the removed element since it avoids a contract storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176612,"byte_end":176688,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ read for some use cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":176693,"byte_end":176721,"line_start":306,"line_end":306,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stash","qualname":"::collections::stash","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1966},{"krate":0,"index":2042},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":4766},{"krate":0,"index":4770},{"krate":0,"index":4773},{"krate":0,"index":4777},{"krate":0,"index":4792},{"krate":0,"index":4786},{"krate":0,"index":4781},{"krate":0,"index":4794},{"krate":0,"index":4797},{"krate":0,"index":4815},{"krate":0,"index":4814},{"krate":0,"index":4812},{"krate":0,"index":4806},{"krate":0,"index":4801},{"krate":0,"index":4817},{"krate":0,"index":4825},{"krate":0,"index":4845},{"krate":0,"index":4837},{"krate":0,"index":4830},{"krate":0,"index":2163},{"krate":0,"index":2169},{"krate":0,"index":2182},{"krate":0,"index":2188},{"krate":0,"index":2191}],"decl_id":null,"docs":" A storage stash allowing to store indexed elements efficiently.\n","sig":null,"attributes":[{"value":"/ A storage stash allowing to store indexed elements efficiently.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":188653,"byte_end":188720,"line_start":15,"line_end":15,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":214494,"byte_end":214498,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::stash::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage stash.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":214378,"byte_end":214452,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216917,"byte_end":216924,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::stash::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743},{"krate":0,"index":4744}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a storage stash.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a storage stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216811,"byte_end":216888,"line_start":123,"line_end":123,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4749},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220185,"byte_end":220192,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"Entries","qualname":"::collections::stash::iter::Entries","value":"Entries {  }","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754}],"decl_id":null,"docs":" An iterator over shared references to the entries of a storage stash.","sig":null,"attributes":[{"value":"/ An iterator over shared references to the entries of a storage stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":219976,"byte_end":220049,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220050,"byte_end":220053,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220054,"byte_end":220064,"line_start":243,"line_end":243,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220065,"byte_end":220068,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ This is an internal API and mainly used for testing the storage stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220069,"byte_end":220143,"line_start":245,"line_end":245,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4766},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189312,"byte_end":189317,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Stash","qualname":"::collections::stash::Stash","value":"Stash {  }","parent":null,"children":[{"krate":0,"index":4768},{"krate":0,"index":4769}],"decl_id":null,"docs":" A stash data structure operating on contract storage.","sig":null,"attributes":[{"value":"/ A stash data structure operating on contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189005,"byte_end":189062,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189063,"byte_end":189066,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This allows to store information similar to a vector but in unordered","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189067,"byte_end":189140,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ fashion which enables constant time random deletion of elements. This allows","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189141,"byte_end":189221,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ for efficient attachment of data to some numeric indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":189222,"byte_end":189283,"line_start":43,"line_end":43,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4794},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190461,"byte_end":190472,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::collections::stash::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":4795},{"krate":0,"index":4796}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190273,"byte_end":190330,"line_start":77,"line_end":77,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190973,"byte_end":190979,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::stash::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":4817},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190890,"byte_end":190968,"line_start":94,"line_end":94,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191045,"byte_end":191053,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::stash::Entry::Occupied","value":"Entry::Occupied(T)","parent":{"krate":0,"index":4817},"children":[],"decl_id":null,"docs":" An occupied entry that hold the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that hold the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190998,"byte_end":191040,"line_start":96,"line_end":96,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190875,"byte_end":190880,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"name":"Entry","qualname":"::collections::stash::Entry","value":"pub enum Entry<T> { Vacant(VacantEntry), Occupied(T), }","parent":null,"children":[{"krate":0,"index":4819},{"krate":0,"index":4822}],"decl_id":null,"docs":" An entry within the stash.","sig":null,"attributes":[{"value":"/ An entry within the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190578,"byte_end":190608,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190609,"byte_end":190612,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The vacant entries within a storage stash form a doubly linked list of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190613,"byte_end":190687,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ vacant entries that is used to quickly re-use their vacant storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":190688,"byte_end":190759,"line_start":90,"line_end":90,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191140,"byte_end":191151,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_occupied","qualname":"<Entry<T>>::is_occupied","value":"pub fn is_occupied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry is occupied.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry is occupied.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191084,"byte_end":191128,"line_start":101,"line_end":101,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191325,"byte_end":191334,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"is_vacant","qualname":"<Entry<T>>::is_vacant","value":"pub fn is_vacant(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry is vacant.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry is vacant.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191271,"byte_end":191313,"line_start":109,"line_end":109,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192049,"byte_end":192052,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Stash<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty stash.\n","sig":null,"attributes":[{"value":"/ Creates a new empty stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192007,"byte_end":192037,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192353,"byte_end":192356,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<Stash<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements stored in the stash.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements stored in the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192286,"byte_end":192341,"line_start":147,"line_end":147,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192473,"byte_end":192481,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Stash<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the stash contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stash contains no elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192408,"byte_end":192461,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192756,"byte_end":192764,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Stash<T>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entries the stash can hold without\n allocating another storage cell.","sig":null,"attributes":[{"value":"/ Returns the number of entries the stash can hold without","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192534,"byte_end":192594,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/ allocating another storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192599,"byte_end":192635,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192640,"byte_end":192643,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192648,"byte_end":192658,"line_start":160,"line_end":160,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192663,"byte_end":192666,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This is the total number of occupied and vacant entries of the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192671,"byte_end":192744,"line_start":162,"line_end":162,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193155,"byte_end":193166,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"entries_key","qualname":"<Stash<T>>::entries_key","value":"pub fn entries_key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying key to the cells.","sig":null,"attributes":[{"value":"/ Returns the underlying key to the cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":192971,"byte_end":193015,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193020,"byte_end":193023,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193028,"byte_end":193038,"line_start":174,"line_end":174,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193043,"byte_end":193046,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is a low-level utility getter and should","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193051,"byte_end":193100,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/ normally not be required by users.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193105,"byte_end":193143,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193522,"byte_end":193526,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<Stash<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the stash.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193230,"byte_end":193310,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193315,"byte_end":193318,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193323,"byte_end":193333,"line_start":184,"line_end":184,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193338,"byte_end":193341,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage stashes.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193346,"byte_end":193401,"line_start":186,"line_end":186,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193406,"byte_end":193481,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193486,"byte_end":193510,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193877,"byte_end":193885,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Stash<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements of the stash.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements of the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193582,"byte_end":193665,"line_start":193,"line_end":193,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193670,"byte_end":193673,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193678,"byte_end":193688,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193693,"byte_end":193696,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage stashes.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193701,"byte_end":193756,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193761,"byte_end":193836,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193841,"byte_end":193865,"line_start":199,"line_end":199,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":194042,"byte_end":194049,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"entries","qualname":"<Stash<T>>::entries","value":"pub fn entries(&Self) -> Entries<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all entries of the stash.\n","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all entries of the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":193951,"byte_end":194030,"line_start":204,"line_end":204,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":194643,"byte_end":194646,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"get","qualname":"<Stash<T>>::get","value":"pub fn get(&Self, Index) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":194566,"byte_end":194631,"line_start":228,"line_end":228,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":195102,"byte_end":195109,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Stash<T>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":195021,"byte_end":195090,"line_start":242,"line_end":242,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":202186,"byte_end":202189,"line_start":419,"line_end":419,"column_start":12,"column_end":15},"name":"put","qualname":"<Stash<T>>::put","value":"pub fn put(&mut Self, T) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Put the element into the stash at the next vacant position.","sig":null,"attributes":[{"value":"/ Put the element into the stash at the next vacant position.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":202040,"byte_end":202103,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":202108,"byte_end":202111,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns the stash index that the element was put into.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":202116,"byte_end":202174,"line_start":418,"line_end":418,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":203428,"byte_end":203432,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"take","qualname":"<Stash<T>>::take","value":"pub fn take(&mut Self, Index) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the element stored at the given index if any.\n","sig":null,"attributes":[{"value":"/ Takes the element stored at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":203361,"byte_end":203416,"line_start":447,"line_end":447,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205816,"byte_end":205831,"line_start":499,"line_end":499,"column_start":19,"column_end":34},"name":"remove_occupied","qualname":"<Stash<T>>::remove_occupied","value":"pub unsafe fn remove_occupied(&mut Self, Index) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the element stored at the given index if any.","sig":null,"attributes":[{"value":"/ Removes the element stored at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":204985,"byte_end":205042,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205047,"byte_end":205050,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This method acts similar to the take API and even still returns an Option.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205055,"byte_end":205133,"line_start":485,"line_end":485,"column_start":5,"column_end":83}},{"value":"/ However, it guarantees to make no contract storage reads to the indexed","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205138,"byte_end":205213,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ element and will only write to its internal low-level lazy cache that the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205218,"byte_end":205295,"line_start":487,"line_end":487,"column_start":5,"column_end":82}},{"value":"/ element at the given index is going to be removed at the end of the contract","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205300,"byte_end":205380,"line_start":488,"line_end":488,"column_start":5,"column_end":85}},{"value":"/ execution.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205385,"byte_end":205399,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205404,"byte_end":205407,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Calling this method with an index out of bounds for the returns `None` and","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205412,"byte_end":205490,"line_start":491,"line_end":491,"column_start":5,"column_end":83}},{"value":"/ does not `remove` the element, otherwise it returns `Some(())`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205495,"byte_end":205562,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205567,"byte_end":205570,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205575,"byte_end":205587,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205592,"byte_end":205595,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `at` refers to an occupied index. Behavior is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205600,"byte_end":205677,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ unspecified if `at` refers to a vacant index and could seriously damage the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205682,"byte_end":205761,"line_start":497,"line_end":497,"column_start":5,"column_end":84}},{"value":"/ contract storage integrity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":205766,"byte_end":205797,"line_start":498,"line_end":498,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207901,"byte_end":207907,"line_start":542,"line_end":542,"column_start":12,"column_end":18},"name":"defrag","qualname":"<Stash<T>>::defrag","value":"pub fn defrag<C>(&mut Self, Option<u32>, C) -> u32 where\nC: FnMut(Index, Index, &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Defragments the underlying storage to minimize footprint.","sig":null,"attributes":[{"value":"/ Defragments the underlying storage to minimize footprint.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":206948,"byte_end":207009,"line_start":520,"line_end":520,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207014,"byte_end":207017,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Returns the number of storage cells freed this way.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207022,"byte_end":207077,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207082,"byte_end":207085,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This might invalidate indices stored outside the stash.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207090,"byte_end":207149,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207154,"byte_end":207157,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Callback","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207162,"byte_end":207176,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207181,"byte_end":207184,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ In order to keep those indices up-to-date the caller can provide","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207189,"byte_end":207257,"line_start":528,"line_end":528,"column_start":5,"column_end":73}},{"value":"/ a callback function that is called for every moved entry","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207262,"byte_end":207322,"line_start":529,"line_end":529,"column_start":5,"column_end":65}},{"value":"/ with a shared reference to the entries value and the old as well","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207327,"byte_end":207395,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/ as the new index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207400,"byte_end":207421,"line_start":531,"line_end":531,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207426,"byte_end":207429,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207434,"byte_end":207444,"line_start":533,"line_end":533,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207449,"byte_end":207452,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ - If `max_iterations` is `Some` concrete value it is used in order to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207457,"byte_end":207530,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/   bound the number of iterations and won't try to defrag until the stash","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207535,"byte_end":207611,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/   is optimally compacted.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207616,"byte_end":207645,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ - Users are advised to call this method using `Some` concrete","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207650,"byte_end":207715,"line_start":538,"line_end":538,"column_start":5,"column_end":70}},{"value":"/   value to keep gas costs within certain bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207720,"byte_end":207772,"line_start":539,"line_end":539,"column_start":5,"column_end":57}},{"value":"/ - The call to the given callback takes place before the reinsertion","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207777,"byte_end":207848,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/   of the shifted occupied entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":207853,"byte_end":207889,"line_start":541,"line_end":541,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::collections::vec","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2269},{"krate":0,"index":2328},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2388},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":4875},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4894},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4886},{"krate":0,"index":4884},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2414},{"krate":0,"index":2417}],"decl_id":null,"docs":" A storage vector used to store elements in a contiguous sequenced order.","sig":null,"attributes":[{"value":"/ A storage vector used to store elements in a contiguous sequenced order.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":226813,"byte_end":226889,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":226890,"byte_end":226893,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is by default the go-to collection for most smart contracts if there","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":226894,"byte_end":226971,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ are no special requirements to the storage data structure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":226972,"byte_end":227034,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":240091,"byte_end":240095,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4853}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":239974,"byte_end":240049,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242225,"byte_end":242232,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a storage vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242118,"byte_end":242196,"line_start":109,"line_end":109,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227935,"byte_end":227938,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"Vec","qualname":"::collections::vec::Vec","value":"Vec {  }","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878}],"decl_id":null,"docs":" A contiguous growable array type, written `Vec<T>` but pronounced \"vector\".","sig":null,"attributes":[{"value":"/ A contiguous growable array type, written `Vec<T>` but pronounced \"vector\".","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227305,"byte_end":227384,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227385,"byte_end":227388,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227389,"byte_end":227399,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227400,"byte_end":227403,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Despite the similarity to Rust's `Vec` type this storage `Vec` has many","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227404,"byte_end":227479,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ differences in its internal data layout. While it stores its data in contiguous","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227480,"byte_end":227563,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ storage slots this does not mean that the data is actually densely stored","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227564,"byte_end":227641,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ in memory.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227642,"byte_end":227656,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227657,"byte_end":227660,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Also its technical performance characteristics may be different from Rust's","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227661,"byte_end":227740,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ `Vec` due to the differences stated above.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227741,"byte_end":227787,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227788,"byte_end":227791,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Allows to store up to `2^32` elements and is guaranteed to not reallocate","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227792,"byte_end":227869,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ upon pushing new elements to it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":227870,"byte_end":227906,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228234,"byte_end":228250,"line_start":69,"line_end":69,"column_start":12,"column_end":28},"name":"IndexOutOfBounds","qualname":"::collections::vec::IndexOutOfBounds","value":"","parent":null,"children":[],"decl_id":null,"docs":" The index is out of the bounds of this vector.\n","sig":null,"attributes":[{"value":"/ The index is out of the bounds of this vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228123,"byte_end":228173,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228464,"byte_end":228467,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Vec<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228413,"byte_end":228452,"line_start":84,"line_end":84,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228680,"byte_end":228683,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"len","qualname":"<Vec<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its length.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228587,"byte_end":228668,"line_start":92,"line_end":92,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228795,"byte_end":228803,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Vec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228729,"byte_end":228783,"line_start":97,"line_end":97,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230023,"byte_end":230027,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"iter","qualname":"<Vec<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the vector.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229730,"byte_end":229811,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229816,"byte_end":229819,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229824,"byte_end":229834,"line_start":135,"line_end":135,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229839,"byte_end":229842,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229847,"byte_end":229902,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229907,"byte_end":229982,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229987,"byte_end":230011,"line_start":139,"line_end":139,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230379,"byte_end":230387,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Vec<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements of the vector.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements of the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230083,"byte_end":230167,"line_start":144,"line_end":144,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230172,"byte_end":230175,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230180,"byte_end":230190,"line_start":146,"line_end":146,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230195,"byte_end":230198,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230203,"byte_end":230258,"line_start":148,"line_end":148,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230263,"byte_end":230338,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230343,"byte_end":230367,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230744,"byte_end":230749,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"first","qualname":"<Vec<T>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230673,"byte_end":230732,"line_start":163,"line_end":163,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230937,"byte_end":230941,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"last","qualname":"<Vec<T>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the last element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":230867,"byte_end":230925,"line_start":171,"line_end":171,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231235,"byte_end":231238,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"get","qualname":"<Vec<T>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231109,"byte_end":231163,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231168,"byte_end":231171,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231176,"byte_end":231223,"line_start":182,"line_end":182,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231479,"byte_end":231483,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"push","qualname":"<Vec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the vector.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231418,"byte_end":231467,"line_start":193,"line_end":193,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231930,"byte_end":231933,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"pop","qualname":"<Vec<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and returns it.\n Returns `None` if the vector is empty.\n","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231807,"byte_end":231864,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/ Returns `None` if the vector is empty.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231876,"byte_end":231918,"line_start":211,"line_end":211,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232488,"byte_end":232496,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"pop_drop","qualname":"<Vec<T>>::pop_drop","value":"pub fn pop_drop(&mut Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and immediately drops it.","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and immediately drops it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232152,"byte_end":232219,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232224,"byte_end":232227,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232232,"byte_end":232307,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232312,"byte_end":232315,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232320,"byte_end":232330,"line_start":225,"line_end":225,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232335,"byte_end":232338,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This operation is a bit more efficient than [`Vec::pop`]","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232343,"byte_end":232403,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/ since it avoids reading from contract storage in some use cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232408,"byte_end":232476,"line_start":228,"line_end":228,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232805,"byte_end":232814,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Vec<T>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232730,"byte_end":232793,"line_start":239,"line_end":239,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233018,"byte_end":233026,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Vec<T>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the last element if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":232944,"byte_end":233006,"line_start":247,"line_end":247,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233336,"byte_end":233343,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Vec<T>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233206,"byte_end":233264,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233269,"byte_end":233272,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233277,"byte_end":233324,"line_start":258,"line_end":258,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233633,"byte_end":233637,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"swap","qualname":"<Vec<T>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233494,"byte_end":233538,"line_start":264,"line_end":264,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233543,"byte_end":233546,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233551,"byte_end":233563,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233568,"byte_end":233571,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233576,"byte_end":233621,"line_start":268,"line_end":268,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234162,"byte_end":234173,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<Vec<T>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233822,"byte_end":233885,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233890,"byte_end":233893,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233898,"byte_end":233962,"line_start":279,"line_end":279,"column_start":5,"column_end":69}},{"value":"/ Returns `None` and does not mutate the vector if the index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":233967,"byte_end":234047,"line_start":280,"line_end":280,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234052,"byte_end":234055,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234060,"byte_end":234070,"line_start":282,"line_end":282,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234075,"byte_end":234078,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This operation does not preserve ordering but is constant time.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234083,"byte_end":234150,"line_start":284,"line_end":284,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234788,"byte_end":234804,"line_start":303,"line_end":303,"column_start":12,"column_end":28},"name":"swap_remove_drop","qualname":"<Vec<T>>::swap_remove_drop","value":"pub fn swap_remove_drop(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234345,"byte_end":234393,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234398,"byte_end":234401,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234406,"byte_end":234470,"line_start":295,"line_end":295,"column_start":5,"column_end":69}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234475,"byte_end":234550,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234555,"byte_end":234558,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234563,"byte_end":234573,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234578,"byte_end":234581,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This operation should be preferred over [`Vec::swap_remove`] if there is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234586,"byte_end":234662,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ no need to return the removed element since it avoids a contract storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234667,"byte_end":234743,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ read for some use cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":234748,"byte_end":234776,"line_start":302,"line_end":302,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235409,"byte_end":235412,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"set","qualname":"<Vec<T>>::set","value":"pub fn set(&mut Self, u32, T) -> Result<(), IndexOutOfBounds>","parent":null,"children":[],"decl_id":null,"docs":" Sets the elements at the given index to the new value.","sig":null,"attributes":[{"value":"/ Sets the elements at the given index to the new value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235127,"byte_end":235185,"line_start":315,"line_end":315,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235190,"byte_end":235193,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Won't return the old element back to the caller.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235198,"byte_end":235250,"line_start":317,"line_end":317,"column_start":5,"column_end":57}},{"value":"/ Prefer this operation over other method of overriding an element","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235255,"byte_end":235323,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ in the storage vector since this is more efficient.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235328,"byte_end":235383,"line_start":319,"line_end":319,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235388,"byte_end":235397,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235951,"byte_end":235956,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this vector.","sig":null,"attributes":[{"value":"/ Removes all elements from this vector.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235658,"byte_end":235700,"line_start":329,"line_end":329,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235705,"byte_end":235708,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235713,"byte_end":235723,"line_start":331,"line_end":331,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235728,"byte_end":235731,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the vector instead of e.g. iterative `pop()`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235736,"byte_end":235810,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235815,"byte_end":235887,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":235892,"byte_end":235939,"line_start":335,"line_end":335,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy","qualname":"::lazy","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2734},{"krate":0,"index":2769},{"krate":0,"index":2866},{"krate":0,"index":3039},{"krate":0,"index":3130},{"krate":0,"index":3258},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":4975},{"krate":0,"index":4978},{"krate":0,"index":3292},{"krate":0,"index":3302},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":3317},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3361}],"decl_id":null,"docs":" Low-level collections and data structures to manage storage entities in the\n persisted contract storage.","sig":null,"attributes":[{"value":"/ Low-level collections and data structures to manage storage entities in the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":247807,"byte_end":247886,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ persisted contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":247887,"byte_end":247918,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":247919,"byte_end":247922,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users should generally avoid using these collections directly in their","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":247923,"byte_end":247997,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ contracts and should instead adhere to the high-level collections found","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":247998,"byte_end":248073,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ in [`collections`][`crate::collections`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248074,"byte_end":248119,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ The low-level collections are mainly used as building blocks for internals","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248120,"byte_end":248198,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ of other higher-level storage collections.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248199,"byte_end":248245,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248246,"byte_end":248249,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These low-level collections are not aware of the elements they manage thus","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248250,"byte_end":248328,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ extra care has to be taken when operating directly on them.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248329,"byte_end":248392,"line_start":25,"line_end":25,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy_hmap","qualname":"::lazy::lazy_hmap","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2550},{"krate":0,"index":2559},{"krate":0,"index":2563},{"krate":0,"index":2569},{"krate":0,"index":2575},{"krate":0,"index":2585},{"krate":0,"index":2591},{"krate":0,"index":2596},{"krate":0,"index":2601},{"krate":0,"index":2633},{"krate":0,"index":2641},{"krate":0,"index":2646},{"krate":0,"index":2652},{"krate":0,"index":2658},{"krate":0,"index":2668},{"krate":0,"index":2674},{"krate":0,"index":2683},{"krate":0,"index":2703},{"krate":0,"index":2716},{"krate":0,"index":2723}],"decl_id":null,"docs":" A lazy storage mapping that stores entries under their SCALE encoded key hashes.\n","sig":null,"attributes":[{"value":"/ A lazy storage mapping that stores entries under their SCALE encoded key hashes.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":254970,"byte_end":255054,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255944,"byte_end":255952,"line_start":64,"line_end":64,"column_start":10,"column_end":18},"name":"EntryMap","qualname":"::lazy::lazy_hmap::EntryMap","value":"BTreeMap<K, Box<StorageEntry<V>>>","parent":null,"children":[],"decl_id":null,"docs":" The map for the contract storage entries.","sig":null,"attributes":[{"value":"/ The map for the contract storage entries.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255703,"byte_end":255748,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255749,"byte_end":255752,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255753,"byte_end":255763,"line_start":59,"line_end":59,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255764,"byte_end":255767,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ We keep the whole entry in a `Box<T>` in order to prevent pointer","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255768,"byte_end":255837,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ invalidation upon updating the cache through `&self` methods as in","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255838,"byte_end":255908,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ [`LazyHashMap::get`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255909,"byte_end":255934,"line_start":63,"line_end":63,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256484,"byte_end":256495,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"LazyHashMap","qualname":"::lazy::lazy_hmap::LazyHashMap","value":"LazyHashMap {  }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549}],"decl_id":null,"docs":" A lazy storage mapping that stores entries under their SCALE encoded key hashes.","sig":null,"attributes":[{"value":"/ A lazy storage mapping that stores entries under their SCALE encoded key hashes.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":255997,"byte_end":256081,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256082,"byte_end":256085,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256086,"byte_end":256096,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256097,"byte_end":256100,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256101,"byte_end":256176,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256177,"byte_end":256251,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ mapping of storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256252,"byte_end":256281,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256282,"byte_end":256285,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This storage data structure might store its entries anywhere in the contract","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256286,"byte_end":256366,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ storage. It is the users responsibility to keep track of the entries if it","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256367,"byte_end":256445,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ is necessary to do so.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":256446,"byte_end":256472,"line_start":76,"line_end":76,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":258526,"byte_end":258539,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::lazy::lazy_hmap::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568}],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":258471,"byte_end":258514,"line_start":118,"line_end":118,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":258913,"byte_end":258924,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::lazy::lazy_hmap::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":258844,"byte_end":258901,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259716,"byte_end":259722,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::lazy::lazy_hmap::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":2575},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259633,"byte_end":259711,"line_start":153,"line_end":153,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259799,"byte_end":259807,"line_start":156,"line_end":156,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::lazy::lazy_hmap::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":2575},"children":[],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259751,"byte_end":259794,"line_start":155,"line_end":155,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259541,"byte_end":259546,"line_start":148,"line_end":148,"column_start":10,"column_end":15},"name":"Entry","qualname":"::lazy::lazy_hmap::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> where K: Ord + Clone + PackedLayout,\n         V: PackedLayout {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2582}],"decl_id":null,"docs":" An entry within the `LazyHashMap`.\n","sig":null,"attributes":[{"value":"/ An entry within the `LazyHashMap`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259493,"byte_end":259531,"line_start":147,"line_end":147,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264984,"byte_end":264987,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyHashMap<K, V, H>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy hash map.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy hash map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264736,"byte_end":264774,"line_start":344,"line_end":344,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264779,"byte_end":264782,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264787,"byte_end":264797,"line_start":346,"line_end":346,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264802,"byte_end":264805,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ A lazy map created this way cannot be used to load from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264810,"byte_end":264891,"line_start":348,"line_end":348,"column_start":5,"column_end":86}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264896,"byte_end":264972,"line_start":349,"line_end":349,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":265861,"byte_end":265864,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyHashMap<K, V, H>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy map if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy map if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":265799,"byte_end":265849,"line_start":375,"line_end":375,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266935,"byte_end":266938,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyHashMap<K, V, H>>::put","value":"pub fn put(&mut Self, K, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value under the given key.","sig":null,"attributes":[{"value":"/ Puts the new value under the given key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266407,"byte_end":266450,"line_start":396,"line_end":396,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266455,"byte_end":266458,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266463,"byte_end":266473,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266478,"byte_end":266481,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyHashMap::put`]`(None)` in order to remove an element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266486,"byte_end":266555,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ - Prefer this method over [`LazyHashMap::put_get`] if you are not interested","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266560,"byte_end":266640,"line_start":401,"line_end":401,"column_start":5,"column_end":85}},{"value":"/   in the old value of the same cell index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266645,"byte_end":266691,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266696,"byte_end":266699,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266704,"byte_end":266716,"line_start":404,"line_end":404,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266721,"byte_end":266724,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hash map is in an invalid state that forbids interaction","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266729,"byte_end":266803,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/   with the underlying contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266808,"byte_end":266851,"line_start":407,"line_end":407,"column_start":5,"column_end":48}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":266856,"byte_end":266923,"line_start":408,"line_end":408,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":267383,"byte_end":267388,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"entry","qualname":"<LazyHashMap<K, V, H>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":267289,"byte_end":267371,"line_start":424,"line_end":424,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275788,"byte_end":275803,"line_start":629,"line_end":629,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyHashMap<K, V, H>>::clear_packed_at","value":"pub fn clear_packed_at<Q>(&Self, &Q) where K: Borrow<Q>, V: PackedLayout,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275303,"byte_end":275369,"line_start":619,"line_end":619,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275374,"byte_end":275377,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275382,"byte_end":275394,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275399,"byte_end":275402,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy index map's","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275407,"byte_end":275481,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275486,"byte_end":275560,"line_start":624,"line_end":624,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275565,"byte_end":275610,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275615,"byte_end":275618,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275623,"byte_end":275697,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":275702,"byte_end":275776,"line_start":628,"line_end":628,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277008,"byte_end":277011,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyHashMap<K, V, H>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value associated with the given key if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value associated with the given key if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276737,"byte_end":276818,"line_start":649,"line_end":649,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276823,"byte_end":276826,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276831,"byte_end":276843,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276848,"byte_end":276851,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276856,"byte_end":276928,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":276933,"byte_end":276996,"line_start":654,"line_end":654,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277701,"byte_end":277708,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyHashMap<K, V, H>>::get_mut","value":"pub fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the value associated with the given key if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the value associated with the given key if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277426,"byte_end":277511,"line_start":666,"line_end":666,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277516,"byte_end":277519,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277524,"byte_end":277536,"line_start":668,"line_end":668,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277541,"byte_end":277544,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277549,"byte_end":277621,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277626,"byte_end":277689,"line_start":671,"line_end":671,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278334,"byte_end":278341,"line_start":691,"line_end":691,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyHashMap<K, V, H>>::put_get","value":"pub fn put_get<Q>(&mut Self, &Q, Option<V>) -> Option<V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value under the given key and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value under the given key and returns the old value if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277909,"byte_end":277985,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277990,"byte_end":277993,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":277998,"byte_end":278008,"line_start":682,"line_end":682,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278013,"byte_end":278016,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyHashMap::put_get`]`(None)` in order to remove an element","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278021,"byte_end":278093,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/   and retrieve the old element back.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278098,"byte_end":278138,"line_start":685,"line_end":685,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278143,"byte_end":278146,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278151,"byte_end":278163,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278168,"byte_end":278171,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hashmap is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278176,"byte_end":278250,"line_start":689,"line_end":689,"column_start":5,"column_end":79}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278255,"byte_end":278322,"line_start":690,"line_end":690,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278888,"byte_end":278892,"line_start":707,"line_end":707,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyHashMap<K, V, H>>::swap","value":"pub fn swap<Q1, Q2>(&mut Self, &Q1, &Q2) where K: Borrow<Q1> + Borrow<Q2>,\nQ1: Ord + PartialEq<Q2> + scale::Encode + ToOwned<Owned = K>, Q2: Ord +\nPartialEq<Q1> + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at entries with associated keys `x` and `y`.","sig":null,"attributes":[{"value":"/ Swaps the values at entries with associated keys `x` and `y`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278551,"byte_end":278616,"line_start":699,"line_end":699,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278621,"byte_end":278624,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This operation tries to be as efficient as possible and reuse allocations.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278629,"byte_end":278707,"line_start":701,"line_end":701,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278712,"byte_end":278715,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278720,"byte_end":278732,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278737,"byte_end":278740,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hashmap is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278745,"byte_end":278819,"line_start":705,"line_end":705,"column_start":5,"column_end":79}},{"value":"/ - If the decoding of one of the elements failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":278824,"byte_end":278876,"line_start":706,"line_end":706,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280443,"byte_end":280446,"line_start":745,"line_end":745,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280387,"byte_end":280431,"line_start":744,"line_end":744,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280749,"byte_end":280759,"line_start":754,"line_end":754,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty, and returns\n a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty, and returns","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280602,"byte_end":280690,"line_start":752,"line_end":752,"column_start":5,"column_end":93}},{"value":"/ a reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280695,"byte_end":280737,"line_start":753,"line_end":753,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281088,"byte_end":281097,"line_start":763,"line_end":763,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280939,"byte_end":281021,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281026,"byte_end":281076,"line_start":762,"line_end":762,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281467,"byte_end":281481,"line_start":772,"line_end":772,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281288,"byte_end":281381,"line_start":770,"line_end":770,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281386,"byte_end":281455,"line_start":771,"line_end":771,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281936,"byte_end":281954,"line_start":785,"line_end":785,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default\n function, which takes the key as its argument, and returns a mutable reference to\n the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281717,"byte_end":281802,"line_start":782,"line_end":782,"column_start":5,"column_end":90}},{"value":"/ function, which takes the key as its argument, and returns a mutable reference to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281807,"byte_end":281892,"line_start":783,"line_end":783,"column_start":5,"column_end":90}},{"value":"/ the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":281897,"byte_end":281924,"line_start":784,"line_end":784,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282388,"byte_end":282398,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.\n","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282268,"byte_end":282336,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282341,"byte_end":282376,"line_start":799,"line_end":799,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282984,"byte_end":282987,"line_start":823,"line_end":823,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282872,"byte_end":282972,"line_start":822,"line_end":822,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283074,"byte_end":283082,"line_start":828,"line_end":828,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.\n","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283032,"byte_end":283062,"line_start":827,"line_end":827,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283235,"byte_end":283241,"line_start":833,"line_end":833,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283124,"byte_end":283223,"line_start":832,"line_end":832,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284093,"byte_end":284096,"line_start":861,"line_end":861,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284036,"byte_end":284081,"line_start":860,"line_end":860,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284210,"byte_end":284222,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284141,"byte_end":284198,"line_start":865,"line_end":865,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284913,"byte_end":284916,"line_start":886,"line_end":886,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":284854,"byte_end":284901,"line_start":885,"line_end":885,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":285709,"byte_end":285716,"line_start":908,"line_end":908,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":285499,"byte_end":285554,"line_start":904,"line_end":904,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":285559,"byte_end":285562,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the destruction of the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":285567,"byte_end":285658,"line_start":906,"line_end":906,"column_start":5,"column_end":96}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":285663,"byte_end":285697,"line_start":907,"line_end":907,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":286402,"byte_end":286408,"line_start":927,"line_end":927,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":286323,"byte_end":286390,"line_start":926,"line_end":926,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":287173,"byte_end":287179,"line_start":945,"line_end":945,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":287108,"byte_end":287161,"line_start":944,"line_end":944,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":287378,"byte_end":287386,"line_start":951,"line_end":951,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":287234,"byte_end":287317,"line_start":949,"line_end":949,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":287322,"byte_end":287366,"line_start":950,"line_end":950,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4913},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":307236,"byte_end":307248,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"StorageEntry","qualname":"::lazy::entry::StorageEntry","value":"StorageEntry {  }","parent":null,"children":[{"krate":0,"index":4915},{"krate":0,"index":4916}],"decl_id":null,"docs":" The entry of a single cached value of a lazy storage data structure.\n","sig":null,"attributes":[{"value":"/ The entry of a single cached value of a lazy storage data structure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":307103,"byte_end":307175,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4938},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308482,"byte_end":308489,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"Mutated","qualname":"::lazy::entry::EntryState::Mutated","value":"EntryState::Mutated","parent":{"krate":0,"index":4937},"children":[],"decl_id":null,"docs":" The entry's value must be synchronized with the contract storage.\n","sig":null,"attributes":[{"value":"/ The entry's value must be synchronized with the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308408,"byte_end":308477,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4940},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308568,"byte_end":308577,"line_start":79,"line_end":79,"column_start":5,"column_end":14},"name":"Preserved","qualname":"::lazy::entry::EntryState::Preserved","value":"EntryState::Preserved","parent":{"krate":0,"index":4937},"children":[],"decl_id":null,"docs":" The entry's value preserved the value from the contract storage.\n","sig":null,"attributes":[{"value":"/ The entry's value preserved the value from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308495,"byte_end":308563,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":4937},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308391,"byte_end":308401,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"EntryState","qualname":"::lazy::entry::EntryState","value":"pub enum EntryState { Mutated, Preserved, }","parent":null,"children":[{"krate":0,"index":4938},{"krate":0,"index":4940}],"decl_id":null,"docs":" The state of the entry.\n","sig":null,"attributes":[{"value":"/ The state of the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308292,"byte_end":308319,"line_start":73,"line_end":73,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308665,"byte_end":308675,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_mutated","qualname":"<EntryState>::is_mutated","value":"pub fn is_mutated(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry state is mutated.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry state is mutated.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308604,"byte_end":308653,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308882,"byte_end":308894,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"is_preserved","qualname":"<EntryState>::is_preserved","value":"pub fn is_preserved(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry state is preserved.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry state is preserved.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308819,"byte_end":308870,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311220,"byte_end":311236,"line_start":187,"line_end":187,"column_start":12,"column_end":28},"name":"pull_spread_root","qualname":"<StorageEntry<T>>::pull_spread_root","value":"pub fn pull_spread_root(&Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pulls the entity from the underlying associated storage as a `SpreadLayout`\n storage layout representation.","sig":null,"attributes":[{"value":"/ Pulls the entity from the underlying associated storage as a `SpreadLayout`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310902,"byte_end":310981,"line_start":180,"line_end":180,"column_start":5,"column_end":84}},{"value":"/ storage layout representation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310986,"byte_end":311020,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311025,"byte_end":311028,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311033,"byte_end":311043,"line_start":183,"line_end":183,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311048,"byte_end":311051,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311056,"byte_end":311129,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311134,"byte_end":311208,"line_start":186,"line_end":186,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311667,"byte_end":311683,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"push_spread_root","qualname":"<StorageEntry<T>>::push_spread_root","value":"pub fn push_spread_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the underlying associated data to the contract storage using\n the `SpreadLayout` storage layout.","sig":null,"attributes":[{"value":"/ Pushes the underlying associated data to the contract storage using","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311353,"byte_end":311424,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ the `SpreadLayout` storage layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311429,"byte_end":311467,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311472,"byte_end":311475,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311480,"byte_end":311490,"line_start":194,"line_end":194,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311495,"byte_end":311498,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311503,"byte_end":311576,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311581,"byte_end":311655,"line_start":197,"line_end":197,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312197,"byte_end":312214,"line_start":211,"line_end":211,"column_start":12,"column_end":29},"name":"clear_spread_root","qualname":"<StorageEntry<T>>::clear_spread_root","value":"pub fn clear_spread_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying associated storage as `SpreadLayout` storage layout representation.","sig":null,"attributes":[{"value":"/ Clears the underlying associated storage as `SpreadLayout` storage layout representation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":311904,"byte_end":311997,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312002,"byte_end":312005,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312010,"byte_end":312020,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312025,"byte_end":312028,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312033,"byte_end":312106,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312111,"byte_end":312185,"line_start":210,"line_end":210,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312724,"byte_end":312740,"line_start":227,"line_end":227,"column_start":12,"column_end":28},"name":"pull_packed_root","qualname":"<StorageEntry<T>>::pull_packed_root","value":"pub fn pull_packed_root(&Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pulls the entity from the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Pulls the entity from the underlying associated storage as packed representation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312380,"byte_end":312465,"line_start":220,"line_end":220,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312470,"byte_end":312473,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312478,"byte_end":312488,"line_start":222,"line_end":222,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312493,"byte_end":312496,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312501,"byte_end":312574,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`] or","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312579,"byte_end":312663,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312668,"byte_end":312712,"line_start":226,"line_end":226,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313185,"byte_end":313201,"line_start":238,"line_end":238,"column_start":12,"column_end":28},"name":"push_packed_root","qualname":"<StorageEntry<T>>::push_packed_root","value":"pub fn push_packed_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Pushes the underlying associated storage as packed representation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312856,"byte_end":312926,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312931,"byte_end":312934,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312939,"byte_end":312949,"line_start":233,"line_end":233,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312954,"byte_end":312957,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312962,"byte_end":313035,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`]","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313040,"byte_end":313121,"line_start":236,"line_end":236,"column_start":5,"column_end":86}},{"value":"/ or [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313126,"byte_end":313173,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313751,"byte_end":313768,"line_start":252,"line_end":252,"column_start":12,"column_end":29},"name":"clear_packed_root","qualname":"<StorageEntry<T>>::clear_packed_root","value":"pub fn clear_packed_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Clears the underlying associated storage as packed representation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313422,"byte_end":313492,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313497,"byte_end":313500,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313505,"byte_end":313515,"line_start":247,"line_end":247,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313520,"byte_end":313523,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313528,"byte_end":313601,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`]","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313606,"byte_end":313687,"line_start":250,"line_end":250,"column_start":5,"column_end":86}},{"value":"/ or [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313692,"byte_end":313739,"line_start":251,"line_end":251,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313959,"byte_end":313962,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"new","qualname":"<StorageEntry<T>>::new","value":"pub fn new(Option<T>, EntryState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new entry with the value and state.\n","sig":null,"attributes":[{"value":"/ Creates a new entry with the value and state.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313898,"byte_end":313947,"line_start":258,"line_end":258,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314185,"byte_end":314198,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"replace_state","qualname":"<StorageEntry<T>>::replace_state","value":"pub fn replace_state(&Self, EntryState) -> EntryState","parent":null,"children":[],"decl_id":null,"docs":" Replaces the current entry state with the new state and returns it.\n","sig":null,"attributes":[{"value":"/ Replaces the current entry state with the new state and returns it.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314102,"byte_end":314173,"line_start":266,"line_end":266,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314556,"byte_end":314561,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"value","qualname":"<StorageEntry<T>>::value","value":"pub fn value(&Self) -> &Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value of the entry.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value of the entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314487,"byte_end":314544,"line_start":274,"line_end":274,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314862,"byte_end":314871,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<StorageEntry<T>>::value_mut","value":"pub fn value_mut(&mut Self) -> &mut Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the entry value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the entry value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314616,"byte_end":314670,"line_start":279,"line_end":279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314675,"byte_end":314678,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314683,"byte_end":314693,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314698,"byte_end":314701,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This changes the `mutate` state of the entry if the entry was occupied","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314706,"byte_end":314780,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ since the caller could potentially change the returned value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":314785,"byte_end":314850,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315081,"byte_end":315091,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"into_value","qualname":"<StorageEntry<T>>::into_value","value":"pub fn into_value(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into its value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315031,"byte_end":315069,"line_start":292,"line_end":292,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315387,"byte_end":315390,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"put","qualname":"<StorageEntry<T>>::put","value":"pub fn put(&mut Self, Option<T>) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value into the entry and returns the old value.","sig":null,"attributes":[{"value":"/ Puts the new value into the entry and returns the old value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315143,"byte_end":315207,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315212,"byte_end":315215,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315220,"byte_end":315230,"line_start":299,"line_end":299,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315235,"byte_end":315238,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This changes the `mutate` state of the entry to `true` as long as at","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315243,"byte_end":315315,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ least one of `old_value` and `new_value` is `Some`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":315320,"byte_end":315375,"line_start":302,"line_end":302,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":317266,"byte_end":317275,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"LazyArray","qualname":"::lazy::lazy_array::LazyArray","value":"LazyArray {  }","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2917}],"decl_id":null,"docs":" A lazy storage array that spans over N storage cells.","sig":null,"attributes":[{"value":"/ A lazy storage array that spans over N storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316684,"byte_end":316741,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316742,"byte_end":316745,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Storage data structure to emulate storage arrays: `[T; N]`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316746,"byte_end":316809,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316810,"byte_end":316813,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316814,"byte_end":316824,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316825,"byte_end":316828,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Computes operations on the underlying N storage cells in a lazy fashion.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316829,"byte_end":316905,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ Due to the size constraints the `LazyArray` is generally more efficient","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316906,"byte_end":316981,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ than the [`LazyMap`](`super::LazyIndexMap`) for most use cases with limited elements.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":316982,"byte_end":317071,"line_start":47,"line_end":47,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":317072,"byte_end":317075,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":317076,"byte_end":317151,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":317152,"byte_end":317226,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ chunk of storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":317227,"byte_end":317254,"line_start":51,"line_end":51,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":324059,"byte_end":324074,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyArray<T, N>>::clear_packed_at","value":"pub fn clear_packed_at(&Self, Index)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323578,"byte_end":323644,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323649,"byte_end":323652,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323657,"byte_end":323669,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323674,"byte_end":323677,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy array's","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323682,"byte_end":323752,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323757,"byte_end":323831,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323836,"byte_end":323881,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323886,"byte_end":323889,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323894,"byte_end":323968,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323973,"byte_end":324047,"line_start":289,"line_end":289,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325295,"byte_end":325298,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyArray<T, N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy array.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy array.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325048,"byte_end":325083,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325088,"byte_end":325091,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325096,"byte_end":325106,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325111,"byte_end":325114,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ A lazy array created this way cannot be used to load from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325119,"byte_end":325202,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325207,"byte_end":325283,"line_start":318,"line_end":318,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326018,"byte_end":326026,"line_start":343,"line_end":343,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LazyArray<T, N>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the constant capacity of the lazy array.\n","sig":null,"attributes":[{"value":"/ Returns the constant capacity of the lazy array.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325940,"byte_end":325992,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325997,"byte_end":326006,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326151,"byte_end":326154,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyArray<T, N>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy array if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy array if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326087,"byte_end":326139,"line_start":347,"line_end":347,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326684,"byte_end":326687,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyArray<T, N>>::put","value":"pub fn put(&mut Self, Index, Option<T>)","parent":null,"children":[],"decl_id":null,"docs":" Puts a new value into the given indexed slot.","sig":null,"attributes":[{"value":"/ Puts a new value into the given indexed slot.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326527,"byte_end":326576,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326581,"byte_end":326584,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326589,"byte_end":326599,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326604,"byte_end":326607,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Use [`LazyArray::put_get`]`(None)` to remove an element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326612,"byte_end":326672,"line_start":366,"line_end":366,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":327839,"byte_end":327845,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"key_at","qualname":"<LazyArray<T, N>>::key_at","value":"pub fn key_at(&Self, Index) -> Option<Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key for the given index if not out of bounds.\n","sig":null,"attributes":[{"value":"/ Returns the offset key for the given index if not out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":327759,"byte_end":327827,"line_start":402,"line_end":402,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329951,"byte_end":329954,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyArray<T, N>>::get","value":"pub fn get(&Self, Index) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329695,"byte_end":329767,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329772,"byte_end":329775,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329780,"byte_end":329790,"line_start":457,"line_end":457,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329795,"byte_end":329798,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329803,"byte_end":329861,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329866,"byte_end":329869,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329874,"byte_end":329886,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329891,"byte_end":329894,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":329899,"byte_end":329939,"line_start":463,"line_end":463,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330359,"byte_end":330366,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyArray<T, N>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330099,"byte_end":330175,"line_start":470,"line_end":470,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330180,"byte_end":330183,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330188,"byte_end":330198,"line_start":472,"line_end":472,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330203,"byte_end":330206,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330211,"byte_end":330269,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330274,"byte_end":330277,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330282,"byte_end":330294,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330299,"byte_end":330302,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330307,"byte_end":330347,"line_start":478,"line_end":478,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330890,"byte_end":330897,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyArray<T, N>>::put_get","value":"pub fn put_get(&mut Self, Index, Option<T>) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value into the indexed slot and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value into the indexed slot and returns the old value if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330479,"byte_end":330557,"line_start":483,"line_end":483,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330562,"byte_end":330565,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330570,"byte_end":330580,"line_start":485,"line_end":485,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330585,"byte_end":330588,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ - This operation eventually loads from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330593,"byte_end":330653,"line_start":487,"line_end":487,"column_start":5,"column_end":65}},{"value":"/ - Prefer [`LazyArray::put`] if you are not interested in the old value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330658,"byte_end":330733,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ - Use [`LazyArray::put_get`]`(None)` to remove an element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330738,"byte_end":330800,"line_start":489,"line_end":489,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330805,"byte_end":330808,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330813,"byte_end":330825,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330830,"byte_end":330833,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":330838,"byte_end":330878,"line_start":493,"line_end":493,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331256,"byte_end":331260,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyArray<T, N>>::swap","value":"pub fn swap(&mut Self, Index, Index)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at indices x and y.","sig":null,"attributes":[{"value":"/ Swaps the values at indices x and y.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331023,"byte_end":331063,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331068,"byte_end":331071,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331076,"byte_end":331086,"line_start":500,"line_end":500,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331091,"byte_end":331094,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331099,"byte_end":331157,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331162,"byte_end":331165,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331170,"byte_end":331182,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331187,"byte_end":331190,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If any of the given indices is out of bounds.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":331195,"byte_end":331244,"line_start":506,"line_end":506,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346341,"byte_end":346349,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"LazyCell","qualname":"::lazy::lazy_cell::LazyCell","value":"LazyCell {  }","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" A lazy storage entity.","sig":null,"attributes":[{"value":"/ A lazy storage entity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346143,"byte_end":346169,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346170,"byte_end":346173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This loads its value from storage upon first use.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346174,"byte_end":346227,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346228,"byte_end":346231,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346232,"byte_end":346242,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346243,"byte_end":346246,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Use this if the storage field doesn't need to be loaded in some or most cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":346247,"byte_end":346329,"line_start":40,"line_end":40,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352665,"byte_end":352668,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyCell<T>>::new","value":"pub fn new(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an already populated lazy storage cell.","sig":null,"attributes":[{"value":"/ Creates an already populated lazy storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352453,"byte_end":352504,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352509,"byte_end":352512,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352517,"byte_end":352527,"line_start":232,"line_end":232,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352532,"byte_end":352535,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Since this already has a value it will never actually load from","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352540,"byte_end":352607,"line_start":234,"line_end":234,"column_start":5,"column_end":72}},{"value":"/ the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352612,"byte_end":352637,"line_start":235,"line_end":235,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352642,"byte_end":352653,"line_start":236,"line_end":236,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":353046,"byte_end":353050,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"lazy","qualname":"<LazyCell<T>>::lazy","value":"pub fn lazy(Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a lazy storage cell for the given key.","sig":null,"attributes":[{"value":"/ Creates a lazy storage cell for the given key.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352844,"byte_end":352894,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352899,"byte_end":352902,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352907,"byte_end":352917,"line_start":246,"line_end":246,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352922,"byte_end":352925,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This will actually lazily load from the associated storage cell","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352930,"byte_end":352997,"line_start":248,"line_end":248,"column_start":5,"column_end":72}},{"value":"/ upon access.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":353002,"byte_end":353018,"line_start":249,"line_end":249,"column_start":5,"column_end":21}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":353023,"byte_end":353034,"line_start":250,"line_end":250,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356213,"byte_end":356216,"line_start":336,"line_end":336,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":355951,"byte_end":355995,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356000,"byte_end":356003,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356008,"byte_end":356018,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356023,"byte_end":356026,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This eventually lazily loads the value from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356031,"byte_end":356100,"line_start":330,"line_end":330,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356105,"byte_end":356108,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356113,"byte_end":356125,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356130,"byte_end":356133,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ If decoding the loaded value to `T` failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356138,"byte_end":356185,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356190,"byte_end":356201,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356558,"byte_end":356565,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356292,"byte_end":356340,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356345,"byte_end":356348,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356353,"byte_end":356363,"line_start":342,"line_end":342,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356368,"byte_end":356371,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This eventually lazily loads the value from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356376,"byte_end":356445,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356450,"byte_end":356453,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356458,"byte_end":356470,"line_start":346,"line_end":346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356475,"byte_end":356478,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If decoding the loaded value to `T` failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356483,"byte_end":356530,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356535,"byte_end":356546,"line_start":349,"line_end":349,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":357068,"byte_end":357071,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"set","qualname":"<LazyCell<T>>::set","value":"pub fn set(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value in this cell to `value`, without executing any reads.","sig":null,"attributes":[{"value":"/ Sets the value in this cell to `value`, without executing any reads.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356657,"byte_end":356729,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356734,"byte_end":356737,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356742,"byte_end":356752,"line_start":356,"line_end":356,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356757,"byte_end":356760,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ No reads from contract storage will be executed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356765,"byte_end":356817,"line_start":358,"line_end":358,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356822,"byte_end":356825,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This method should be preferred over dereferencing or `get_mut`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356830,"byte_end":356897,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/ in case the returned value is of no interest to the caller.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356902,"byte_end":356965,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356970,"byte_end":356973,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356978,"byte_end":356990,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":356995,"byte_end":356998,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ If accessing the inner value fails.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":357003,"byte_end":357042,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":357047,"byte_end":357056,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380509,"byte_end":380521,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"LazyIndexMap","qualname":"::lazy::lazy_imap::LazyIndexMap","value":"LazyIndexMap {  }","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184}],"decl_id":null,"docs":" A lazy storage chunk that spans over a whole chunk of storage cells.","sig":null,"attributes":[{"value":"/ A lazy storage chunk that spans over a whole chunk of storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380147,"byte_end":380219,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380220,"byte_end":380223,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380224,"byte_end":380234,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380235,"byte_end":380238,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380239,"byte_end":380314,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380315,"byte_end":380389,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ chunk of storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380390,"byte_end":380417,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380418,"byte_end":380421,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ A chunk of storage cells is a contiguous range of `2^32` storage cells.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":380422,"byte_end":380497,"line_start":50,"line_end":50,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383242,"byte_end":383245,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyIndexMap<V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy map.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy map.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":382999,"byte_end":383032,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383037,"byte_end":383040,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383045,"byte_end":383055,"line_start":141,"line_end":141,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383060,"byte_end":383063,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ A lazy map created this way cannot be used to load from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383068,"byte_end":383149,"line_start":143,"line_end":143,"column_start":5,"column_end":86}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383154,"byte_end":383230,"line_start":144,"line_end":144,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383980,"byte_end":383983,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyIndexMap<V>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy map if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy map if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":383918,"byte_end":383968,"line_start":167,"line_end":167,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384841,"byte_end":384844,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyIndexMap<V>>::put","value":"pub fn put(&mut Self, Index, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value at the given index.","sig":null,"attributes":[{"value":"/ Puts the new value at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384362,"byte_end":384404,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384409,"byte_end":384412,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384417,"byte_end":384427,"line_start":184,"line_end":184,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384432,"byte_end":384435,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyIndexMap::put`]`(None)` in order to remove an element.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384440,"byte_end":384510,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ - Prefer this method over [`LazyIndexMap::put_get`] if you are not interested","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384515,"byte_end":384596,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/   in the old value of the same cell index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384601,"byte_end":384647,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384652,"byte_end":384655,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384660,"byte_end":384672,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384677,"byte_end":384680,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384685,"byte_end":384757,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":384762,"byte_end":384829,"line_start":193,"line_end":193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387563,"byte_end":387578,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyIndexMap<V>>::clear_packed_at","value":"pub fn clear_packed_at(&Self, Index)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387078,"byte_end":387144,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387149,"byte_end":387152,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387157,"byte_end":387169,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387174,"byte_end":387177,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy index map's","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387182,"byte_end":387256,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387261,"byte_end":387335,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387340,"byte_end":387385,"line_start":276,"line_end":276,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387390,"byte_end":387393,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387398,"byte_end":387472,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387477,"byte_end":387551,"line_start":279,"line_end":279,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":388511,"byte_end":388517,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"key_at","qualname":"<LazyIndexMap<V>>::key_at","value":"pub fn key_at(&Self, Index) -> Option<Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns an offset key for the given index.\n","sig":null,"attributes":[{"value":"/ Returns an offset key for the given index.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":388453,"byte_end":388499,"line_start":300,"line_end":300,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391988,"byte_end":391991,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyIndexMap<V>>::get","value":"pub fn get(&Self, Index) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391726,"byte_end":391798,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391803,"byte_end":391806,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391811,"byte_end":391823,"line_start":378,"line_end":378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391828,"byte_end":391831,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391836,"byte_end":391908,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":391913,"byte_end":391976,"line_start":381,"line_end":381,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392583,"byte_end":392590,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyIndexMap<V>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392317,"byte_end":392393,"line_start":389,"line_end":389,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392398,"byte_end":392401,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392406,"byte_end":392418,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392423,"byte_end":392426,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392431,"byte_end":392503,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392508,"byte_end":392571,"line_start":394,"line_end":394,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393125,"byte_end":393132,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyIndexMap<V>>::put_get","value":"pub fn put_get(&mut Self, Index, Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value at the given index and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value at the given index and returns the old value if any.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392702,"byte_end":392777,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392782,"byte_end":392785,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392790,"byte_end":392800,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392805,"byte_end":392808,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyIndexMap::put_get`]`(None)` in order to remove an element","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392813,"byte_end":392886,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/   and retrieve the old element back.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392891,"byte_end":392931,"line_start":404,"line_end":404,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392936,"byte_end":392939,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392944,"byte_end":392956,"line_start":406,"line_end":406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392961,"byte_end":392964,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":392969,"byte_end":393041,"line_start":408,"line_end":408,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393046,"byte_end":393113,"line_start":409,"line_end":409,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393571,"byte_end":393575,"line_start":422,"line_end":422,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyIndexMap<V>>::swap","value":"pub fn swap(&mut Self, Index, Index)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at indices `x` and `y`.","sig":null,"attributes":[{"value":"/ Swaps the values at indices `x` and `y`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393257,"byte_end":393301,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393306,"byte_end":393309,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This operation tries to be as efficient as possible and reuse allocations.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393314,"byte_end":393392,"line_start":416,"line_end":416,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393397,"byte_end":393400,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393405,"byte_end":393417,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393422,"byte_end":393425,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393430,"byte_end":393502,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of one of the elements failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":393507,"byte_end":393559,"line_start":421,"line_end":421,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4975},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249055,"byte_end":249059,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4977}],"decl_id":null,"docs":" A lazy storage entity.","sig":null,"attributes":[{"value":"/ A lazy storage entity.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248840,"byte_end":248866,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248867,"byte_end":248870,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This loads its value from storage upon first use.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248871,"byte_end":248924,"line_start":58,"line_end":58,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248925,"byte_end":248928,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248929,"byte_end":248939,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248940,"byte_end":248943,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Use this if the storage field doesn't need to be loaded in some or most cases.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248944,"byte_end":249026,"line_start":62,"line_end":62,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250061,"byte_end":250064,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Lazy<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an eagerly populated lazy storage value.\n","sig":null,"attributes":[{"value":"/ Creates an eagerly populated lazy storage value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249981,"byte_end":250033,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250038,"byte_end":250049,"line_start":112,"line_end":112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250690,"byte_end":250693,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"get","qualname":"<Lazy<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the lazily loaded value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the lazily loaded value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250405,"byte_end":250463,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250468,"byte_end":250471,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250476,"byte_end":250486,"line_start":134,"line_end":134,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250491,"byte_end":250494,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the contract storage if this did not happen before.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250499,"byte_end":250580,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250585,"byte_end":250588,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250593,"byte_end":250605,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250610,"byte_end":250613,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250618,"byte_end":250662,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250667,"byte_end":250678,"line_start":141,"line_end":141,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251080,"byte_end":251087,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lazy<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the lazily loaded value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the lazily loaded value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250791,"byte_end":250853,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250858,"byte_end":250861,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250866,"byte_end":250876,"line_start":148,"line_end":148,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250881,"byte_end":250884,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the contract storage if this did not happen before.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250889,"byte_end":250970,"line_start":150,"line_end":150,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250975,"byte_end":250978,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250983,"byte_end":250995,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251000,"byte_end":251003,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251008,"byte_end":251052,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251057,"byte_end":251068,"line_start":155,"line_end":155,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251595,"byte_end":251598,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"set","qualname":"<Lazy<T>>::set","value":"pub fn set(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value to `value`, without executing any reads.","sig":null,"attributes":[{"value":"/ Sets the value to `value`, without executing any reads.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251197,"byte_end":251256,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251261,"byte_end":251264,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251269,"byte_end":251279,"line_start":162,"line_end":162,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251284,"byte_end":251287,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ No reads from contract storage will be executed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251292,"byte_end":251344,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251349,"byte_end":251352,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method should be preferred over dereferencing or `get_mut`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251357,"byte_end":251424,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/ in case the returned value is of no interest to the caller.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251429,"byte_end":251492,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251497,"byte_end":251500,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251505,"byte_end":251517,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251522,"byte_end":251525,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If accessing the inner value fails.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251530,"byte_end":251569,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251574,"byte_end":251583,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4981},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409223,"byte_end":409229,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Memory","qualname":"::memory::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":4983}],"decl_id":null,"docs":" An instance that is solely stored within the contract's memory.","sig":null,"attributes":[{"value":"/ An instance that is solely stored within the contract's memory.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408696,"byte_end":408763,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408764,"byte_end":408767,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This will never be stored to or loaded from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408768,"byte_end":408833,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408834,"byte_end":408837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408838,"byte_end":408848,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408849,"byte_end":408852,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Use instances of this type in order to have some shared state between","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408853,"byte_end":408926,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ contract messages and functions.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408927,"byte_end":408963,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ Its usage is comparable to the Solidity's `memory` instances.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":408964,"byte_end":409029,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/ Pulling an instance of this type from the contract storage will always","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409030,"byte_end":409104,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ yield a default constructed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409105,"byte_end":409143,"line_start":46,"line_end":46,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410075,"byte_end":410078,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new memory instance.\n","sig":null,"attributes":[{"value":"/ Creates a new memory instance.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410029,"byte_end":410063,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410193,"byte_end":410196,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"get","qualname":"<Memory<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner `T`.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner `T`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410133,"byte_end":410181,"line_start":91,"line_end":91,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410317,"byte_end":410324,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Memory<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the inner `T`.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the inner `T`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410253,"byte_end":410305,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418364,"byte_end":418368,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"Pack","qualname":"::pack::Pack","value":"Pack {  }","parent":null,"children":[{"krate":0,"index":5015},{"krate":0,"index":5016}],"decl_id":null,"docs":" Packs the inner `T` so that it only occupies a single contract storage cell.","sig":null,"attributes":[{"value":"/ Packs the inner `T` so that it only occupies a single contract storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416708,"byte_end":416788,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416789,"byte_end":416792,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416793,"byte_end":416803,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416804,"byte_end":416807,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is an important modular building stone in order to manage contract","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416808,"byte_end":416883,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ storage occupation. By default, types try to distribute themselves onto","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416884,"byte_end":416959,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ their respective contract storage area. However, upon packing them into","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":416960,"byte_end":417035,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ `Pack<T>` they will be compressed to only ever make use of a single","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417036,"byte_end":417107,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ contract storage cell. Sometimes this can be advantageous for performance","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417108,"byte_end":417185,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ reasons.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417186,"byte_end":417198,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417199,"byte_end":417202,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417203,"byte_end":417214,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417215,"byte_end":417218,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - A `Pack<i32>` instance is equivalent to `i32` in its storage occupation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417219,"byte_end":417297,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ - A `Pack<(i32, i32)>` instance will occupy a single cell compared to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417298,"byte_end":417371,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/   `(i32, i32)` which occupies a cell per `i32`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417372,"byte_end":417423,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/ - A `Lazy<Pack<[u8; 8]>>` lazily loads a `Pack<[u8; 8]>` which occupies","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417424,"byte_end":417499,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   a single cell whereas a `[u8; 8]` array would occupy 8 cells in total,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417500,"byte_end":417576,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/   one for each `u8`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417577,"byte_end":417601,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ - Rust collections will never use more than a single cell. So","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417602,"byte_end":417667,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/   `Pack<LinkedList<T>>` and `LinkedList<T>` will occupy the same amount of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417668,"byte_end":417746,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/   cells, namely 1.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417747,"byte_end":417769,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ - Packs can be packed. So for example a","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417770,"byte_end":417813,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/   `Pack<(Pack<(i32, i32)>, Pack<[u8; 8]>)` uses just one cell instead of","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417814,"byte_end":417890,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/   two cells which is the case for `(Pack<(i32, i32)>, Pack<[u8; 8]>)`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417891,"byte_end":417965,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ - Not all `storage` types can be packed. Only those that are implementing","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":417966,"byte_end":418043,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/   the `PackedLayout` trait. For example `storage::Vec<T>` does not implement","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418044,"byte_end":418124,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/   this trait and thus cannot be packed.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418125,"byte_end":418168,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418169,"byte_end":418172,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a general advice pack values together that are frequently used together.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418173,"byte_end":418252,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ Also pack many very small elements (e.g. `u8`, `bool`, `u16`) together.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418253,"byte_end":418328,"line_start":57,"line_end":57,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419583,"byte_end":419586,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Pack<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new packed value.\n","sig":null,"attributes":[{"value":"/ Creates a new packed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419540,"byte_end":419571,"line_start":112,"line_end":112,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419755,"byte_end":419763,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"as_inner","qualname":"<Pack<T>>::as_inner","value":"pub fn as_inner(&Pack<T>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the packed value.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the packed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419692,"byte_end":419743,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419886,"byte_end":419898,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Pack<T>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Pack<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the packed value.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the packed value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419819,"byte_end":419874,"line_start":125,"line_end":125,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3815},{"krate":0,"index":3831},{"krate":0,"index":3859},{"krate":0,"index":3870},{"krate":0,"index":3881},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4011},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4035},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4063},{"krate":0,"index":4065},{"krate":0,"index":4067},{"krate":0,"index":4069},{"krate":0,"index":4071}],"decl_id":null,"docs":" Traits and interfaces to operate with storage entities.","sig":null,"attributes":[{"value":"/ Traits and interfaces to operate with storage entities.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431362,"byte_end":431421,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431422,"byte_end":431425,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Generally a type is said to be a storage entity if it implements the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431426,"byte_end":431498,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ `SpreadLayout` trait. This defines certain constants and routines in order","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431499,"byte_end":431577,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ to tell a smart contract how to load and store instances of this type","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431578,"byte_end":431651,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ from and to the contract's storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431652,"byte_end":431691,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431692,"byte_end":431695,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `PackedLayout` trait can then be implemented on top of the `SpreadLayout`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431696,"byte_end":431777,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ for types that further allow to be stored in the contract storage in a more","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431778,"byte_end":431857,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ compressed format to a single storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":431858,"byte_end":431905,"line_start":24,"line_end":24,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440033,"byte_end":440052,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"forward_pull_packed","qualname":"::traits::impls::forward_pull_packed","value":"pub fn forward_pull_packed<T>(&mut KeyPtr) -> T where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` in packed fashion from the contract storage.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` in packed fashion from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439644,"byte_end":439722,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439723,"byte_end":439726,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Loads the instance from the storage location identified by `ptr`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439727,"byte_end":439796,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ The storage entity is expected to be decodable in its packed form.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439797,"byte_end":439867,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439868,"byte_end":439871,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439872,"byte_end":439882,"line_start":112,"line_end":112,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439883,"byte_end":439886,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed pull operation for the type","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439887,"byte_end":439960,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ instead of a spread storage layout pull operation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":439961,"byte_end":440015,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440016,"byte_end":440025,"line_start":116,"line_end":116,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440546,"byte_end":440565,"line_start":134,"line_end":134,"column_start":8,"column_end":27},"name":"forward_push_packed","qualname":"::traits::impls::forward_push_packed","value":"pub fn forward_push_packed<T>(&T, &mut KeyPtr) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes an instance of type `T` in packed fashion to the contract storage.","sig":null,"attributes":[{"value":"/ Pushes an instance of type `T` in packed fashion to the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440159,"byte_end":440236,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440237,"byte_end":440240,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Stores the instance to the storage location identified by `ptr`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440241,"byte_end":440309,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ The storage entity is expected to be encodable in its packed form.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440310,"byte_end":440380,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440381,"byte_end":440384,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440385,"byte_end":440395,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440396,"byte_end":440399,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed push operation for the type","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440400,"byte_end":440473,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/ instead of a spread storage layout push operation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440474,"byte_end":440528,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440529,"byte_end":440538,"line_start":133,"line_end":133,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":441086,"byte_end":441106,"line_start":151,"line_end":151,"column_start":8,"column_end":28},"name":"forward_clear_packed","qualname":"::traits::impls::forward_clear_packed","value":"pub fn forward_clear_packed<T>(&T, &mut KeyPtr) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears an instance of type `T` in packed fashion from the contract storage.","sig":null,"attributes":[{"value":"/ Clears an instance of type `T` in packed fashion from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440687,"byte_end":440766,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440767,"byte_end":440770,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Clears the instance from the storage location identified by `ptr`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440771,"byte_end":440841,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ The cleared storage entity is expected to be encoded in its packed form.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440842,"byte_end":440918,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440919,"byte_end":440922,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440923,"byte_end":440933,"line_start":146,"line_end":146,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440934,"byte_end":440937,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed clear operation for the type","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":440938,"byte_end":441012,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ instead of a spread storage layout clear operation.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":441013,"byte_end":441068,"line_start":149,"line_end":149,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/mod.rs","byte_start":441069,"byte_end":441078,"line_start":150,"line_end":150,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463142,"byte_end":463151,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"ExtKeyPtr","qualname":"::traits::keyptr::ExtKeyPtr","value":"ExtKeyPtr","parent":null,"children":[{"krate":0,"index":3826}],"decl_id":null,"docs":" Extension trait to make `KeyPtr` simpler to use for `T: SpreadLayout` types.\n","sig":null,"attributes":[{"value":"/ Extension trait to make `KeyPtr` simpler to use for `T: SpreadLayout` types.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463051,"byte_end":463131,"line_start":19,"line_end":19,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463302,"byte_end":463310,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"next_for","qualname":"::traits::keyptr::ExtKeyPtr::next_for","value":"pub fn next_for<T>(&mut Self) -> &Key where T: SpreadLayout","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" Advances the key pointer by the same amount of the footprint of the\n generic type parameter of `T` and returns the old value.\n","sig":null,"attributes":[{"value":"/ Advances the key pointer by the same amount of the footprint of the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463158,"byte_end":463229,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ generic type parameter of `T` and returns the old value.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463234,"byte_end":463294,"line_start":22,"line_end":22,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469362,"byte_end":469374,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"PackedLayout","qualname":"::traits::packed::PackedLayout","value":"PackedLayout: SpreadLayout + scale::Encode + scale::Decode","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869}],"decl_id":null,"docs":" Types that can be stored to and loaded from a single contract storage cell.\n","sig":null,"attributes":[{"value":"/ Types that can be stored to and loaded from a single contract storage cell.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469272,"byte_end":469351,"line_start":18,"line_end":18,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469764,"byte_end":469775,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"pull_packed","qualname":"::traits::packed::PackedLayout::pull_packed","value":"pub fn pull_packed(&mut Self, &Key)","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Indicates to `self` that is has just been pulled from the storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that is has just been pulled from the storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469427,"byte_end":469497,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469502,"byte_end":469505,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469510,"byte_end":469520,"line_start":22,"line_end":22,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469525,"byte_end":469528,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469533,"byte_end":469607,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469612,"byte_end":469674,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469679,"byte_end":469756,"line_start":26,"line_end":26,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470144,"byte_end":470155,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"push_packed","qualname":"::traits::packed::PackedLayout::push_packed","value":"pub fn push_packed(&Self, &Key)","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Indicates to `self` that it is about to be pushed to contract storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that it is about to be pushed to contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469803,"byte_end":469877,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469882,"byte_end":469885,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469890,"byte_end":469900,"line_start":31,"line_end":31,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469905,"byte_end":469908,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469913,"byte_end":469987,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469992,"byte_end":470054,"line_start":34,"line_end":34,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470059,"byte_end":470136,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470523,"byte_end":470535,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"clear_packed","qualname":"::traits::packed::PackedLayout::clear_packed","value":"pub fn clear_packed(&Self, &Key)","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Indicates to `self` that it is about to be cleared from contract storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that it is about to be cleared from contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470179,"byte_end":470256,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470261,"byte_end":470264,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470269,"byte_end":470279,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470284,"byte_end":470287,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470292,"byte_end":470366,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470371,"byte_end":470433,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":470438,"byte_end":470515,"line_start":44,"line_end":44,"column_start":5,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471500,"byte_end":471527,"line_start":22,"line_end":22,"column_start":11,"column_end":38},"name":"FOOTPRINT_CLEANUP_THRESHOLD","qualname":"::traits::spread::FOOTPRINT_CLEANUP_THRESHOLD","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" This constant is used by some types to make sure that cleaning up\n behind them won't become way too expensive. Since we are missing\n Substrate's storage bulk removal feature we cannot do better than\n this at the moment.\n The number is arbitrarily chosen. Might need adjustments later.\n","sig":null,"attributes":[{"value":"/ This constant is used by some types to make sure that cleaning up","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471189,"byte_end":471258,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ behind them won't become way too expensive. Since we are missing","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471259,"byte_end":471327,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ Substrate's storage bulk removal feature we cannot do better than","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471328,"byte_end":471397,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ this at the moment.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471398,"byte_end":471421,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/ The number is arbitrarily chosen. Might need adjustments later.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471422,"byte_end":471489,"line_start":21,"line_end":21,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471620,"byte_end":471632,"line_start":25,"line_end":25,"column_start":11,"column_end":23},"name":"SpreadLayout","qualname":"::traits::spread::SpreadLayout","value":"SpreadLayout","parent":null,"children":[{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880}],"decl_id":null,"docs":" Types that can be stored to and loaded from the contract storage.\n","sig":null,"attributes":[{"value":"/ Types that can be stored to and loaded from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471540,"byte_end":471609,"line_start":24,"line_end":24,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472208,"byte_end":472217,"line_start":38,"line_end":38,"column_start":11,"column_end":20},"name":"FOOTPRINT","qualname":"::traits::spread::SpreadLayout::FOOTPRINT","value":"u64","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" The footprint of the type.","sig":null,"attributes":[{"value":"/ The footprint of the type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471639,"byte_end":471669,"line_start":26,"line_end":26,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471674,"byte_end":471677,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This is the number of adjunctive cells the type requires in order to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471682,"byte_end":471754,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ be stored in the contract storage with spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471759,"byte_end":471816,"line_start":29,"line_end":29,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471821,"byte_end":471824,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471829,"byte_end":471843,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471848,"byte_end":471851,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ An instance of type `i32` requires one storage cell, so its footprint is","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471856,"byte_end":471932,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ 1. An instance of type `(i32, i32)` requires 2 storage cells since a","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":471937,"byte_end":472009,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ tuple or any other combined data structure always associates disjunctive","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472014,"byte_end":472090,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ cells for its sub types. The same applies to arrays, e.g. `[i32; 5]`","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472095,"byte_end":472167,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ has a footprint of 5.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472172,"byte_end":472197,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473088,"byte_end":473110,"line_start":54,"line_end":54,"column_start":11,"column_end":33},"name":"REQUIRES_DEEP_CLEAN_UP","qualname":"::traits::spread::SpreadLayout::REQUIRES_DEEP_CLEAN_UP","value":"bool","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" Indicates whether a type requires deep clean-up of its state meaning that\n a clean-up routine has to decode an entity into an instance in order to\n eventually recurse upon its tear-down.\n This is not required for the majority of primitive data types such as `i32`,\n however types such as `storage::Box` that might want to forward the clean-up\n procedure to their inner `T` require a deep clean-up.","sig":null,"attributes":[{"value":"/ Indicates whether a type requires deep clean-up of its state meaning that","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472229,"byte_end":472306,"line_start":40,"line_end":40,"column_start":5,"column_end":82}},{"value":"/ a clean-up routine has to decode an entity into an instance in order to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472311,"byte_end":472386,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ eventually recurse upon its tear-down.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472391,"byte_end":472433,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/ This is not required for the majority of primitive data types such as `i32`,","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472438,"byte_end":472518,"line_start":43,"line_end":43,"column_start":5,"column_end":85}},{"value":"/ however types such as `storage::Box` that might want to forward the clean-up","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472523,"byte_end":472603,"line_start":44,"line_end":44,"column_start":5,"column_end":85}},{"value":"/ procedure to their inner `T` require a deep clean-up.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472608,"byte_end":472665,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472670,"byte_end":472673,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472678,"byte_end":472688,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472693,"byte_end":472696,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The default is set to `true` in order to have correctness by default since","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472701,"byte_end":472779,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ no type invariants break if a deep clean-up is performed on a type that does","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472784,"byte_end":472864,"line_start":50,"line_end":50,"column_start":5,"column_end":85}},{"value":"/ not need it but performing a shallow clean-up for a type that requires a","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472869,"byte_end":472945,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ deep clean-up would break invariants.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472950,"byte_end":472991,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/ This is solely a setting to improve performance upon clean-up for some types.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":472996,"byte_end":473077,"line_start":53,"line_end":53,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473491,"byte_end":473502,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"pull_spread","qualname":"::traits::spread::SpreadLayout::pull_spread","value":"pub fn pull_spread(&mut KeyPtr) -> Self","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" Pulls an instance of `Self` from the contract storage.","sig":null,"attributes":[{"value":"/ Pulls an instance of `Self` from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473130,"byte_end":473188,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473193,"byte_end":473196,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The key pointer denotes the position where the instance is being pulled","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473201,"byte_end":473276,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ from within the contract storage","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473281,"byte_end":473317,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473322,"byte_end":473325,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473330,"byte_end":473340,"line_start":61,"line_end":61,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473345,"byte_end":473348,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method of pulling is depth-first: Sub-types are pulled first and","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473353,"byte_end":473426,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ construct the super-type through this procedure.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473431,"byte_end":473483,"line_start":64,"line_end":64,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473936,"byte_end":473947,"line_start":77,"line_end":77,"column_start":8,"column_end":19},"name":"push_spread","qualname":"::traits::spread::SpreadLayout::push_spread","value":"pub fn push_spread(&Self, &mut KeyPtr)","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" Pushes an instance of `Self` to the contract storage.","sig":null,"attributes":[{"value":"/ Pushes an instance of `Self` to the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473535,"byte_end":473592,"line_start":67,"line_end":67,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473597,"byte_end":473600,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - Tries to spread `Self` to as many storage cells as possible.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473605,"byte_end":473671,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"/ - The key pointer denotes the position where the instance is being pushed","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473676,"byte_end":473753,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/ to the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473758,"byte_end":473786,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473791,"byte_end":473794,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473799,"byte_end":473809,"line_start":73,"line_end":73,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473814,"byte_end":473817,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method of pushing is depth-first: Sub-types are pushed before","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473822,"byte_end":473892,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ their parent or super type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473897,"byte_end":473928,"line_start":76,"line_end":76,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474433,"byte_end":474445,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"clear_spread","qualname":"::traits::spread::SpreadLayout::clear_spread","value":"pub fn clear_spread(&Self, &mut KeyPtr)","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" Clears an instance of `Self` from the contract storage.","sig":null,"attributes":[{"value":"/ Clears an instance of `Self` from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":473979,"byte_end":474038,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474043,"byte_end":474046,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ - Tries to clean `Self` from contract storage as if `self` was stored","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474051,"byte_end":474124,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/   in it using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474129,"byte_end":474161,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ - The key pointer denotes the position where the instance is being cleared","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474166,"byte_end":474244,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/   from the contract storage.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474249,"byte_end":474281,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474286,"byte_end":474289,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474294,"byte_end":474304,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474309,"byte_end":474312,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method of clearing is depth-first: Sub-types are cleared before","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474317,"byte_end":474389,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ their parent or super type.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/spread.rs","byte_start":474394,"byte_end":474425,"line_start":89,"line_end":89,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3987},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475345,"byte_end":475358,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"StorageLayout","qualname":"::traits::layout::StorageLayout","value":"StorageLayout","parent":null,"children":[{"krate":0,"index":3988}],"decl_id":null,"docs":" Implemented by types that have a storage layout.\n","sig":null,"attributes":[{"value":"/ Implemented by types that have a storage layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475282,"byte_end":475334,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475545,"byte_end":475551,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"layout","qualname":"::traits::layout::StorageLayout::layout","value":"pub fn layout(&mut KeyPtr) -> Layout","parent":{"krate":0,"index":3987},"children":[],"decl_id":null,"docs":" Returns the static storage layout of `Self`.","sig":null,"attributes":[{"value":"/ Returns the static storage layout of `Self`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475365,"byte_end":475413,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475418,"byte_end":475421,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The given key pointer is guiding the allocation of static fields onto","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475426,"byte_end":475499,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ the contract storage regions.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475504,"byte_end":475537,"line_start":36,"line_end":36,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":3989},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475672,"byte_end":475690,"line_start":41,"line_end":41,"column_start":11,"column_end":29},"name":"LayoutCryptoHasher","qualname":"::traits::layout::LayoutCryptoHasher","value":"LayoutCryptoHasher","parent":null,"children":[{"krate":0,"index":3990}],"decl_id":null,"docs":" Types implementing this trait are supported layouting crypto hashers.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait are supported layouting crypto hashers.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475588,"byte_end":475661,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475753,"byte_end":475766,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"crypto_hasher","qualname":"::traits::layout::LayoutCryptoHasher::crypto_hasher","value":"pub fn crypto_hasher() -> CryptoHasher","parent":{"krate":0,"index":3989},"children":[],"decl_id":null,"docs":" Returns the layout crypto hasher for `Self`.\n","sig":null,"attributes":[{"value":"/ Returns the layout crypto hasher for `Self`.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475697,"byte_end":475745,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":4061},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433139,"byte_end":433155,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"pull_spread_root","qualname":"::traits::pull_spread_root","value":"pub fn pull_spread_root<T>(&Key) -> T where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` from the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` from the contract storage using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432670,"byte_end":432750,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432751,"byte_end":432754,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432755,"byte_end":432826,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pulled from.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432827,"byte_end":432873,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432874,"byte_end":432877,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432878,"byte_end":432888,"line_start":75,"line_end":75,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432889,"byte_end":432892,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432893,"byte_end":432966,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/   the contract storage using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":432967,"byte_end":433014,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433015,"byte_end":433090,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433091,"byte_end":433131,"line_start":80,"line_end":80,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433760,"byte_end":433777,"line_start":100,"line_end":100,"column_start":8,"column_end":25},"name":"clear_spread_root","qualname":"::traits::clear_spread_root","value":"pub fn clear_spread_root<T>(&T, &Key) where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears the entity from the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Clears the entity from the contract storage using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433302,"byte_end":433370,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433371,"byte_end":433374,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433375,"byte_end":433446,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being cleared from.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433447,"byte_end":433494,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433495,"byte_end":433498,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433499,"byte_end":433509,"line_start":94,"line_end":94,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433510,"byte_end":433513,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433514,"byte_end":433587,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/   the contract storage using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433588,"byte_end":433635,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433636,"byte_end":433711,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433712,"byte_end":433752,"line_start":99,"line_end":99,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4065},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434368,"byte_end":434384,"line_start":119,"line_end":119,"column_start":8,"column_end":24},"name":"push_spread_root","qualname":"::traits::push_spread_root","value":"pub fn push_spread_root<T>(&T, &Key) where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes the entity to the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Pushes the entity to the contract storage using spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":433941,"byte_end":434007,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434008,"byte_end":434011,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434012,"byte_end":434083,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pushed to.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434084,"byte_end":434128,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434129,"byte_end":434132,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434133,"byte_end":434143,"line_start":113,"line_end":113,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434144,"byte_end":434147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ - The routine will push the given entity to the contract storage using","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434148,"byte_end":434222,"line_start":115,"line_end":115,"column_start":1,"column_end":75}},{"value":"/   spread layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434223,"byte_end":434243,"line_start":116,"line_end":116,"column_start":1,"column_end":21}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434244,"byte_end":434319,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434320,"byte_end":434360,"line_start":118,"line_end":118,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4067},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435016,"byte_end":435032,"line_start":138,"line_end":138,"column_start":8,"column_end":24},"name":"pull_packed_root","qualname":"::traits::pull_packed_root","value":"pub fn pull_packed_root<T>(&Key) -> T where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` from the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` from the contract storage using packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434547,"byte_end":434627,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434628,"byte_end":434631,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434632,"byte_end":434703,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pulled from.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434704,"byte_end":434750,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434751,"byte_end":434754,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434755,"byte_end":434765,"line_start":132,"line_end":132,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434766,"byte_end":434769,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434770,"byte_end":434843,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/   the contract storage using packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434844,"byte_end":434891,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434892,"byte_end":434967,"line_start":136,"line_end":136,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":434968,"byte_end":435008,"line_start":137,"line_end":137,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435757,"byte_end":435773,"line_start":160,"line_end":160,"column_start":8,"column_end":24},"name":"push_packed_root","qualname":"::traits::push_packed_root","value":"pub fn push_packed_root<T>(&T, &Key) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes the entity to the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Pushes the entity to the contract storage using packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435330,"byte_end":435396,"line_start":149,"line_end":149,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435397,"byte_end":435400,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435401,"byte_end":435472,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pushed to.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435473,"byte_end":435517,"line_start":152,"line_end":152,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435518,"byte_end":435521,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435522,"byte_end":435532,"line_start":154,"line_end":154,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435533,"byte_end":435536,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ - The routine will push the given entity to the contract storage using","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435537,"byte_end":435611,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/   packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435612,"byte_end":435632,"line_start":157,"line_end":157,"column_start":1,"column_end":21}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435633,"byte_end":435708,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435709,"byte_end":435749,"line_start":159,"line_end":159,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4071},"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436404,"byte_end":436421,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"clear_packed_root","qualname":"::traits::clear_packed_root","value":"pub fn clear_packed_root<T>(&T, &Key) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears the entity from the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Clears the entity from the contract storage using packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":435946,"byte_end":436014,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436015,"byte_end":436018,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436019,"byte_end":436090,"line_start":170,"line_end":170,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being cleared from.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436091,"byte_end":436138,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436139,"byte_end":436142,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436143,"byte_end":436153,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436154,"byte_end":436157,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436158,"byte_end":436231,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/   the contract storage using packed layout.","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436232,"byte_end":436279,"line_start":176,"line_end":176,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436280,"byte_end":436355,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/mod.rs","byte_start":436356,"byte_end":436396,"line_start":178,"line_end":178,"column_start":1,"column_end":41}}]}],"impls":[{"id":4,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":9518,"byte_end":9522,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10163,"byte_end":10167,"line_start":75,"line_end":75,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10404,"byte_end":10408,"line_start":86,"line_end":86,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10815,"byte_end":10832,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":11719,"byte_end":11732,"line_start":123,"line_end":123,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":14677,"byte_end":14693,"line_start":41,"line_end":41,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":14968,"byte_end":14984,"line_start":51,"line_end":51,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":15423,"byte_end":15439,"line_start":69,"line_end":69,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20421,"byte_end":20431,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20638,"byte_end":20648,"line_start":31,"line_end":31,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20838,"byte_end":20848,"line_start":40,"line_end":40,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20917,"byte_end":20927,"line_start":42,"line_end":42,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":21629,"byte_end":21639,"line_start":63,"line_end":63,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":21850,"byte_end":21860,"line_start":72,"line_end":72,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22081,"byte_end":22091,"line_start":81,"line_end":81,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22289,"byte_end":22299,"line_start":90,"line_end":90,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22436,"byte_end":22446,"line_start":99,"line_end":99,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22602,"byte_end":22612,"line_start":108,"line_end":108,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22759,"byte_end":22769,"line_start":117,"line_end":117,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22915,"byte_end":22925,"line_start":126,"line_end":126,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":23090,"byte_end":23100,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":24340,"byte_end":24350,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":24635,"byte_end":24645,"line_start":50,"line_end":50,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":25708,"byte_end":25718,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26109,"byte_end":26119,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26717,"byte_end":26727,"line_start":117,"line_end":117,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26978,"byte_end":26988,"line_start":128,"line_end":128,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18342,"byte_end":18345,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18930,"byte_end":18933,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":29811,"byte_end":29832,"line_start":69,"line_end":69,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":30069,"byte_end":30090,"line_start":78,"line_end":78,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":49560,"byte_end":49568,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":50696,"byte_end":50704,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":51001,"byte_end":51009,"line_start":142,"line_end":142,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":51451,"byte_end":51459,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":55117,"byte_end":55126,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":55943,"byte_end":55955,"line_start":81,"line_end":81,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56130,"byte_end":56141,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":62526,"byte_end":62537,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63564,"byte_end":63568,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":64007,"byte_end":64011,"line_start":343,"line_end":343,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/impls.rs","byte_start":65462,"byte_end":65472,"line_start":22,"line_end":22,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/impls.rs","byte_start":65701,"byte_end":65711,"line_start":36,"line_end":36,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67342,"byte_end":67349,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67668,"byte_end":67675,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":68121,"byte_end":68128,"line_start":70,"line_end":70,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":68514,"byte_end":68521,"line_start":87,"line_end":87,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":69117,"byte_end":69124,"line_start":112,"line_end":112,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":70368,"byte_end":70378,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":71058,"byte_end":71069,"line_start":65,"line_end":65,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":71559,"byte_end":71569,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40747,"byte_end":40757,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41233,"byte_end":41243,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44119,"byte_end":44129,"line_start":177,"line_end":177,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45441,"byte_end":45448,"line_start":219,"line_end":219,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45623,"byte_end":45630,"line_start":230,"line_end":230,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45896,"byte_end":45903,"line_start":243,"line_end":243,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":46144,"byte_end":46151,"line_start":255,"line_end":255,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80168,"byte_end":80177,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80321,"byte_end":80330,"line_start":40,"line_end":40,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80620,"byte_end":80628,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":81201,"byte_end":81210,"line_start":68,"line_end":68,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":83827,"byte_end":83835,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84314,"byte_end":84323,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84726,"byte_end":84735,"line_start":77,"line_end":77,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84888,"byte_end":84896,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":74220,"byte_end":74228,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95606,"byte_end":95615,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95722,"byte_end":95731,"line_start":37,"line_end":37,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95749,"byte_end":95758,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101648,"byte_end":101655,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101930,"byte_end":101934,"line_start":46,"line_end":46,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102200,"byte_end":102204,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102235,"byte_end":102239,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102912,"byte_end":102916,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":103481,"byte_end":103488,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":103980,"byte_end":103987,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":104018,"byte_end":104025,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":104702,"byte_end":104709,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":105099,"byte_end":105106,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112155,"byte_end":112163,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112452,"byte_end":112460,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113404,"byte_end":113412,"line_start":84,"line_end":84,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":114107,"byte_end":114115,"line_start":104,"line_end":104,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118051,"byte_end":118064,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118142,"byte_end":118155,"line_start":27,"line_end":27,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118328,"byte_end":118341,"line_start":36,"line_end":36,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118368,"byte_end":118381,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118556,"byte_end":118569,"line_start":46,"line_end":46,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118747,"byte_end":118760,"line_start":54,"line_end":54,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118960,"byte_end":118973,"line_start":62,"line_end":62,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120427,"byte_end":120435,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120786,"byte_end":120794,"line_start":51,"line_end":51,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120825,"byte_end":120833,"line_start":53,"line_end":53,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":121885,"byte_end":121893,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":122953,"byte_end":122964,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":123323,"byte_end":123334,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":123365,"byte_end":123376,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":124441,"byte_end":124452,"line_start":173,"line_end":173,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":125556,"byte_end":125567,"line_start":207,"line_end":207,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":125844,"byte_end":125855,"line_start":217,"line_end":217,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":126412,"byte_end":126423,"line_start":240,"line_end":240,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":126851,"byte_end":126862,"line_start":256,"line_end":256,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127179,"byte_end":127193,"line_start":267,"line_end":267,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127478,"byte_end":127492,"line_start":277,"line_end":277,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127989,"byte_end":128003,"line_start":297,"line_end":297,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":128337,"byte_end":128351,"line_start":310,"line_end":310,"column_start":32,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":129515,"byte_end":129528,"line_start":45,"line_end":45,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":129939,"byte_end":129946,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":130349,"byte_end":130356,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":130509,"byte_end":130522,"line_start":81,"line_end":81,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87374,"byte_end":87380,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":150822,"byte_end":150836,"line_start":40,"line_end":40,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151057,"byte_end":151071,"line_start":52,"line_end":52,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151303,"byte_end":151317,"line_start":64,"line_end":64,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151692,"byte_end":151706,"line_start":79,"line_end":79,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":152753,"byte_end":152767,"line_start":122,"line_end":122,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153123,"byte_end":153137,"line_start":139,"line_end":139,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153483,"byte_end":153497,"line_start":156,"line_end":156,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153950,"byte_end":153964,"line_start":173,"line_end":173,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155366,"byte_end":155370,"line_start":43,"line_end":43,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155802,"byte_end":155806,"line_start":61,"line_end":61,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":156378,"byte_end":156382,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":156893,"byte_end":156897,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157084,"byte_end":157088,"line_start":114,"line_end":114,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157727,"byte_end":157734,"line_start":139,"line_end":139,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":158174,"byte_end":158181,"line_start":157,"line_end":157,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":158833,"byte_end":158840,"line_start":180,"line_end":180,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159355,"byte_end":159362,"line_start":203,"line_end":203,"column_start":41,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159549,"byte_end":159556,"line_start":212,"line_end":212,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160096,"byte_end":160102,"line_start":235,"line_end":235,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160499,"byte_end":160505,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160971,"byte_end":160977,"line_start":274,"line_end":274,"column_start":41,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161164,"byte_end":161170,"line_start":283,"line_end":283,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161680,"byte_end":161689,"line_start":305,"line_end":305,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162094,"byte_end":162103,"line_start":322,"line_end":322,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162573,"byte_end":162582,"line_start":344,"line_end":344,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162769,"byte_end":162778,"line_start":353,"line_end":353,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163256,"byte_end":163260,"line_start":375,"line_end":375,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163656,"byte_end":163660,"line_start":392,"line_end":392,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163988,"byte_end":163992,"line_start":411,"line_end":411,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":164062,"byte_end":164066,"line_start":413,"line_end":413,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":165564,"byte_end":165578,"line_start":54,"line_end":54,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":166289,"byte_end":166299,"line_start":76,"line_end":76,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":166773,"byte_end":166783,"line_start":96,"line_end":96,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":167168,"byte_end":167182,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135289,"byte_end":135296,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137948,"byte_end":137955,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":138935,"byte_end":138942,"line_start":262,"line_end":262,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144718,"byte_end":144723,"line_start":410,"line_end":410,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147486,"byte_end":147497,"line_start":490,"line_end":490,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148289,"byte_end":148302,"line_start":516,"line_end":516,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":177840,"byte_end":177848,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":177995,"byte_end":178003,"line_start":34,"line_end":34,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":178464,"byte_end":178472,"line_start":54,"line_end":54,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179144,"byte_end":179152,"line_start":84,"line_end":84,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179394,"byte_end":179402,"line_start":98,"line_end":98,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179661,"byte_end":179669,"line_start":112,"line_end":112,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179950,"byte_end":179958,"line_start":124,"line_end":124,"column_start":43,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":181106,"byte_end":181110,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":181555,"byte_end":181559,"line_start":54,"line_end":54,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":182328,"byte_end":182332,"line_start":85,"line_end":85,"column_start":51,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":182421,"byte_end":182425,"line_start":87,"line_end":87,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":183347,"byte_end":183354,"line_start":123,"line_end":123,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":183813,"byte_end":183820,"line_start":143,"line_end":143,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":184539,"byte_end":184546,"line_start":161,"line_end":161,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":185319,"byte_end":185326,"line_start":192,"line_end":192,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":185415,"byte_end":185422,"line_start":194,"line_end":194,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/storage.rs","byte_start":186935,"byte_end":186943,"line_start":35,"line_end":35,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/storage.rs","byte_start":187429,"byte_end":187437,"line_start":51,"line_end":51,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169942,"byte_end":169950,"line_start":67,"line_end":67,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":170066,"byte_end":170074,"line_start":76,"line_end":76,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":170918,"byte_end":170926,"line_start":102,"line_end":102,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171587,"byte_end":171595,"line_start":133,"line_end":133,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173293,"byte_end":173301,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173699,"byte_end":173707,"line_start":209,"line_end":209,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211059,"byte_end":211071,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211186,"byte_end":211198,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211303,"byte_end":211315,"line_start":46,"line_end":46,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211687,"byte_end":211699,"line_start":62,"line_end":62,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":212047,"byte_end":212059,"line_start":77,"line_end":77,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":212823,"byte_end":212835,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213058,"byte_end":213070,"line_start":128,"line_end":128,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213314,"byte_end":213326,"line_start":142,"line_end":142,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213588,"byte_end":213600,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":214903,"byte_end":214907,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":215374,"byte_end":215378,"line_start":64,"line_end":64,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216185,"byte_end":216189,"line_start":98,"line_end":98,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216259,"byte_end":216263,"line_start":100,"line_end":100,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":217333,"byte_end":217340,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":217821,"byte_end":217828,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":218530,"byte_end":218537,"line_start":182,"line_end":182,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":219346,"byte_end":219353,"line_start":216,"line_end":216,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":219423,"byte_end":219430,"line_start":218,"line_end":218,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220428,"byte_end":220435,"line_start":259,"line_end":259,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220746,"byte_end":220753,"line_start":274,"line_end":274,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":221403,"byte_end":221410,"line_start":301,"line_end":301,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":221480,"byte_end":221487,"line_start":303,"line_end":303,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223222,"byte_end":223228,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223453,"byte_end":223465,"line_start":58,"line_end":58,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223942,"byte_end":223948,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224351,"byte_end":224357,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224513,"byte_end":224518,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224992,"byte_end":224997,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":225537,"byte_end":225549,"line_start":140,"line_end":140,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191069,"byte_end":191074,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191965,"byte_end":191970,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":194524,"byte_end":194529,"line_start":224,"line_end":224,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":195502,"byte_end":195507,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":196831,"byte_end":196836,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2205},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237002,"byte_end":237012,"line_start":28,"line_end":28,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237141,"byte_end":237151,"line_start":37,"line_end":37,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237593,"byte_end":237603,"line_start":57,"line_end":57,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238460,"byte_end":238470,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238693,"byte_end":238703,"line_start":113,"line_end":113,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238945,"byte_end":238955,"line_start":127,"line_end":127,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":239217,"byte_end":239227,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":240335,"byte_end":240339,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":240764,"byte_end":240768,"line_start":54,"line_end":54,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":241518,"byte_end":241522,"line_start":85,"line_end":85,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":241592,"byte_end":241596,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242476,"byte_end":242483,"line_start":123,"line_end":123,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242922,"byte_end":242929,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":243629,"byte_end":243636,"line_start":161,"line_end":161,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":244390,"byte_end":244397,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":244467,"byte_end":244474,"line_start":194,"line_end":194,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/storage.rs","byte_start":246065,"byte_end":246075,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/storage.rs","byte_start":246548,"byte_end":246558,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228273,"byte_end":228276,"line_start":71,"line_end":71,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228373,"byte_end":228376,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228862,"byte_end":228865,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229690,"byte_end":229693,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231378,"byte_end":231381,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231767,"byte_end":231770,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259926,"byte_end":259939,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":260143,"byte_end":260154,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":261768,"byte_end":261779,"line_start":235,"line_end":235,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":262501,"byte_end":262512,"line_start":258,"line_end":258,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":263848,"byte_end":263859,"line_start":297,"line_end":297,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":263984,"byte_end":263995,"line_start":306,"line_end":306,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264346,"byte_end":264357,"line_start":323,"line_end":323,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264691,"byte_end":264702,"line_start":340,"line_end":340,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":267141,"byte_end":267152,"line_start":417,"line_end":417,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":270512,"byte_end":270523,"line_start":491,"line_end":491,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":271630,"byte_end":271641,"line_start":532,"line_end":532,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280258,"byte_end":280263,"line_start":739,"line_end":739,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282782,"byte_end":282793,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283944,"byte_end":283957,"line_start":855,"line_end":855,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304219,"byte_end":304228,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304550,"byte_end":304559,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304728,"byte_end":304737,"line_start":56,"line_end":56,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304829,"byte_end":304838,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304955,"byte_end":304964,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":307668,"byte_end":307680,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308587,"byte_end":308597,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308972,"byte_end":308984,"line_start":97,"line_end":97,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":309559,"byte_end":309571,"line_start":119,"line_end":119,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310174,"byte_end":310186,"line_start":144,"line_end":144,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310458,"byte_end":310470,"line_start":156,"line_end":156,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310853,"byte_end":310865,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312331,"byte_end":312343,"line_start":216,"line_end":216,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313876,"byte_end":313888,"line_start":257,"line_end":257,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":318203,"byte_end":318212,"line_start":78,"line_end":78,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":318807,"byte_end":318822,"line_start":100,"line_end":100,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":319211,"byte_end":319220,"line_start":116,"line_end":116,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":320820,"byte_end":320831,"line_start":179,"line_end":179,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321022,"byte_end":321033,"line_start":187,"line_end":187,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321421,"byte_end":321432,"line_start":206,"line_end":206,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321595,"byte_end":321606,"line_start":212,"line_end":212,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321642,"byte_end":321652,"line_start":214,"line_end":214,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321868,"byte_end":321878,"line_start":223,"line_end":223,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321967,"byte_end":321977,"line_start":229,"line_end":229,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323529,"byte_end":323538,"line_start":276,"line_end":276,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":324928,"byte_end":324937,"line_start":306,"line_end":306,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325026,"byte_end":325035,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326834,"byte_end":326843,"line_start":372,"line_end":372,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":327737,"byte_end":327746,"line_start":401,"line_end":401,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":328036,"byte_end":328045,"line_start":411,"line_end":411,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":347341,"byte_end":347349,"line_start":67,"line_end":67,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":348556,"byte_end":348564,"line_start":109,"line_end":109,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":350263,"byte_end":350271,"line_start":150,"line_end":150,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":350479,"byte_end":350487,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352136,"byte_end":352144,"line_start":208,"line_end":208,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352269,"byte_end":352277,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352408,"byte_end":352416,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":353584,"byte_end":353592,"line_start":274,"line_end":274,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":381256,"byte_end":381269,"line_start":68,"line_end":68,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":381450,"byte_end":381462,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":382599,"byte_end":382611,"line_start":123,"line_end":123,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":382977,"byte_end":382989,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":385708,"byte_end":385720,"line_start":221,"line_end":221,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":386210,"byte_end":386222,"line_start":239,"line_end":239,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387029,"byte_end":387041,"line_start":266,"line_end":266,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":388404,"byte_end":388416,"line_start":296,"line_end":296,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249265,"byte_end":249269,"line_start":76,"line_end":76,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249477,"byte_end":249481,"line_start":86,"line_end":86,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249940,"byte_end":249944,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3310},{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250364,"byte_end":250368,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251695,"byte_end":251699,"line_start":178,"line_end":178,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251818,"byte_end":251822,"line_start":187,"line_end":187,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251972,"byte_end":251976,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252154,"byte_end":252158,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252227,"byte_end":252231,"line_start":207,"line_end":207,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252873,"byte_end":252877,"line_start":228,"line_end":228,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253076,"byte_end":253080,"line_start":237,"line_end":237,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253295,"byte_end":253299,"line_start":246,"line_end":246,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253492,"byte_end":253496,"line_start":255,"line_end":255,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253627,"byte_end":253631,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253781,"byte_end":253785,"line_start":273,"line_end":273,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253926,"byte_end":253930,"line_start":282,"line_end":282,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":254070,"byte_end":254074,"line_start":291,"line_end":291,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":254233,"byte_end":254237,"line_start":302,"line_end":302,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409530,"byte_end":409536,"line_start":62,"line_end":62,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409758,"byte_end":409764,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410013,"byte_end":410019,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410411,"byte_end":410417,"line_start":102,"line_end":102,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410509,"byte_end":410515,"line_start":108,"line_end":108,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410644,"byte_end":410650,"line_start":117,"line_end":117,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410816,"byte_end":410822,"line_start":126,"line_end":126,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410943,"byte_end":410949,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411064,"byte_end":411070,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411195,"byte_end":411201,"line_start":149,"line_end":149,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411330,"byte_end":411336,"line_start":158,"line_end":158,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411456,"byte_end":411462,"line_start":167,"line_end":167,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418701,"byte_end":418705,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419291,"byte_end":419295,"line_start":99,"line_end":99,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419499,"byte_end":419503,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419981,"byte_end":419985,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":420387,"byte_end":420391,"line_start":152,"line_end":152,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":420641,"byte_end":420645,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421148,"byte_end":421152,"line_start":185,"line_end":185,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421551,"byte_end":421555,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421674,"byte_end":421678,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421824,"byte_end":421828,"line_start":218,"line_end":218,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421992,"byte_end":421996,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422155,"byte_end":422159,"line_start":238,"line_end":238,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422347,"byte_end":422351,"line_start":247,"line_end":247,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422420,"byte_end":422424,"line_start":249,"line_end":249,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423116,"byte_end":423120,"line_start":270,"line_end":270,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423329,"byte_end":423333,"line_start":279,"line_end":279,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423553,"byte_end":423557,"line_start":288,"line_end":288,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423755,"byte_end":423759,"line_start":297,"line_end":297,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3574}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423895,"byte_end":423899,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":424054,"byte_end":424058,"line_start":315,"line_end":315,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":424204,"byte_end":424208,"line_start":324,"line_end":324,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3583}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":444912,"byte_end":444923,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":445472,"byte_end":445483,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":446238,"byte_end":446249,"line_start":89,"line_end":89,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":446771,"byte_end":446782,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":447271,"byte_end":447284,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":447806,"byte_end":447819,"line_start":157,"line_end":157,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":451024,"byte_end":451030,"line_start":58,"line_end":58,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":452397,"byte_end":452403,"line_start":98,"line_end":98,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":452955,"byte_end":452961,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":454431,"byte_end":454437,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":455221,"byte_end":455224,"line_start":201,"line_end":201,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":455756,"byte_end":455759,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463390,"byte_end":463396,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":479693,"byte_end":479696,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":479859,"byte_end":479865,"line_start":132,"line_end":132,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3955}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":480488,"byte_end":480494,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3959}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":481339,"byte_end":481342,"line_start":183,"line_end":183,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":481576,"byte_end":481584,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475817,"byte_end":475827,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475941,"byte_end":475949,"line_start":52,"line_end":52,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":476061,"byte_end":476070,"line_start":58,"line_end":58,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1625,"byte_end":1630,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1640,"byte_end":1651,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":292}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38197,"byte_end":38208,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":293}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38218,"byte_end":38226,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":630}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38236,"byte_end":38242,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":739}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38252,"byte_end":38259,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1145}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38269,"byte_end":38277,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1671}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38287,"byte_end":38292,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1902}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/mod.rs","byte_start":38302,"byte_end":38305,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2211}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1661,"byte_end":1665,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2456}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":248402,"byte_end":248411,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2457}},{"kind":"Mod","span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lib.rs","byte_start":1697,"byte_end":1703,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3584}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":9518,"byte_end":9522,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10163,"byte_end":10167,"line_start":75,"line_end":75,"column_start":29,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":4307}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10404,"byte_end":10408,"line_start":86,"line_end":86,"column_start":33,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":10815,"byte_end":10832,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocation.rs","byte_start":11719,"byte_end":11732,"line_start":123,"line_end":123,"column_start":32,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":36},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":14677,"byte_end":14693,"line_start":41,"line_end":41,"column_start":28,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4134},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":14968,"byte_end":14984,"line_start":51,"line_end":51,"column_start":23,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4134},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/allocator.rs","byte_start":15423,"byte_end":15439,"line_start":69,"line_end":69,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20421,"byte_end":20431,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20638,"byte_end":20648,"line_start":31,"line_end":31,"column_start":34,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20838,"byte_end":20848,"line_start":40,"line_end":40,"column_start":27,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":20917,"byte_end":20927,"line_start":42,"line_end":42,"column_start":35,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":21629,"byte_end":21639,"line_start":63,"line_end":63,"column_start":28,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":21850,"byte_end":21860,"line_start":72,"line_end":72,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":8715}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22081,"byte_end":22091,"line_start":81,"line_end":81,"column_start":30,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":8914}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22289,"byte_end":22299,"line_start":90,"line_end":90,"column_start":37,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22436,"byte_end":22446,"line_start":99,"line_end":99,"column_start":37,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22602,"byte_end":22612,"line_start":108,"line_end":108,"column_start":44,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22759,"byte_end":22769,"line_start":117,"line_end":117,"column_start":47,"column_end":57},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":22915,"byte_end":22925,"line_start":126,"line_end":126,"column_start":30,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/impls.rs","byte_start":23090,"byte_end":23100,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4147},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":24340,"byte_end":24350,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":24635,"byte_end":24645,"line_start":50,"line_end":50,"column_start":38,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4147},"to":{"krate":18,"index":797}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":25708,"byte_end":25718,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26109,"byte_end":26119,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4147},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26717,"byte_end":26727,"line_start":117,"line_end":117,"column_start":27,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4147},"to":{"krate":22,"index":213}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/storage.rs","byte_start":26978,"byte_end":26988,"line_start":128,"line_end":128,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18342,"byte_end":18345,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/boxed/mod.rs","byte_start":18930,"byte_end":18933,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":29811,"byte_end":29832,"line_start":69,"line_end":69,"column_start":30,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4170},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/alloc/init.rs","byte_start":30069,"byte_end":30090,"line_start":78,"line_end":78,"column_start":6,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":49560,"byte_end":49568,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":50696,"byte_end":50704,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4197},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":51001,"byte_end":51009,"line_start":142,"line_end":142,"column_start":26,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4197},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children.rs","byte_start":51451,"byte_end":51459,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4197},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":55117,"byte_end":55126,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":55943,"byte_end":55955,"line_start":81,"line_end":81,"column_start":13,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":56130,"byte_end":56141,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":62526,"byte_end":62537,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4250},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":63564,"byte_end":63568,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/children_vec.rs","byte_start":64007,"byte_end":64011,"line_start":343,"line_end":343,"column_start":26,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4271},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/impls.rs","byte_start":65462,"byte_end":65472,"line_start":22,"line_end":22,"column_start":23,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4320},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/impls.rs","byte_start":65701,"byte_end":65711,"line_start":36,"line_end":36,"column_start":29,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4320},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67342,"byte_end":67349,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":67668,"byte_end":67675,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":68121,"byte_end":68128,"line_start":70,"line_end":70,"column_start":26,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":68514,"byte_end":68521,"line_start":87,"line_end":87,"column_start":27,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4288},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/reverse.rs","byte_start":69117,"byte_end":69124,"line_start":112,"line_end":112,"column_start":27,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4288},"to":{"krate":22,"index":213}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":70368,"byte_end":70378,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4320},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":71058,"byte_end":71069,"line_start":65,"line_end":65,"column_start":31,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4250},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/storage.rs","byte_start":71559,"byte_end":71569,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4320},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":40747,"byte_end":40757,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":41233,"byte_end":41243,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":44119,"byte_end":44129,"line_start":177,"line_end":177,"column_start":9,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45441,"byte_end":45448,"line_start":219,"line_end":219,"column_start":18,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45623,"byte_end":45630,"line_start":230,"line_end":230,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":45896,"byte_end":45903,"line_start":243,"line_end":243,"column_start":33,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/binary_heap/mod.rs","byte_start":46144,"byte_end":46151,"line_start":255,"line_end":255,"column_start":13,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80168,"byte_end":80177,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4340},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80321,"byte_end":80330,"line_start":40,"line_end":40,"column_start":23,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4340},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":80620,"byte_end":80628,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/counts.rs","byte_start":81201,"byte_end":81210,"line_start":68,"line_end":68,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":83827,"byte_end":83835,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84314,"byte_end":84323,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4340},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84726,"byte_end":84735,"line_start":77,"line_end":77,"column_start":23,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4340},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/storage.rs","byte_start":84888,"byte_end":84896,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitstash/mod.rs","byte_start":74220,"byte_end":74228,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95606,"byte_end":95615,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4423},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95722,"byte_end":95731,"line_start":37,"line_end":37,"column_start":17,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4423},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitref.rs","byte_start":95749,"byte_end":95758,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101648,"byte_end":101655,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4430},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":101930,"byte_end":101934,"line_start":46,"line_end":46,"column_start":10,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102200,"byte_end":102204,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102235,"byte_end":102239,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":102912,"byte_end":102916,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":103481,"byte_end":103488,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":103980,"byte_end":103987,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":104018,"byte_end":104025,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":104702,"byte_end":104709,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bits256.rs","byte_start":105099,"byte_end":105106,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112155,"byte_end":112163,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":112452,"byte_end":112460,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":113404,"byte_end":113412,"line_start":84,"line_end":84,"column_start":10,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/bitsref.rs","byte_start":114107,"byte_end":114115,"line_start":104,"line_end":104,"column_start":31,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4489},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118051,"byte_end":118064,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118142,"byte_end":118155,"line_start":27,"line_end":27,"column_start":20,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118328,"byte_end":118341,"line_start":36,"line_end":36,"column_start":13,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118368,"byte_end":118381,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118556,"byte_end":118569,"line_start":46,"line_end":46,"column_start":31,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118747,"byte_end":118760,"line_start":54,"line_end":54,"column_start":29,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/impls.rs","byte_start":118960,"byte_end":118973,"line_start":62,"line_end":62,"column_start":37,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4543},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120427,"byte_end":120435,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120786,"byte_end":120794,"line_start":51,"line_end":51,"column_start":32,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4501},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":120825,"byte_end":120833,"line_start":53,"line_end":53,"column_start":23,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4501},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":121885,"byte_end":121893,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4501},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":122953,"byte_end":122964,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":123323,"byte_end":123334,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4515},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":123365,"byte_end":123376,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4515},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":124441,"byte_end":124452,"line_start":173,"line_end":173,"column_start":34,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4515},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":125556,"byte_end":125567,"line_start":207,"line_end":207,"column_start":10,"column_end":21},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":125844,"byte_end":125855,"line_start":217,"line_end":217,"column_start":23,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4524},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":126412,"byte_end":126423,"line_start":240,"line_end":240,"column_start":34,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4524},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":126851,"byte_end":126862,"line_start":256,"line_end":256,"column_start":32,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4524},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127179,"byte_end":127193,"line_start":267,"line_end":267,"column_start":10,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127478,"byte_end":127492,"line_start":277,"line_end":277,"column_start":23,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4536},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":127989,"byte_end":128003,"line_start":297,"line_end":297,"column_start":34,"column_end":48},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4536},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/iter.rs","byte_start":128337,"byte_end":128351,"line_start":310,"line_end":310,"column_start":32,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4536},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":129515,"byte_end":129528,"line_start":45,"line_end":45,"column_start":28,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4543},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":129939,"byte_end":129946,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4430},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":130349,"byte_end":130356,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4430},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/storage.rs","byte_start":130509,"byte_end":130522,"line_start":81,"line_end":81,"column_start":23,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4543},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/bitvec/mod.rs","byte_start":87374,"byte_end":87380,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":150822,"byte_end":150836,"line_start":40,"line_end":40,"column_start":24,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151057,"byte_end":151071,"line_start":52,"line_end":52,"column_start":27,"column_end":41},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151303,"byte_end":151317,"line_start":64,"line_end":64,"column_start":44,"column_end":58},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":151692,"byte_end":151706,"line_start":79,"line_end":79,"column_start":47,"column_end":61},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":152753,"byte_end":152767,"line_start":122,"line_end":122,"column_start":34,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153123,"byte_end":153137,"line_start":139,"line_end":139,"column_start":40,"column_end":54},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153483,"byte_end":153497,"line_start":156,"line_end":156,"column_start":29,"column_end":43},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/impls.rs","byte_start":153950,"byte_end":153964,"line_start":173,"line_end":173,"column_start":22,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155366,"byte_end":155370,"line_start":43,"line_end":43,"column_start":19,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":155802,"byte_end":155806,"line_start":61,"line_end":61,"column_start":19,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":156378,"byte_end":156382,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4548},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":156893,"byte_end":156897,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4548},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157084,"byte_end":157088,"line_start":114,"line_end":114,"column_start":43,"column_end":47},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4548},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":157727,"byte_end":157734,"line_start":139,"line_end":139,"column_start":19,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":158174,"byte_end":158181,"line_start":157,"line_end":157,"column_start":19,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":158833,"byte_end":158840,"line_start":180,"line_end":180,"column_start":32,"column_end":39},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4572},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159355,"byte_end":159362,"line_start":203,"line_end":203,"column_start":41,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4572},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":159549,"byte_end":159556,"line_start":212,"line_end":212,"column_start":43,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4572},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160096,"byte_end":160102,"line_start":235,"line_end":235,"column_start":19,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160499,"byte_end":160505,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4585},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":160971,"byte_end":160977,"line_start":274,"line_end":274,"column_start":41,"column_end":47},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4585},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161164,"byte_end":161170,"line_start":283,"line_end":283,"column_start":43,"column_end":49},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4585},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":161680,"byte_end":161689,"line_start":305,"line_end":305,"column_start":19,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162094,"byte_end":162103,"line_start":322,"line_end":322,"column_start":32,"column_end":41},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162573,"byte_end":162582,"line_start":344,"line_end":344,"column_start":41,"column_end":50},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":162769,"byte_end":162778,"line_start":353,"line_end":353,"column_start":43,"column_end":52},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163256,"byte_end":163260,"line_start":375,"line_end":375,"column_start":13,"column_end":17},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163656,"byte_end":163660,"line_start":392,"line_end":392,"column_start":26,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4620},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":163988,"byte_end":163992,"line_start":411,"line_end":411,"column_start":35,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4620},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/iter.rs","byte_start":164062,"byte_end":164066,"line_start":413,"line_end":413,"column_start":37,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4620},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":165564,"byte_end":165578,"line_start":54,"line_end":54,"column_start":37,"column_end":51},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4635},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":166289,"byte_end":166299,"line_start":76,"line_end":76,"column_start":26,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":166773,"byte_end":166783,"line_start":96,"line_end":96,"column_start":26,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/storage.rs","byte_start":167168,"byte_end":167182,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4635},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":135289,"byte_end":135296,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":137948,"byte_end":137955,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":138935,"byte_end":138942,"line_start":262,"line_end":262,"column_start":15,"column_end":22},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":144718,"byte_end":144723,"line_start":410,"line_end":410,"column_start":16,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":147486,"byte_end":147497,"line_start":490,"line_end":490,"column_start":16,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/hashmap/mod.rs","byte_start":148289,"byte_end":148302,"line_start":516,"line_end":516,"column_start":16,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":177840,"byte_end":177848,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":177995,"byte_end":178003,"line_start":34,"line_end":34,"column_start":51,"column_end":59},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":178464,"byte_end":178472,"line_start":54,"line_end":54,"column_start":54,"column_end":62},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179144,"byte_end":179152,"line_start":84,"line_end":84,"column_start":39,"column_end":47},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179394,"byte_end":179402,"line_start":98,"line_end":98,"column_start":45,"column_end":53},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179661,"byte_end":179669,"line_start":112,"line_end":112,"column_start":50,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/impls.rs","byte_start":179950,"byte_end":179958,"line_start":124,"line_end":124,"column_start":43,"column_end":51},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":181106,"byte_end":181110,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":181555,"byte_end":181559,"line_start":54,"line_end":54,"column_start":42,"column_end":46},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4672},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":182328,"byte_end":182332,"line_start":85,"line_end":85,"column_start":51,"column_end":55},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4672},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":182421,"byte_end":182425,"line_start":87,"line_end":87,"column_start":53,"column_end":57},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4672},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":183347,"byte_end":183354,"line_start":123,"line_end":123,"column_start":29,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":183813,"byte_end":183820,"line_start":143,"line_end":143,"column_start":29,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":184539,"byte_end":184546,"line_start":161,"line_end":161,"column_start":42,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":185319,"byte_end":185326,"line_start":192,"line_end":192,"column_start":51,"column_end":58},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/iter.rs","byte_start":185415,"byte_end":185422,"line_start":194,"line_end":194,"column_start":53,"column_end":60},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/storage.rs","byte_start":186935,"byte_end":186943,"line_start":35,"line_end":35,"column_start":47,"column_end":55},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4710},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/storage.rs","byte_start":187429,"byte_end":187437,"line_start":51,"line_end":51,"column_start":42,"column_end":50},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4710},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":169942,"byte_end":169950,"line_start":67,"line_end":67,"column_start":37,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":170066,"byte_end":170074,"line_start":76,"line_end":76,"column_start":25,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":170918,"byte_end":170926,"line_start":102,"line_end":102,"column_start":25,"column_end":33},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":171587,"byte_end":171595,"line_start":133,"line_end":133,"column_start":25,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173293,"byte_end":173301,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/smallvec/mod.rs","byte_start":173699,"byte_end":173707,"line_start":209,"line_end":209,"column_start":25,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211059,"byte_end":211071,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211186,"byte_end":211198,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211303,"byte_end":211315,"line_start":46,"line_end":46,"column_start":9,"column_end":21},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":211687,"byte_end":211699,"line_start":62,"line_end":62,"column_start":35,"column_end":47},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":212047,"byte_end":212059,"line_start":77,"line_end":77,"column_start":38,"column_end":50},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":212823,"byte_end":212835,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213058,"byte_end":213070,"line_start":128,"line_end":128,"column_start":29,"column_end":41},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213314,"byte_end":213326,"line_start":142,"line_end":142,"column_start":34,"column_end":46},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/impls.rs","byte_start":213588,"byte_end":213600,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":214903,"byte_end":214907,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":215374,"byte_end":215378,"line_start":64,"line_end":64,"column_start":26,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4720},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216185,"byte_end":216189,"line_start":98,"line_end":98,"column_start":35,"column_end":39},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4720},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":216259,"byte_end":216263,"line_start":100,"line_end":100,"column_start":37,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4720},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":217333,"byte_end":217340,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":217821,"byte_end":217828,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":218530,"byte_end":218537,"line_start":182,"line_end":182,"column_start":26,"column_end":33},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4738},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":219346,"byte_end":219353,"line_start":216,"line_end":216,"column_start":35,"column_end":42},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4738},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":219423,"byte_end":219430,"line_start":218,"line_end":218,"column_start":37,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4738},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220428,"byte_end":220435,"line_start":259,"line_end":259,"column_start":13,"column_end":20},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":220746,"byte_end":220753,"line_start":274,"line_end":274,"column_start":26,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":221403,"byte_end":221410,"line_start":301,"line_end":301,"column_start":35,"column_end":42},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/iter.rs","byte_start":221480,"byte_end":221487,"line_start":303,"line_end":303,"column_start":37,"column_end":44},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223222,"byte_end":223228,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4773},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223453,"byte_end":223465,"line_start":58,"line_end":58,"column_start":31,"column_end":43},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4766},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":223942,"byte_end":223948,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4773},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224351,"byte_end":224357,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4773},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224513,"byte_end":224518,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4817},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":224992,"byte_end":224997,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4817},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/storage.rs","byte_start":225537,"byte_end":225549,"line_start":140,"line_end":140,"column_start":26,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4766},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191069,"byte_end":191074,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":191965,"byte_end":191970,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":194524,"byte_end":194529,"line_start":224,"line_end":224,"column_start":9,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":195502,"byte_end":195507,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/stash/mod.rs","byte_start":196831,"byte_end":196836,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237002,"byte_end":237012,"line_start":28,"line_end":28,"column_start":18,"column_end":28},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237141,"byte_end":237151,"line_start":37,"line_end":37,"column_start":35,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":237593,"byte_end":237603,"line_start":57,"line_end":57,"column_start":38,"column_end":48},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238460,"byte_end":238470,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238693,"byte_end":238703,"line_start":113,"line_end":113,"column_start":29,"column_end":39},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":238945,"byte_end":238955,"line_start":127,"line_end":127,"column_start":34,"column_end":44},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/impls.rs","byte_start":239217,"byte_end":239227,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":240335,"byte_end":240339,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":240764,"byte_end":240768,"line_start":54,"line_end":54,"column_start":26,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4848},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":241518,"byte_end":241522,"line_start":85,"line_end":85,"column_start":35,"column_end":39},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4848},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":241592,"byte_end":241596,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4848},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242476,"byte_end":242483,"line_start":123,"line_end":123,"column_start":13,"column_end":20},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":242922,"byte_end":242929,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":243629,"byte_end":243636,"line_start":161,"line_end":161,"column_start":26,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":244390,"byte_end":244397,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/iter.rs","byte_start":244467,"byte_end":244474,"line_start":194,"line_end":194,"column_start":37,"column_end":44},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/storage.rs","byte_start":246065,"byte_end":246075,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4875},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/storage.rs","byte_start":246548,"byte_end":246558,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4875},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228273,"byte_end":228276,"line_start":71,"line_end":71,"column_start":21,"column_end":24},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4875},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228373,"byte_end":228376,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":228862,"byte_end":228865,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":229690,"byte_end":229693,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231378,"byte_end":231381,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/collections/vec/mod.rs","byte_start":231767,"byte_end":231770,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":259926,"byte_end":259939,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":260143,"byte_end":260154,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":261768,"byte_end":261779,"line_start":235,"line_end":235,"column_start":37,"column_end":48},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2543},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":262501,"byte_end":262512,"line_start":258,"line_end":258,"column_start":32,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2543},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":263848,"byte_end":263859,"line_start":297,"line_end":297,"column_start":27,"column_end":38},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":263984,"byte_end":263995,"line_start":306,"line_end":306,"column_start":40,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":7001}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264346,"byte_end":264357,"line_start":323,"line_end":323,"column_start":34,"column_end":45},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":7014}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":264691,"byte_end":264702,"line_start":340,"line_end":340,"column_start":15,"column_end":26},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":267141,"byte_end":267152,"line_start":417,"line_end":417,"column_start":15,"column_end":26},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":270512,"byte_end":270523,"line_start":491,"line_end":491,"column_start":15,"column_end":26},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":271630,"byte_end":271641,"line_start":532,"line_end":532,"column_start":15,"column_end":26},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":280258,"byte_end":280263,"line_start":739,"line_end":739,"column_start":16,"column_end":21},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":282782,"byte_end":282793,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_hmap.rs","byte_start":283944,"byte_end":283957,"line_start":855,"line_end":855,"column_start":16,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304219,"byte_end":304228,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304550,"byte_end":304559,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304728,"byte_end":304737,"line_start":56,"line_end":56,"column_start":21,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304829,"byte_end":304838,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/cache_cell.rs","byte_start":304955,"byte_end":304964,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":307668,"byte_end":307680,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4913},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308587,"byte_end":308597,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":308972,"byte_end":308984,"line_start":97,"line_end":97,"column_start":26,"column_end":38},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":309559,"byte_end":309571,"line_start":119,"line_end":119,"column_start":27,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4913},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310174,"byte_end":310186,"line_start":144,"line_end":144,"column_start":27,"column_end":39},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4913},"to":{"krate":22,"index":213}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310458,"byte_end":310470,"line_start":156,"line_end":156,"column_start":26,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":310853,"byte_end":310865,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":312331,"byte_end":312343,"line_start":216,"line_end":216,"column_start":9,"column_end":21},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/entry.rs","byte_start":313876,"byte_end":313888,"line_start":257,"line_end":257,"column_start":9,"column_end":21},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":318203,"byte_end":318212,"line_start":78,"line_end":78,"column_start":47,"column_end":56},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2913},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":318807,"byte_end":318822,"line_start":100,"line_end":100,"column_start":39,"column_end":54},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2942},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":319211,"byte_end":319220,"line_start":116,"line_end":116,"column_start":35,"column_end":44},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":320820,"byte_end":320831,"line_start":179,"line_end":179,"column_start":13,"column_end":24},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321022,"byte_end":321033,"line_start":187,"line_end":187,"column_start":26,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":7168}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321421,"byte_end":321432,"line_start":206,"line_end":206,"column_start":37,"column_end":48},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":7032}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321595,"byte_end":321606,"line_start":212,"line_end":212,"column_start":35,"column_end":46},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":7057}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321642,"byte_end":321652,"line_start":214,"line_end":214,"column_start":25,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321868,"byte_end":321878,"line_start":223,"line_end":223,"column_start":37,"column_end":47},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":321967,"byte_end":321977,"line_start":229,"line_end":229,"column_start":25,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":323529,"byte_end":323538,"line_start":276,"line_end":276,"column_start":25,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":324928,"byte_end":324937,"line_start":306,"line_end":306,"column_start":37,"column_end":46},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":325026,"byte_end":325035,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":326834,"byte_end":326843,"line_start":372,"line_end":372,"column_start":42,"column_end":51},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2913},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":327737,"byte_end":327746,"line_start":401,"line_end":401,"column_start":25,"column_end":34},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_array.rs","byte_start":328036,"byte_end":328045,"line_start":411,"line_end":411,"column_start":25,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":347341,"byte_end":347349,"line_start":67,"line_end":67,"column_start":19,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":348556,"byte_end":348564,"line_start":109,"line_end":109,"column_start":18,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":350263,"byte_end":350271,"line_start":150,"line_end":150,"column_start":31,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3079},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":350479,"byte_end":350487,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3079},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352136,"byte_end":352144,"line_start":208,"line_end":208,"column_start":21,"column_end":29},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352269,"byte_end":352277,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":352408,"byte_end":352416,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_cell.rs","byte_start":353584,"byte_end":353592,"line_start":274,"line_end":274,"column_start":9,"column_end":17},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":381256,"byte_end":381269,"line_start":68,"line_end":68,"column_start":23,"column_end":36},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":381450,"byte_end":381462,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":382599,"byte_end":382611,"line_start":123,"line_end":123,"column_start":21,"column_end":33},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":382977,"byte_end":382989,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":385708,"byte_end":385720,"line_start":221,"line_end":221,"column_start":31,"column_end":43},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3181},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":386210,"byte_end":386222,"line_start":239,"line_end":239,"column_start":26,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3181},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":387029,"byte_end":387041,"line_start":266,"line_end":266,"column_start":9,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/lazy_imap.rs","byte_start":388404,"byte_end":388416,"line_start":296,"line_end":296,"column_start":9,"column_end":21},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249265,"byte_end":249269,"line_start":76,"line_end":76,"column_start":31,"column_end":35},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4975},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249477,"byte_end":249481,"line_start":86,"line_end":86,"column_start":26,"column_end":30},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4975},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":249940,"byte_end":249944,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":250364,"byte_end":250368,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251695,"byte_end":251699,"line_start":178,"line_end":178,"column_start":21,"column_end":25},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251818,"byte_end":251822,"line_start":187,"line_end":187,"column_start":21,"column_end":25},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":251972,"byte_end":251976,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252154,"byte_end":252158,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252227,"byte_end":252231,"line_start":207,"line_end":207,"column_start":35,"column_end":39},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":252873,"byte_end":252877,"line_start":228,"line_end":228,"column_start":28,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253076,"byte_end":253080,"line_start":237,"line_end":237,"column_start":32,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":8715}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253295,"byte_end":253299,"line_start":246,"line_end":246,"column_start":30,"column_end":34},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":8914}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253492,"byte_end":253496,"line_start":255,"line_end":255,"column_start":37,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253627,"byte_end":253631,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253781,"byte_end":253785,"line_start":273,"line_end":273,"column_start":44,"column_end":48},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":253926,"byte_end":253930,"line_start":282,"line_end":282,"column_start":47,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":254070,"byte_end":254074,"line_start":291,"line_end":291,"column_start":30,"column_end":34},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/lazy/mod.rs","byte_start":254233,"byte_end":254237,"line_start":302,"line_end":302,"column_start":33,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409530,"byte_end":409536,"line_start":62,"line_end":62,"column_start":31,"column_end":37},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4981},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":409758,"byte_end":409764,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4981},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410013,"byte_end":410019,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410411,"byte_end":410417,"line_start":102,"line_end":102,"column_start":21,"column_end":27},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410509,"byte_end":410515,"line_start":108,"line_end":108,"column_start":21,"column_end":27},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410644,"byte_end":410650,"line_start":117,"line_end":117,"column_start":21,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":8715}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410816,"byte_end":410822,"line_start":126,"line_end":126,"column_start":19,"column_end":25},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":410943,"byte_end":410949,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411064,"byte_end":411070,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411195,"byte_end":411201,"line_start":149,"line_end":149,"column_start":31,"column_end":37},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411330,"byte_end":411336,"line_start":158,"line_end":158,"column_start":23,"column_end":29},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/memory.rs","byte_start":411456,"byte_end":411462,"line_start":167,"line_end":167,"column_start":26,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":418701,"byte_end":418705,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5013},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419291,"byte_end":419295,"line_start":99,"line_end":99,"column_start":27,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5013},"to":{"krate":22,"index":213}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419499,"byte_end":419503,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":419981,"byte_end":419985,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":420387,"byte_end":420391,"line_start":152,"line_end":152,"column_start":31,"column_end":35},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5013},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":420641,"byte_end":420645,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5013},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421148,"byte_end":421152,"line_start":185,"line_end":185,"column_start":26,"column_end":30},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5013},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421551,"byte_end":421555,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421674,"byte_end":421678,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421824,"byte_end":421828,"line_start":218,"line_end":218,"column_start":30,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":421992,"byte_end":421996,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422155,"byte_end":422159,"line_start":238,"line_end":238,"column_start":34,"column_end":38},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422347,"byte_end":422351,"line_start":247,"line_end":247,"column_start":27,"column_end":31},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":422420,"byte_end":422424,"line_start":249,"line_end":249,"column_start":35,"column_end":39},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423116,"byte_end":423120,"line_start":270,"line_end":270,"column_start":28,"column_end":32},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423329,"byte_end":423333,"line_start":279,"line_end":279,"column_start":32,"column_end":36},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":8715}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423553,"byte_end":423557,"line_start":288,"line_end":288,"column_start":30,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":8914}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423755,"byte_end":423759,"line_start":297,"line_end":297,"column_start":37,"column_end":41},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":423895,"byte_end":423899,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":424054,"byte_end":424058,"line_start":315,"line_end":315,"column_start":44,"column_end":48},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/pack.rs","byte_start":424204,"byte_end":424208,"line_start":324,"line_end":324,"column_start":47,"column_end":51},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":444912,"byte_end":444923,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":383}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":445472,"byte_end":445483,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"kind":{"Impl":{"id":384}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":446238,"byte_end":446249,"line_start":89,"line_end":89,"column_start":26,"column_end":37},"kind":{"Impl":{"id":385}},"from":{"krate":5,"index":7074},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":446771,"byte_end":446782,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"kind":{"Impl":{"id":386}},"from":{"krate":5,"index":7074},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":447271,"byte_end":447284,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"kind":{"Impl":{"id":387}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/collections.rs","byte_start":447806,"byte_end":447819,"line_start":157,"line_end":157,"column_start":26,"column_end":39},"kind":{"Impl":{"id":388}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":451024,"byte_end":451030,"line_start":58,"line_end":58,"column_start":26,"column_end":32},"kind":{"Impl":{"id":419}},"from":{"krate":2,"index":32834},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":452397,"byte_end":452403,"line_start":98,"line_end":98,"column_start":26,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":2,"index":32834},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":452955,"byte_end":452961,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":2,"index":32984},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":454431,"byte_end":454437,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"kind":{"Impl":{"id":422}},"from":{"krate":2,"index":32984},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":455221,"byte_end":455224,"line_start":201,"line_end":201,"column_start":26,"column_end":29},"kind":{"Impl":{"id":423}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":3875}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/impls/prims.rs","byte_start":455756,"byte_end":455759,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"kind":{"Impl":{"id":424}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/keyptr.rs","byte_start":463390,"byte_end":463396,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":17,"index":128},"to":{"krate":0,"index":3825}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469376,"byte_end":469388,"line_start":19,"line_end":19,"column_start":25,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":3875},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469398,"byte_end":469404,"line_start":19,"line_end":19,"column_start":47,"column_end":53},"kind":"SuperTrait","from":{"krate":22,"index":195},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/packed.rs","byte_start":469414,"byte_end":469420,"line_start":19,"line_end":19,"column_start":63,"column_end":69},"kind":"SuperTrait","from":{"krate":22,"index":213},"to":{"krate":0,"index":3866}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":479693,"byte_end":479696,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":479859,"byte_end":479865,"line_start":132,"line_end":132,"column_start":27,"column_end":33},"kind":{"Impl":{"id":443}},"from":{"krate":2,"index":32834},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":480488,"byte_end":480494,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"kind":{"Impl":{"id":444}},"from":{"krate":2,"index":32984},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":481339,"byte_end":481342,"line_start":183,"line_end":183,"column_start":27,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/impls.rs","byte_start":481576,"byte_end":481584,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"kind":{"Impl":{"id":446}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":3987}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475817,"byte_end":475827,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":447}},"from":{"krate":16,"index":2480},"to":{"krate":0,"index":3989}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":475941,"byte_end":475949,"line_start":52,"line_end":52,"column_start":29,"column_end":37},"kind":{"Impl":{"id":448}},"from":{"krate":16,"index":2456},"to":{"krate":0,"index":3989}},{"span":{"file_name":"/Users/kentarovadney/.cargo/git/checkouts/ink-1add513eda8f5a89/d4fd3f7/crates/storage/src/traits/layout/mod.rs","byte_start":476061,"byte_end":476070,"line_start":58,"line_end":58,"column_start":29,"column_end":38},"kind":{"Impl":{"id":449}},"from":{"krate":16,"index":2468},"to":{"krate":0,"index":3989}}]}